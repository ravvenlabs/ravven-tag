-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj1\hdlsrc\gaussianFilter\gaussianF_ip_src_nfp_pow_single.vhd
-- Created: 2024-06-19 09:54:13
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: gaussianF_ip_src_nfp_pow_single
-- Source Path: gaussianFilter/gaussianFilter/singleToUint32/nfp_pow_single
-- Hierarchy Level: 2
-- Model version: 8.39
-- 
-- {Latency Strategy = "Min", Denormal Handling = "off"}
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.gaussianF_ip_src_gaussianFilter_pkg.ALL;

ENTITY gaussianF_ip_src_nfp_pow_single IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        nfp_in1                           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        nfp_in2                           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        nfp_out                           :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
        );
END gaussianF_ip_src_nfp_pow_single;


ARCHITECTURE rtl OF gaussianF_ip_src_nfp_pow_single IS

  -- Signals
  SIGNAL Constant8_out1                   : std_logic;  -- ufix1
  SIGNAL Constant7_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Relational_Operator_out1         : std_logic;  -- ufix1
  SIGNAL Delay4_out1                      : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1            : std_logic;  -- ufix1
  SIGNAL Add_out1                         : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Delay3_out1                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Add_add_cast                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Delay1_out1                      : std_logic;  -- ufix1
  SIGNAL nfp_in1_unsigned                 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL aSign                            : std_logic;  -- ufix1
  SIGNAL aExponent                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL aMantissa                        : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Delay1_out1_1                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alpha255_out1                    : std_logic;  -- ufix1
  SIGNAL Compare_To_Zero1_out1            : std_logic;  -- ufix1
  SIGNAL Constant_out1                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Delay_out1                       : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch_out1                      : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Compare_To_Zero_out1             : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1           : std_logic;  -- ufix1
  SIGNAL Delay13_out1                     : std_logic;  -- ufix1
  SIGNAL nfp_in2_unsigned                 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL bSign                            : std_logic;  -- ufix1
  SIGNAL bExponent                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL bMantissa                        : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Delay4_out1_1                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Compare_To_Constant_out1         : std_logic;  -- ufix1
  SIGNAL Compare_To_Zero1_out1_1          : std_logic;  -- ufix1
  SIGNAL Constant_out1_1                  : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Delay3_out1_1                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch_out1_1                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Compare_To_Zero_out1_1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_1         : std_logic;  -- ufix1
  SIGNAL Delay19_out1                     : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_1         : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1           : std_logic;  -- ufix1
  SIGNAL Delay10_out1                     : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_1         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_1         : std_logic;  -- ufix1
  SIGNAL Delay17_out1                     : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_2         : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1           : std_logic;  -- ufix1
  SIGNAL alpha127_out1                    : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_1          : std_logic;  -- ufix1
  SIGNAL Delay11_out1                     : std_logic;  -- ufix1
  SIGNAL Constant_out1_2                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_1         : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1                  : std_logic;  -- ufix1
  SIGNAL Start_1_1_out1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Logical_Operator4_out1_3         : std_logic;  -- ufix1
  SIGNAL Start_1_2_out1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch3_out1                     : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_3_out1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_4_out1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Bit_Slice7_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_2         : std_logic;  -- ufix1
  SIGNAL Start_1_5_out1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_6_out1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch5_out1                     : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_7_out1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_8_out1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Logical_Operator8_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_2          : std_logic;  -- ufix1
  SIGNAL Switch2_out1                     : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch1_out1                     : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch7_out1                     : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch6_out1                     : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch4_out1                     : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_9_out1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_10_out1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch10_out1                    : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_11_out1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_12_out1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch9_out1                     : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch8_out1                     : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Bit_Slice14_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_2         : std_logic;  -- ufix1
  SIGNAL Start_1_13_out1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_14_out1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch12_out1                    : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_15_out1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_16_out1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch14_out1                    : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch13_out1                    : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Logical_Operator8_out1_1         : std_logic;  -- ufix1
  SIGNAL Switch11_out1                    : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch_out1_2                    : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_9_out1_1                 : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_10_out1_1                : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch10_out1_1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_11_out1_1                : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_12_out1_1                : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch9_out1_1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch8_out1_1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Bit_Slice14_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_3         : std_logic;  -- ufix1
  SIGNAL Start_1_13_out1_1                : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_14_out1_1                : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch12_out1_1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_15_out1_1                : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Start_1_16_out1_1                : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch14_out1_1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch13_out1_1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Bit_Concat_out1                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Data_Type_Conversion_out1        : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch11_out1_1                  : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Switch1_out1_1                   : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Add_out1_1                       : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Bit_Slice_out1                   : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_4         : std_logic;  -- ufix1
  SIGNAL Delay20_out1                     : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_4         : std_logic;  -- ufix1
  SIGNAL Delay14_reg                      : std_logic_vector(1 DOWNTO 0);  -- ufix1 [2]
  SIGNAL Delay14_out1                     : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_2         : std_logic;  -- ufix1
  SIGNAL Delay12_out1                     : std_logic;  -- ufix1
  SIGNAL Compare_To_Zero1_out1_2          : std_logic;  -- ufix1
  SIGNAL Delay21_out1                     : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator9_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1_2         : std_logic;  -- ufix1
  SIGNAL Switch16_out1                    : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_3         : std_logic;  -- ufix1
  SIGNAL Constant_out1_3                  : std_logic;  -- ufix1
  SIGNAL Switch3_out1_1                   : std_logic;  -- ufix1
  SIGNAL Delay5_out1                      : std_logic;  -- ufix1
  SIGNAL Delay5_out1_1                    : std_logic;  -- ufix1
  SIGNAL Switch_out1_3                    : std_logic;  -- ufix1
  SIGNAL Switch6_out1_1                   : std_logic;  -- ufix1
  SIGNAL Switch12_out1_2                  : std_logic;  -- ufix1
  SIGNAL Delay9_reg                       : std_logic_vector(29 DOWNTO 0);  -- ufix1 [30]
  SIGNAL Delay9_out1                      : std_logic;  -- ufix1
  SIGNAL Delay18_out1                     : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_3          : std_logic;  -- ufix1
  SIGNAL Delay6_reg                       : std_logic_vector(29 DOWNTO 0);  -- ufix1 [30]
  SIGNAL Delay6_out1                      : std_logic;  -- ufix1
  SIGNAL C3_out1                          : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_4          : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_5         : std_logic;  -- ufix1
  SIGNAL Constant1_out1                   : std_logic;  -- ufix1
  SIGNAL Switch1_out1_2                   : std_logic;  -- ufix1
  SIGNAL Delay3_out1_2                    : std_logic;  -- ufix1
  SIGNAL alpha1_out1                      : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL C_out1                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_Exponent_0_out1               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat1_out1                 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL reinterpretcast_bitconcat_fi_0_1_out1 : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL cast_cfType_ExponentBias_lik_out1 : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL exp_unbiased_cast_cfType_Exp_add_temp : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL exp_unbiased_cast_cfType_Exp_out1 : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Delay24_out1                     : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Delay15_reg                      : vector_of_signed11(0 TO 7);  -- sfix11 [8]
  SIGNAL Delay15_out1                     : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Delay10_reg                      : vector_of_signed11(0 TO 5);  -- sfix11 [6]
  SIGNAL Delay10_out1_1                   : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL alpha0_out1                      : unsigned(50 DOWNTO 0);  -- ufix51
  SIGNAL Bit_Concat_out1_1                : unsigned(61 DOWNTO 0);  -- ufix62
  SIGNAL reinterpretcast_bitconcat_exp_out1 : signed(61 DOWNTO 0);  -- sfix62_En51
  SIGNAL Bit_Concat1_out1_1               : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL reinterpretcast_bitconcat_fi_0_out1 : unsigned(23 DOWNTO 0);  -- ufix24_En23
  SIGNAL Constant_out1_4                  : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Delay25_out1                     : unsigned(23 DOWNTO 0);  -- ufix24_En23
  SIGNAL BitSlice_out1                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Constant1_out1_1                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_2               : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL DTC_out1                         : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL w_1_out1                         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1                  : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL bitsll_w_1_out1_dtc              : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL alpha2_out1                      : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL w_2_out1                         : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL w_2_out1_dtc                     : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL if_w_1_4_out1                    : signed(27 DOWNTO 0);  -- sfix28_En23
  SIGNAL BitSlice_out1_1                  : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL reinterpretcast_bitsliceget_w_out1 : signed(6 DOWNTO 0);  -- sfix7_En2
  SIGNAL w_hat_0_75_out1                  : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1                   : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_5          : std_logic;  -- ufix1
  SIGNAL Constant2_out1                   : std_logic;  -- ufix1
  SIGNAL Bit_Concat2_out1                 : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL reinterpretcast_bitsliceget_w_1_out1 : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL bitsll_w_1_out1_1                : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL BitSlice1_out1                   : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_5         : std_logic;  -- ufix1
  SIGNAL alpha2_out1_1                    : unsigned(24 DOWNTO 0);  -- ufix25_En23
  SIGNAL Bit_Concat1_out1_3               : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL reinterpretcast_bitsliceget_w_2_out1 : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL alpha2_tmp1_out1                 : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL bitsra_w_1_out1                  : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL Bit_Concat3_out1                 : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL reinterpretcast_bitsliceget_w_3_out1 : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL Bitwise_Operator_out1            : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL w_tmp2_out1                      : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL if_w_hat_0_75_1_out1             : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL Delay4_out1_2                    : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL BitSlice_out1_2                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_1 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_1                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_6          : std_logic;  -- ufix1
  SIGNAL Constant2_out1_1                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_1               : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_1 : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL bitsll_w_1_out1_2                : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL BitSlice1_out1_1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_6         : std_logic;  -- ufix1
  SIGNAL alpha2_out1_2                    : unsigned(26 DOWNTO 0);  -- ufix27_En25
  SIGNAL Bit_Concat3_out1_1               : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_1 : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL alpha2_tmp1_out1_1               : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL bitsra_w_1_1_out1                : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL Bit_Concat3_out1_2               : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_2 : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL Bitwise_Operator_out1_1          : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL w_tmp2_out1_1                    : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL if_w_hat_0_75_1_out1_1           : signed(30 DOWNTO 0);  -- sfix31_En26
  SIGNAL BitSlice_out1_3                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_2 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_2                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_2                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_7          : std_logic;  -- ufix1
  SIGNAL Constant2_out1_2                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Concat2_out1_2               : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL reinterpretcast_bitsliceget_w_2_out1_1 : signed(33 DOWNTO 0);  -- sfix34_En29
  SIGNAL bitsll_w_1_out1_3                : signed(33 DOWNTO 0);  -- sfix34_En29
  SIGNAL BitSlice1_out1_2                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_7         : std_logic;  -- ufix1
  SIGNAL alpha2_out1_3                    : unsigned(29 DOWNTO 0);  -- ufix30_En28
  SIGNAL Bit_Concat3_out1_3               : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_3 : signed(33 DOWNTO 0);  -- sfix34_En29
  SIGNAL Bit_Concat_out1_2                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_4               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_3               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_4               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL alpha2_tmp1_out1_2               : signed(33 DOWNTO 0);  -- sfix34_En29
  SIGNAL bitsra_w_1_1_out1_1              : signed(33 DOWNTO 0);  -- sfix34_En29
  SIGNAL Bit_Concat4_out1                 : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_4 : signed(33 DOWNTO 0);  -- sfix34_En29
  SIGNAL Bitwise_Operator_out1_2          : signed(33 DOWNTO 0);  -- sfix34_En29
  SIGNAL w_tmp2_out1_2                    : signed(33 DOWNTO 0);  -- sfix34_En29
  SIGNAL if_w_hat_0_75_1_out1_2           : signed(33 DOWNTO 0);  -- sfix34_En29
  SIGNAL Delay9_out1_1                    : signed(33 DOWNTO 0);  -- sfix34_En29
  SIGNAL BitSlice_out1_4                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_3 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_3                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_3                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_8          : std_logic;  -- ufix1
  SIGNAL Constant2_out1_3                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Concat2_out1_4               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_2_out1_2 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsll_w_1_out1_4                : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_3                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_8         : std_logic;  -- ufix1
  SIGNAL alpha2_out1_4                    : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_5               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_5 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_3                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_5               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_5               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_6               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_3               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_2              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_1               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_6 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_3          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_3                    : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_3           : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice_out1_5                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_4 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_4                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_4                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_9          : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_5                : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_4                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_9         : std_logic;  -- ufix1
  SIGNAL alpha2_out1_5                    : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_7               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_7 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_4                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_6               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_6               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_8               : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1_1               : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_4               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_3              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_2               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_8 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_4          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_4                    : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_4           : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Delay11_out1_1                   : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice_out1_6                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_5 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_5                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_5                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_10         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_6                : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_5                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_10        : std_logic;  -- ufix1
  SIGNAL alpha2_out1_6                    : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_9               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_9 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_5                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_7               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_7               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_10              : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1_2               : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_5               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_4              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_3               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_10 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_5          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_5                    : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_5           : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice_out1_7                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_6 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_6                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_6                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_11         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_7                : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_6                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_11        : std_logic;  -- ufix1
  SIGNAL alpha2_out1_7                    : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_11              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_11 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_6                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_8               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_8               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_12              : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1_3               : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_6               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_5              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_4               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_12 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_6          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_6                    : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_6           : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Delay13_out1_1                   : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice_out1_8                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_7 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_7                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_7                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_12         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_8                : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_7                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_12        : std_logic;  -- ufix1
  SIGNAL alpha2_out1_8                    : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_13              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_13 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_7                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_9               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_9               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_14              : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1_4               : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_7               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_6              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_5               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_14 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_7          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_7                    : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_7           : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice_out1_9                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_8 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_8                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_8                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_13         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_9                : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_8                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_13        : std_logic;  -- ufix1
  SIGNAL alpha2_out1_9                    : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_15              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_15 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_8                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_10              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_10              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_16              : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1_5               : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_8               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_7              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_6               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_16 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_8          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_8                    : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_8           : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Delay15_out1_1                   : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice_out1_10                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_9 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_9                : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_9                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_14         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_10               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_9                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_14        : std_logic;  -- ufix1
  SIGNAL alpha2_out1_10                   : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_17              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_17 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_9                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_11              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_11              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_18              : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1_6               : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_9               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_8              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_7               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_18 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_9          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_9                    : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_9           : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice_out1_11                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_10 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_10               : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_10                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_15         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_11               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_10                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_15        : std_logic;  -- ufix1
  SIGNAL alpha2_out1_11                   : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_19              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_19 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_10               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_12              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_12              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_20              : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1_7               : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_10              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_9              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_8               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_20 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_10         : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_10                   : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_10          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Delay25_out1_1                   : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice_out1_12                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_11 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_11               : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_11                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_16         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_12               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_11                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_16        : std_logic;  -- ufix1
  SIGNAL alpha2_out1_12                   : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_21              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_21 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_11               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_13              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_13              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_22              : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1_8               : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_11              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_10             : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_9               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_22 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_11         : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_11                   : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_11          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice_out1_13                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_12 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_12               : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_12                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_17         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_13               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_12                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_17        : std_logic;  -- ufix1
  SIGNAL alpha2_out1_13                   : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_23              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_23 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_12               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_14              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_14              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_24              : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1_9               : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_12              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_11             : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_10              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_24 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_12         : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_12                   : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_12          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Delay27_out1                     : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice_out1_14                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_13 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_13               : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_13                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_18         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_14               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_13                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_18        : std_logic;  -- ufix1
  SIGNAL alpha2_out1_14                   : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_25              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_25 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_13               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_15              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_15              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_26              : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1_10              : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_13              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_12             : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_11              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_26 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_13         : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_13                   : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_13          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice_out1_15                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL reinterpretcast_bitsliceget_w_out1_14 : signed(8 DOWNTO 0);  -- sfix9_En4
  SIGNAL w_hat_0_75_out1_14               : std_logic;  -- ufix1
  SIGNAL w_hat_0_5_out1_14                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_19         : std_logic;  -- ufix1
  SIGNAL bitsll_w_1_out1_15               : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_14                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_19        : std_logic;  -- ufix1
  SIGNAL alpha2_out1_15                   : unsigned(32 DOWNTO 0);  -- ufix33_En31
  SIGNAL Bit_Concat3_out1_27              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_27 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat_out1_14               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat1_out1_16              : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat2_out1_16              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat3_out1_28              : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL Bit_Concat5_out1_11              : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL alpha2_tmp1_out1_14              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_1_1_out1_13             : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bit_Concat4_out1_12              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL reinterpretcast_bitsliceget_w_3_out1_28 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Bitwise_Operator_out1_14         : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_tmp2_out1_14                   : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_hat_0_75_1_out1_14          : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL Delay37_out1                     : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_0_out1                         : std_logic;  -- ufix1
  SIGNAL Delay19_reg                      : std_logic_vector(5 DOWNTO 0);  -- ufix1 [6]
  SIGNAL Delay19_out1_1                   : std_logic;  -- ufix1
  SIGNAL Constant_out1_5                  : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Log2MinusTable_1_out1            : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL if_w_1_3_out1                    : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Constant1_out1_2                 : unsigned(34 DOWNTO 0);  -- ufix35
  SIGNAL Bit_Concat_out1_15               : unsigned(37 DOWNTO 0);  -- ufix38
  SIGNAL Data_Type_Conversion_out1_1      : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL Delay3_out1_3                    : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL Log2Table_2_1_out1               : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL Log2Table_2_out1                 : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL if_w_hat_0_5_out1                : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL Log2MinusTable_2_out1            : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL if_w_hat_0_75_out1               : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL Delay23_out1                     : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL L_Log2Table_2_1_out1             : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL Constant1_out1_3                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_17              : unsigned(38 DOWNTO 0);  -- ufix39
  SIGNAL reinterpretcast_bitsliceget_w_2_out1_3 : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL Log2Table_int32_3_1_out1         : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL Log2Table_int32_3_out1           : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL if_w_hat_0_5_out1_1              : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL Log2MinusTable_int32_3_out1      : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL if_w_hat_0_75_out1_1             : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL L_Log2Table_2_1_out1_1           : signed(38 DOWNTO 0);  -- sfix39_En36
  SIGNAL Constant_out1_6                  : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_16               : unsigned(39 DOWNTO 0);  -- ufix40
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_2 : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL Delay8_out1                      : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL Log2Table_int32_4_1_out1         : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL Log2Table_int32_4_out1           : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL if_w_hat_0_5_out1_2              : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL Log2MinusTable_int32_4_out1      : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL if_w_hat_0_75_out1_2             : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL Delay17_out1_1                   : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL L_Log2Table_2_1_out1_2           : signed(39 DOWNTO 0);  -- sfix40_En37
  SIGNAL Constant_out1_7                  : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_17               : unsigned(40 DOWNTO 0);  -- ufix41
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_3 : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL Log2Table_int32_5_1_out1         : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL Log2Table_int32_5_out1           : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL if_w_hat_0_5_out1_3              : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL Log2MinusTable_int32_5_out1      : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL if_w_hat_0_75_out1_3             : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL L_Log2Table_2_1_out1_3           : signed(40 DOWNTO 0);  -- sfix41_En38
  SIGNAL Constant_out1_8                  : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_18               : unsigned(41 DOWNTO 0);  -- ufix42
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_4 : signed(41 DOWNTO 0);  -- sfix42_En39
  SIGNAL Delay10_out1_2                   : signed(41 DOWNTO 0);  -- sfix42_En39
  SIGNAL Log2Table_int32_6_1_out1         : signed(41 DOWNTO 0);  -- sfix42_En39
  SIGNAL Log2Table_int32_6_out1           : signed(41 DOWNTO 0);  -- sfix42_En39
  SIGNAL if_w_hat_0_5_out1_4              : signed(41 DOWNTO 0);  -- sfix42_En39
  SIGNAL Log2MinusTable_int32_6_out1      : signed(41 DOWNTO 0);  -- sfix42_En39
  SIGNAL if_w_hat_0_75_out1_4             : signed(41 DOWNTO 0);  -- sfix42_En39
  SIGNAL Delay19_out1_2                   : signed(41 DOWNTO 0);  -- sfix42_En39
  SIGNAL L_Log2Table_2_1_out1_4           : signed(41 DOWNTO 0);  -- sfix42_En39
  SIGNAL Constant_out1_9                  : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_19               : unsigned(42 DOWNTO 0);  -- ufix43
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_5 : signed(42 DOWNTO 0);  -- sfix43_En40
  SIGNAL Log2Table_int32_7_1_out1         : signed(42 DOWNTO 0);  -- sfix43_En40
  SIGNAL Log2Table_int32_7_out1           : signed(42 DOWNTO 0);  -- sfix43_En40
  SIGNAL if_w_hat_0_5_out1_5              : signed(42 DOWNTO 0);  -- sfix43_En40
  SIGNAL Log2MinusTable_int32_7_out1      : signed(42 DOWNTO 0);  -- sfix43_En40
  SIGNAL if_w_hat_0_75_out1_5             : signed(42 DOWNTO 0);  -- sfix43_En40
  SIGNAL L_Log2Table_2_1_out1_5           : signed(42 DOWNTO 0);  -- sfix43_En40
  SIGNAL Constant_out1_10                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_20               : unsigned(43 DOWNTO 0);  -- ufix44
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_6 : signed(43 DOWNTO 0);  -- sfix44_En41
  SIGNAL Delay12_out1_1                   : signed(43 DOWNTO 0);  -- sfix44_En41
  SIGNAL Log2Table_int32_8_1_out1         : signed(43 DOWNTO 0);  -- sfix44_En41
  SIGNAL Log2Table_int32_8_out1           : signed(43 DOWNTO 0);  -- sfix44_En41
  SIGNAL if_w_hat_0_5_out1_6              : signed(43 DOWNTO 0);  -- sfix44_En41
  SIGNAL Log2MinusTable_int32_8_out1      : signed(43 DOWNTO 0);  -- sfix44_En41
  SIGNAL if_w_hat_0_75_out1_6             : signed(43 DOWNTO 0);  -- sfix44_En41
  SIGNAL Delay21_out1_1                   : signed(43 DOWNTO 0);  -- sfix44_En41
  SIGNAL L_Log2Table_2_1_out1_6           : signed(43 DOWNTO 0);  -- sfix44_En41
  SIGNAL Constant_out1_11                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_21               : unsigned(44 DOWNTO 0);  -- ufix45
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_7 : signed(44 DOWNTO 0);  -- sfix45_En42
  SIGNAL Log2Table_int32_9_1_out1         : signed(44 DOWNTO 0);  -- sfix45_En42
  SIGNAL Log2Table_int32_9_out1           : signed(44 DOWNTO 0);  -- sfix45_En42
  SIGNAL if_w_hat_0_5_out1_7              : signed(44 DOWNTO 0);  -- sfix45_En42
  SIGNAL Log2MinusTable_int32_9_out1      : signed(44 DOWNTO 0);  -- sfix45_En42
  SIGNAL if_w_hat_0_75_out1_7             : signed(44 DOWNTO 0);  -- sfix45_En42
  SIGNAL L_Log2Table_2_1_out1_7           : signed(44 DOWNTO 0);  -- sfix45_En42
  SIGNAL Constant_out1_12                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_22               : unsigned(45 DOWNTO 0);  -- ufix46
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_8 : signed(45 DOWNTO 0);  -- sfix46_En43
  SIGNAL Delay14_out1_1                   : signed(45 DOWNTO 0);  -- sfix46_En43
  SIGNAL Log2Table_int32_10_1_out1        : signed(45 DOWNTO 0);  -- sfix46_En43
  SIGNAL Log2Table_int32_10_out1          : signed(45 DOWNTO 0);  -- sfix46_En43
  SIGNAL if_w_hat_0_5_out1_8              : signed(45 DOWNTO 0);  -- sfix46_En43
  SIGNAL Log2MinusTable_int32_10_out1     : signed(45 DOWNTO 0);  -- sfix46_En43
  SIGNAL if_w_hat_0_75_out1_8             : signed(45 DOWNTO 0);  -- sfix46_En43
  SIGNAL Delay23_out1_1                   : signed(45 DOWNTO 0);  -- sfix46_En43
  SIGNAL L_Log2Table_2_1_out1_8           : signed(45 DOWNTO 0);  -- sfix46_En43
  SIGNAL Constant_out1_13                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_23               : unsigned(46 DOWNTO 0);  -- ufix47
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_9 : signed(46 DOWNTO 0);  -- sfix47_En44
  SIGNAL alpha0_out1_1                    : signed(46 DOWNTO 0);  -- sfix47_En44
  SIGNAL Log2Table_int32_11_out1          : signed(46 DOWNTO 0);  -- sfix47_En44
  SIGNAL if_w_hat_0_5_out1_9              : signed(46 DOWNTO 0);  -- sfix47_En44
  SIGNAL Log2MinusTable_int32_11_out1     : signed(46 DOWNTO 0);  -- sfix47_En44
  SIGNAL if_w_hat_0_75_out1_9             : signed(46 DOWNTO 0);  -- sfix47_En44
  SIGNAL L_Log2Table_2_1_out1_9           : signed(46 DOWNTO 0);  -- sfix47_En44
  SIGNAL Constant_out1_14                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_24               : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_10 : signed(47 DOWNTO 0);  -- sfix48_En45
  SIGNAL Delay24_out1_1                   : signed(47 DOWNTO 0);  -- sfix48_En45
  SIGNAL alpha0_out1_2                    : signed(47 DOWNTO 0);  -- sfix48_En45
  SIGNAL Log2Table_12_out1                : signed(47 DOWNTO 0);  -- sfix48_En45
  SIGNAL if_w_hat_0_5_out1_10             : signed(47 DOWNTO 0);  -- sfix48_En45
  SIGNAL Log2MinusTable_12_out1           : signed(47 DOWNTO 0);  -- sfix48_En45
  SIGNAL if_w_hat_0_75_out1_10            : signed(47 DOWNTO 0);  -- sfix48_En45
  SIGNAL Delay29_out1                     : signed(47 DOWNTO 0);  -- sfix48_En45
  SIGNAL L_Log2Table_2_1_out1_10          : signed(47 DOWNTO 0);  -- sfix48_En45
  SIGNAL Constant_out1_15                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_25               : unsigned(48 DOWNTO 0);  -- ufix49
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_11 : signed(48 DOWNTO 0);  -- sfix49_En46
  SIGNAL alpha0_out1_3                    : signed(48 DOWNTO 0);  -- sfix49_En46
  SIGNAL Log2Table_13_out1                : signed(48 DOWNTO 0);  -- sfix49_En46
  SIGNAL if_w_hat_0_5_out1_11             : signed(48 DOWNTO 0);  -- sfix49_En46
  SIGNAL Log2MinusTable_13_out1           : signed(48 DOWNTO 0);  -- sfix49_En46
  SIGNAL if_w_hat_0_75_out1_11            : signed(48 DOWNTO 0);  -- sfix49_En46
  SIGNAL L_Log2Table_2_1_out1_11          : signed(48 DOWNTO 0);  -- sfix49_En46
  SIGNAL Constant_out1_16                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_26               : unsigned(49 DOWNTO 0);  -- ufix50
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_12 : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL Delay26_out1                     : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL alpha0_out1_4                    : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL Log2Table_14_out1                : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL if_w_hat_0_5_out1_12             : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL Log2MinusTable_14_out1           : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL if_w_hat_0_75_out1_12            : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL Delay31_out1                     : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL L_Log2Table_2_1_out1_12          : signed(49 DOWNTO 0);  -- sfix50_En47
  SIGNAL Constant_out1_17                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_27               : unsigned(50 DOWNTO 0);  -- ufix51
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_13 : signed(50 DOWNTO 0);  -- sfix51_En48
  SIGNAL alpha0_out1_5                    : signed(50 DOWNTO 0);  -- sfix51_En48
  SIGNAL Log2Table_15_out1                : signed(50 DOWNTO 0);  -- sfix51_En48
  SIGNAL if_w_hat_0_5_out1_13             : signed(50 DOWNTO 0);  -- sfix51_En48
  SIGNAL Log2MinusTable_15_out1           : signed(50 DOWNTO 0);  -- sfix51_En48
  SIGNAL if_w_hat_0_75_out1_13            : signed(50 DOWNTO 0);  -- sfix51_En48
  SIGNAL L_Log2Table_2_1_out1_13          : signed(50 DOWNTO 0);  -- sfix51_En48
  SIGNAL Constant_out1_18                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1_28               : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL reinterpretcast_bitsliceget_w_1_out1_14 : signed(51 DOWNTO 0);  -- sfix52_En49
  SIGNAL Delay36_out1                     : signed(51 DOWNTO 0);  -- sfix52_En49
  SIGNAL alpha0_out1_6                    : signed(51 DOWNTO 0);  -- sfix52_En49
  SIGNAL Log2Table_16_out1                : signed(51 DOWNTO 0);  -- sfix52_En49
  SIGNAL if_w_hat_0_5_out1_14             : signed(51 DOWNTO 0);  -- sfix52_En49
  SIGNAL Log2MinusTable_16_out1           : signed(51 DOWNTO 0);  -- sfix52_En49
  SIGNAL if_w_hat_0_75_out1_14            : signed(51 DOWNTO 0);  -- sfix52_En49
  SIGNAL Delay39_out1                     : signed(51 DOWNTO 0);  -- sfix52_En49
  SIGNAL L_Log2Table_2_out1               : signed(51 DOWNTO 0);  -- sfix52_En49
  SIGNAL Constant_out1_19                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat_out1_29               : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL reinterpretcast_bitconcat_L_f_out1 : signed(53 DOWNTO 0);  -- sfix54_En51
  SIGNAL Delay25_reg                      : vector_of_signed54(0 TO 5);  -- sfix54 [6]
  SIGNAL Delay25_out1_2                   : signed(53 DOWNTO 0);  -- sfix54_En51
  SIGNAL BitSlice_out1_16                 : std_logic;  -- ufix1
  SIGNAL alphaw_cast                      : signed(37 DOWNTO 0);  -- sfix38_En32
  SIGNAL alphaw_cast_1                    : signed(37 DOWNTO 0);  -- sfix38_En32
  SIGNAL alphaw_out1                      : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_sign_1_out1                   : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL w_abs_2_out1                     : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_1                 : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL Bit_Slice14_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_20        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_3                : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_22        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_4                : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_23        : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_20         : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_1                : std_logic;  -- ufix1
  SIGNAL Start_1_1_out1_1                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Logical_Operator4_out1_4         : std_logic;  -- ufix1
  SIGNAL Start_1_2_out1_1                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch3_out1_2                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_3_out1_1                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_4_out1_1                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Logical_Operator2_out1_9         : std_logic;  -- ufix1
  SIGNAL Switch2_out1_1                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch1_out1_3                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_5_out1_1                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_6_out1_1                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch5_out1_1                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_7_out1_1                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_8_out1_1                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch7_out1_1                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Logical_Operator8_out1_5         : std_logic;  -- ufix1
  SIGNAL Switch6_out1_2                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch4_out1_1                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_9_out1_2                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_10_out1_2                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch10_out1_2                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_11_out1_2                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_12_out1_2                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch9_out1_2                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch8_out1_2                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_13_out1_2                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_14_out1_2                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch12_out1_3                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_15_out1_2                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_16_out1_2                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch14_out1_2                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch13_out1_2                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Logical_Operator_out1_21         : std_logic;  -- ufix1
  SIGNAL Switch11_out1_2                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch_out1_4                    : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_9_out1_3                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_10_out1_3                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch10_out1_3                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_11_out1_3                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_12_out1_3                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch9_out1_3                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch8_out1_3                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_13_out1_3                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_14_out1_3                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch12_out1_4                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_15_out1_3                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_16_out1_3                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch14_out1_3                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch13_out1_3                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch11_out1_3                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_9_out1_4                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_10_out1_4                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch10_out1_4                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_11_out1_4                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_12_out1_4                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch9_out1_4                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch8_out1_4                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_13_out1_4                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_14_out1_4                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch12_out1_5                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_15_out1_4                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Start_1_16_out1_4                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch14_out1_4                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch13_out1_4                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch11_out1_4                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch2_out1_2                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Switch1_out1_4                   : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL reinterpretcast_bitsliceget_tm_1_out1 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dynamic_shift_cast               : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL bitsll_w_abs_j_out1              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_abs_1_out1              : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL if_w_abs_2_1_out1                : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice1_out1_15                : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL reinterpretcast_bitsliceget_tm_out1 : unsigned(26 DOWNTO 0);  -- ufix27_En26
  SIGNAL Delay3_out1_4                    : unsigned(26 DOWNTO 0);  -- ufix27_En26
  SIGNAL alpha1_out1_1                    : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL bitsra_w_cfType_Log2NumberOfI_out1 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL alpha1_tmp1_out1                 : signed(36 DOWNTO 0);  -- sfix37_En32
  SIGNAL BitSlice2_out1                   : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL reinterpretcast_bitsliceget_tm_out1_1 : unsigned(26 DOWNTO 0);  -- ufix27_En26
  SIGNAL Delay4_out1_3                    : unsigned(26 DOWNTO 0);  -- ufix27_En26
  SIGNAL tmp_m1_tmp_m2_mul_temp           : unsigned(53 DOWNTO 0);  -- ufix54_En52
  SIGNAL tmp_m1_tmp_m2_out1               : unsigned(26 DOWNTO 0);  -- ufix27_En25
  SIGNAL Delay14_reg_1                    : vector_of_unsigned27(0 TO 1);  -- ufix27 [2]
  SIGNAL Delay14_out1_2                   : unsigned(26 DOWNTO 0);  -- ufix27_En25
  SIGNAL Delay1_reg                       : std_logic_vector(1 DOWNTO 0);  -- ufix1 [2]
  SIGNAL Delay1_out1_2                    : std_logic;  -- ufix1
  SIGNAL alpha1_4426950216293335_out1     : signed(26 DOWNTO 0);  -- sfix27_En25
  SIGNAL alpha1_4426950216293335_1_out1   : signed(26 DOWNTO 0);  -- sfix27_En25
  SIGNAL if_sign_1_out1_1                 : signed(26 DOWNTO 0);  -- sfix27_En25
  SIGNAL Delay6_out1_1                    : signed(26 DOWNTO 0);  -- sfix27_En25
  SIGNAL tmp3_1_4426950216293335_cast     : signed(27 DOWNTO 0);  -- sfix28_En25
  SIGNAL tmp3_1_4426950216293335_mul_temp : signed(54 DOWNTO 0);  -- sfix55_En50
  SIGNAL tmp3_1_4426950216293335_cast_1   : signed(53 DOWNTO 0);  -- sfix54_En50
  SIGNAL tmp3_1_4426950216293335_out1     : signed(53 DOWNTO 0);  -- sfix54_En51
  SIGNAL Delay8_reg                       : vector_of_signed54(0 TO 1);  -- sfix54 [2]
  SIGNAL Delay8_out1_1                    : signed(53 DOWNTO 0);  -- sfix54_En51
  SIGNAL cfType_Log2NumberOfIterations_out1 : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL FindFirst1_out1_dtc              : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL C_out1_1                         : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL if_w_abs_2_out1                  : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL cfType_Log2NumberOfIterations_out1_1 : signed(7 DOWNTO 0);  -- sfix8
  SIGNAL reinterpretcast_bitsliceget_tm_2_out1 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Delay9_reg_1                     : vector_of_unsigned6(0 TO 4);  -- ufix6 [5]
  SIGNAL Delay9_out1_2                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dynamic_shift_cast_1             : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL bitsra_appx_shift_out1           : signed(53 DOWNTO 0);  -- sfix54_En51
  SIGNAL Delay17_out1_2                   : signed(53 DOWNTO 0);  -- sfix54_En51
  SIGNAL L_tmp4_out1                      : signed(53 DOWNTO 0);  -- sfix54_En51
  SIGNAL if_w_0_out1                      : signed(53 DOWNTO 0);  -- sfix54_En51
  SIGNAL BitSlice_out1_17                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_18              : unsigned(61 DOWNTO 0);  -- ufix62
  SIGNAL reinterpretcast_bitconcat_fi_0_out1_1 : signed(61 DOWNTO 0);  -- sfix62_En51
  SIGNAL exp_tmp_L_out1                   : signed(61 DOWNTO 0);  -- sfix62_En51
  SIGNAL BitSlice1_out1_16                : std_logic;  -- ufix1
  SIGNAL Delay12_out1_2                   : std_logic;  -- ufix1
  SIGNAL Delay3_out1_5                    : std_logic;  -- ufix1
  SIGNAL Delay3_out1_6                    : std_logic;  -- ufix1
  SIGNAL reduced_reg                      : std_logic_vector(16 DOWNTO 0);  -- ufix1 [17]
  SIGNAL Delay5_out1_2                    : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_22         : std_logic;  -- ufix1
  SIGNAL Delay2_reg                       : std_logic_vector(1 DOWNTO 0);  -- ufix1 [2]
  SIGNAL Delay2_out1                      : std_logic;  -- ufix1
  SIGNAL C1_out1                          : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL C_out1_2                         : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL if_aSign_out1                    : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL BitSlice3_out1                   : unsigned(60 DOWNTO 0);  -- ufix61
  SIGNAL Delay13_out1_2                   : unsigned(60 DOWNTO 0);  -- ufix61
  SIGNAL exp_tmp_L1_out1                  : signed(61 DOWNTO 0);  -- sfix62_En51
  SIGNAL BitSlice2_out1_1                 : unsigned(60 DOWNTO 0);  -- ufix61
  SIGNAL Delay14_out1_3                   : unsigned(60 DOWNTO 0);  -- ufix61
  SIGNAL Switch_out1_5                    : unsigned(60 DOWNTO 0);  -- ufix61
  SIGNAL Delay4_out1_4                    : unsigned(60 DOWNTO 0);  -- ufix61
  SIGNAL Bit_Slice10_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_5                : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_5               : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_5               : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_6               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_24        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_6                : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_6               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_6               : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_25        : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_6               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_6               : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_6               : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_7               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_26        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_7                : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_7                : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_7               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_7               : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_7               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_7               : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_7               : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_8               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_27        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_8                : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_8                : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_8               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_8               : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_13        : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_8               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_8               : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_12        : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_8               : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_9               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_28        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_9                : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_9                : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_9               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_9               : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_9               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_9               : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_13        : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_9               : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_10              : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_29        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_10               : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_10               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_12        : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_10              : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_10              : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_10              : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_10              : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_14        : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_10              : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_11              : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_30        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_11               : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_11               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_13        : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_11              : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_11              : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_12        : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_31        : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_23         : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_2                : std_logic;  -- ufix1
  SIGNAL Start_1_1_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator4_out1_5         : std_logic;  -- ufix1
  SIGNAL Start_1_2_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch3_out1_3                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_3_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_4_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator2_out1_17        : std_logic;  -- ufix1
  SIGNAL Switch2_out1_3                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch1_out1_5                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_5_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_6_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch5_out1_2                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_7_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_8_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch7_out1_2                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator8_out1_12        : std_logic;  -- ufix1
  SIGNAL Switch6_out1_3                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch4_out1_2                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_9_out1_5                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_10_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch10_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_11_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_12_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch9_out1_5                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch8_out1_5                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_13_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_14_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_15_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_16_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator_out1_24         : std_logic;  -- ufix1
  SIGNAL Switch11_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch_out1_6                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_9_out1_6                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_10_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch10_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_11_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_12_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch9_out1_6                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch8_out1_6                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_13_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_14_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_15_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_16_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1_6                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_9_out1_7                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_10_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch10_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_11_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_12_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch9_out1_7                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch8_out1_7                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_13_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_14_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_15_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_16_out1_7                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1_7                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator3_out1_15        : std_logic;  -- ufix1
  SIGNAL Switch2_out1_4                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch1_out1_6                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_9_out1_8                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_10_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch10_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_11_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_12_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch9_out1_8                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch8_out1_8                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_13_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_14_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_15_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_16_out1_8                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1_8                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_9_out1_9                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_10_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch10_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_11_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_12_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch9_out1_9                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch8_out1_9                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_13_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_14_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_10                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_15_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_16_out1_9                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1_9                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch3_out1_4                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_9_out1_10                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_10_out1_10               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch10_out1_10                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_11_out1_10               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_12_out1_10               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch9_out1_10                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch8_out1_10                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_13_out1_10               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_14_out1_10               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_11                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_15_out1_10               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_16_out1_10               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1_10                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_10                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1_10                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_9_out1_11                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_10_out1_11               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch10_out1_11                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_11_out1_11               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_12_out1_11               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch9_out1_11                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch8_out1_11                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Start_1_13_out1_11               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1_11                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch4_out1_3                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch5_out1_3                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch6_out1_4                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Delay5_out1_3                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL bitsll_Sum_tmp1_out1             : unsigned(60 DOWNTO 0);  -- ufix61
  SIGNAL BitSlice2_out1_2                 : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL DTC1_out1                        : unsigned(33 DOWNTO 0);  -- ufix34_En33
  SIGNAL Delay1_out1_3                    : unsigned(33 DOWNTO 0);  -- ufix34_En33
  SIGNAL Bit_Concat1_out1_19              : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL reinterpretcast_bitconcat_fi_0_out1_2 : unsigned(23 DOWNTO 0);  -- ufix24_En23
  SIGNAL Delay1_out1_4                    : unsigned(23 DOWNTO 0);  -- ufix24_En23
  SIGNAL Delay_reg                        : vector_of_unsigned24(0 TO 16);  -- ufix24 [17]
  SIGNAL Delay_out1_1                     : unsigned(23 DOWNTO 0);  -- ufix24_En23
  SIGNAL Product_out1                     : unsigned(57 DOWNTO 0);  -- ufix58_En56
  SIGNAL Delay2_reg_1                     : vector_of_unsigned58(0 TO 1);  -- ufix58 [2]
  SIGNAL Delay2_out1_1                    : unsigned(57 DOWNTO 0);  -- ufix58_En56
  SIGNAL Bit_Slice_out1_2                 : std_logic;  -- ufix1
  SIGNAL padding_out1                     : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Compare_To_Zero_out1_2           : std_logic;  -- ufix1
  SIGNAL alpha10_out1                     : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Bit_Concat_out1_30               : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL DTC_out1_1                       : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL alpha80_cast_pos_like_exp_out_out1 : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL alpha127_out1_1                  : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Switch1_out1_7                   : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Delay1_out1_5                    : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL alpha1_out1_2                    : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL C_out1_3                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_Exponent_0_out1_1             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Concat1_out1_20              : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL reinterpretcast_bitconcat_fi_0_1_out1_1 : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Delay2_out1_2                    : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Delay_reg_1                      : vector_of_signed11(0 TO 16);  -- sfix11 [17]
  SIGNAL Delay_out1_2                     : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Add_out1_2                       : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Delay5_reg                       : vector_of_signed11(0 TO 1);  -- sfix11 [2]
  SIGNAL Delay5_out1_4                    : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Constant_out1_20                 : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Add_out1_3                       : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Switch_out1_7                    : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL exp_tmp_upperBound_out1          : std_logic;  -- ufix1
  SIGNAL Delay2_out1_3                    : std_logic;  -- ufix1
  SIGNAL Delay18_reg                      : std_logic_vector(5 DOWNTO 0);  -- ufix1 [6]
  SIGNAL Delay18_out1_1                   : std_logic;  -- ufix1
  SIGNAL Delay28_reg                      : std_logic_vector(3 DOWNTO 0);  -- ufix1 [4]
  SIGNAL Delay28_out1                     : std_logic;  -- ufix1
  SIGNAL Delay1_out1_6                    : std_logic;  -- ufix1
  SIGNAL Delay15_reg_1                    : std_logic_vector(5 DOWNTO 0);  -- ufix1 [6]
  SIGNAL Delay15_out1_2                   : std_logic;  -- ufix1
  SIGNAL Delay25_reg_1                    : std_logic_vector(3 DOWNTO 0);  -- ufix1 [4]
  SIGNAL Delay25_out1_3                   : std_logic;  -- ufix1
  SIGNAL C1_out1_1                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL C_out1_4                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_aSign_out1_1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alpha0_out1_7                    : std_logic;  -- ufix1
  SIGNAL alpha127_out1_2                  : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL alpha1_out1_3                    : std_logic;  -- ufix1
  SIGNAL C4_out1                          : unsigned(38 DOWNTO 0);  -- ufix39_En30
  SIGNAL cast_cfType_ExponentBias_lik_out1_1 : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL exp_tmp_cast_cfType_Exponent_out1 : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL alpha3_out1                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice1_out1_3                : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL Bit_Slice2_out1_3                : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL Switch1_out1_8                   : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL Data_Type_Conversion2_out1       : unsigned(56 DOWNTO 0);  -- ufix57_En56
  SIGNAL Bit_Concat3_out1_29              : unsigned(64 DOWNTO 0);  -- ufix65
  SIGNAL cast_cfType_ExponentBias_lik_out1_2 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cast_cfType_ExponentBias_lik_sub_cast : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cast_cfType_ExponentBias_lik_out1_3 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL DTC1_out1_1                      : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL BitSlice_out1_18                 : std_logic;  -- ufix1
  SIGNAL DTC2_out1                        : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL bitsll_tmp1_shift_length_out1    : unsigned(64 DOWNTO 0);  -- ufix65
  SIGNAL Bit_Slice1_out1_4                : unsigned(38 DOWNTO 0);  -- ufix39
  SIGNAL reinterpretcast_bitconcat_tmp2_out1 : unsigned(38 DOWNTO 0);  -- ufix39_En30
  SIGNAL alpha2_out1_16                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL dynamic_shift_cast_2             : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Shift_Arithmetic_out1            : unsigned(56 DOWNTO 0);  -- ufix57_En56
  SIGNAL Bit_Slice_out1_3                 : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Bit_Concat2_out1_17              : unsigned(38 DOWNTO 0);  -- ufix39
  SIGNAL reinterpretcast_bitconcat_fi_0_out1_3 : unsigned(38 DOWNTO 0);  -- ufix39_En30
  SIGNAL if_shift_sign_out1               : unsigned(38 DOWNTO 0);  -- ufix39_En30
  SIGNAL if_exp_tmp_upperBound_1_out1     : unsigned(38 DOWNTO 0);  -- ufix39_En30
  SIGNAL Delay3_out1_7                    : unsigned(38 DOWNTO 0);  -- ufix39_En30
  SIGNAL BitSlice2_out1_3                 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Bit_Concat1_out1_21              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL reinterpretcast_bitconcat_fi_0_out1_4 : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL alpha127_exp_tmp_out1            : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL cast_1_like_mant_frac_out1       : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL alpha0_out1_8                    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL BitSlice_out1_19                 : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL Bit_Concat_out1_31               : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL reinterpretcast_bitconcat_fi_0_out1_5 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL cast_1_like_mant_frac_m_out1     : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_17                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_25         : std_logic;  -- ufix1
  SIGNAL C1_out1_2                        : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL C_out1_5                         : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL if_sticky_out1                   : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL exp_adj_exp_tmp_out1             : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL if_aSign_1_out1                  : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL Delay16_reg                      : vector_of_signed10(0 TO 5);  -- sfix10 [6]
  SIGNAL Delay16_out1                     : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL Delay26_reg                      : vector_of_signed10(0 TO 3);  -- sfix10 [4]
  SIGNAL Delay26_out1_1                   : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL exp_out_0_out1                   : std_logic;  -- ufix1
  SIGNAL C2_out1                          : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Logical_Operator1_out1_32        : std_logic;  -- ufix1
  SIGNAL if_sticky_1_out1                 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_mant_frac_1_out1          : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice_out1_20                 : std_logic;  -- ufix1
  SIGNAL Log2Table_1_out1                 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2Table_1_out1               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Delay12_out1_3                   : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_w_1_out1_16               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_18                : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_21                 : std_logic;  -- ufix1
  SIGNAL alphabitget_w_w_WordLength_1_out1 : std_logic;  -- ufix1
  SIGNAL Log2Table_int32_2_out1           : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Log2MinusTable_int32_2_out1      : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_0_out1  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2MinusTable_int32_2_1_out1  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1_1 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_w_1_out1_17               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_19                : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_22                 : std_logic;  -- ufix1
  SIGNAL alphabitget_w_w_WordLength_1_out1_1 : std_logic;  -- ufix1
  SIGNAL Log2Table_int32_3_out1_1         : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Log2MinusTable_int32_3_out1_1    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_0_out1_1 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2MinusTable_int32_2_out1    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1_2 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Delay11_out1_2                   : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_w_1_out1_18               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_20                : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_23                 : std_logic;  -- ufix1
  SIGNAL alphabitget_w_w_WordLength_1_out1_2 : std_logic;  -- ufix1
  SIGNAL Log2Table_int32_4_out1_1         : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Log2MinusTable_int32_4_out1_1    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_0_out1_2 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2MinusTable_int32_2_out1_1  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1_3 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_w_1_out1_19               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_21                : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_24                 : std_logic;  -- ufix1
  SIGNAL alphabitget_w_w_WordLength_1_out1_3 : std_logic;  -- ufix1
  SIGNAL Log2Table_int32_5_out1_1         : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Log2MinusTable_int32_5_out1_1    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_0_out1_3 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2MinusTable_int32_2_out1_2  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1_4 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Delay13_out1_3                   : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_w_1_out1_20               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_22                : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_25                 : std_logic;  -- ufix1
  SIGNAL alphabitget_w_w_WordLength_1_out1_4 : std_logic;  -- ufix1
  SIGNAL Log2Table_int32_6_out1_1         : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Log2MinusTable_int32_6_out1_1    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_0_out1_4 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2MinusTable_int32_2_out1_3  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1_5 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_w_1_out1_21               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_23                : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_26                 : std_logic;  -- ufix1
  SIGNAL alphabitget_w_w_WordLength_1_out1_5 : std_logic;  -- ufix1
  SIGNAL Log2Table_int32_7_out1_1         : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Log2MinusTable_int32_7_out1_1    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_0_out1_5 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2MinusTable_int32_2_out1_4  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1_6 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Delay15_out1_3                   : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_w_1_out1_22               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_24                : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_27                 : std_logic;  -- ufix1
  SIGNAL alphabitget_w_w_WordLength_1_out1_6 : std_logic;  -- ufix1
  SIGNAL Log2Table_int32_8_out1_1         : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Log2MinusTable_int32_8_out1_1    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_0_out1_6 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2MinusTable_int32_2_out1_5  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1_7 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_w_1_out1_23               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_25                : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_28                 : std_logic;  -- ufix1
  SIGNAL alphabitget_w_w_WordLength_1_out1_7 : std_logic;  -- ufix1
  SIGNAL Log2Table_int32_9_out1_1         : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Log2MinusTable_int32_9_out1_1    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_0_out1_7 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2MinusTable_int32_2_out1_6  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1_8 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Delay17_out1_3                   : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_w_1_out1_24               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_26                : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_29                 : std_logic;  -- ufix1
  SIGNAL alphabitget_w_w_WordLength_1_out1_8 : std_logic;  -- ufix1
  SIGNAL Log2Table_int32_10_out1_1        : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Log2MinusTable_int32_10_out1_1   : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_0_out1_8 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2MinusTable_int32_2_out1_7  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1_9 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_w_1_out1_25               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_27                : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_30                 : std_logic;  -- ufix1
  SIGNAL alphabitget_w_w_WordLength_1_out1_9 : std_logic;  -- ufix1
  SIGNAL Log2Table_int32_11_out1_1        : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Log2MinusTable_int32_11_out1_1   : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_0_out1_9 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2MinusTable_int32_2_out1_8  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1_10 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Delay19_out1_3                   : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL bitsll_w_1_out1_26               : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL BitSlice1_out1_28                : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_31                 : std_logic;  -- ufix1
  SIGNAL alphabitget_w_w_WordLength_1_out1_10 : std_logic;  -- ufix1
  SIGNAL C1_out1_3                        : signed(3 DOWNTO 0);  -- sfix4_En1
  SIGNAL C_out1_6                         : signed(3 DOWNTO 0);  -- sfix4_En1
  SIGNAL if_bitget_w_w_WordLength_1_1_out1 : signed(3 DOWNTO 0);  -- sfix4_En1
  SIGNAL Delay11_out1_3                   : signed(3 DOWNTO 0);  -- sfix4_En1
  SIGNAL Constant_out1_21                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat_out1_32               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL dtc1_out1_2                      : signed(5 DOWNTO 0);  -- sfix6_En3
  SIGNAL bitsrl_y_int32_2_out1            : signed(5 DOWNTO 0);  -- sfix6_En3
  SIGNAL y_tmp1_out1                      : signed(5 DOWNTO 0);  -- sfix6_En3
  SIGNAL y_tmp1_out1_1                    : signed(5 DOWNTO 0);  -- sfix6_En3
  SIGNAL if_bitget_w_w_WordLength_0_1_out1 : signed(5 DOWNTO 0);  -- sfix6_En3
  SIGNAL if_bitget_w_w_WordLength_1_1_out1_1 : signed(5 DOWNTO 0);  -- sfix6_En3
  SIGNAL Constant_out1_22                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Concat_out1_33               : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL dtc1_out1_3                      : signed(8 DOWNTO 0);  -- sfix9_En6
  SIGNAL bitsrl_y_int32_2_out1_1          : signed(8 DOWNTO 0);  -- sfix9_En6
  SIGNAL y_tmp1_out1_2                    : signed(8 DOWNTO 0);  -- sfix9_En6
  SIGNAL y_tmp1_out1_3                    : signed(8 DOWNTO 0);  -- sfix9_En6
  SIGNAL if_bitget_w_w_WordLength_0_1_out1_1 : signed(8 DOWNTO 0);  -- sfix9_En6
  SIGNAL if_bitget_w_w_WordLength_1_1_out1_2 : signed(8 DOWNTO 0);  -- sfix9_En6
  SIGNAL Delay10_out1_3                   : signed(8 DOWNTO 0);  -- sfix9_En6
  SIGNAL Constant_out1_23                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Concat_out1_34               : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL dtc1_out1_4                      : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL bitsrl_y_int32_2_out1_2          : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL y_tmp1_out1_4                    : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL y_tmp1_out1_5                    : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL if_bitget_w_w_WordLength_0_1_out1_2 : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL if_bitget_w_w_WordLength_1_1_out1_3 : signed(12 DOWNTO 0);  -- sfix13_En10
  SIGNAL Constant_out1_24                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Bit_Concat_out1_35               : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL dtc1_out1_5                      : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL bitsrl_y_int32_2_out1_3          : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL y_tmp1_sub_cast                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL y_tmp1_sub_cast_1                : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL y_tmp1_sub_temp                  : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL y_tmp1_out1_6                    : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL y_tmp1_out1_7                    : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL if_bitget_w_w_WordLength_0_1_out1_3 : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL if_bitget_w_w_WordLength_1_1_out1_4 : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Delay12_out1_4                   : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Constant_out1_25                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Bit_Concat_out1_36               : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL dtc1_out1_6                      : signed(23 DOWNTO 0);  -- sfix24_En21
  SIGNAL bitsrl_y_int32_2_out1_4          : signed(23 DOWNTO 0);  -- sfix24_En21
  SIGNAL y_tmp1_sub_cast_2                : signed(31 DOWNTO 0);  -- sfix32_En21
  SIGNAL y_tmp1_sub_cast_3                : signed(31 DOWNTO 0);  -- sfix32_En21
  SIGNAL y_tmp1_sub_temp_1                : signed(31 DOWNTO 0);  -- sfix32_En21
  SIGNAL y_tmp1_out1_8                    : signed(23 DOWNTO 0);  -- sfix24_En21
  SIGNAL y_tmp1_out1_9                    : signed(23 DOWNTO 0);  -- sfix24_En21
  SIGNAL if_bitget_w_w_WordLength_0_1_out1_4 : signed(23 DOWNTO 0);  -- sfix24_En21
  SIGNAL if_bitget_w_w_WordLength_1_1_out1_5 : signed(23 DOWNTO 0);  -- sfix24_En21
  SIGNAL Constant_out1_26                 : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Bit_Concat_out1_37               : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL dtc1_out1_7                      : signed(30 DOWNTO 0);  -- sfix31_En28
  SIGNAL bitsrl_y_int32_2_out1_5          : signed(30 DOWNTO 0);  -- sfix31_En28
  SIGNAL y_tmp1_out1_10                   : signed(30 DOWNTO 0);  -- sfix31_En28
  SIGNAL y_tmp1_out1_11                   : signed(30 DOWNTO 0);  -- sfix31_En28
  SIGNAL if_bitget_w_w_WordLength_0_1_out1_5 : signed(30 DOWNTO 0);  -- sfix31_En28
  SIGNAL if_bitget_w_w_WordLength_1_1_out1_6 : signed(30 DOWNTO 0);  -- sfix31_En28
  SIGNAL Delay14_out1_4                   : signed(30 DOWNTO 0);  -- sfix31_En28
  SIGNAL Constant_out1_27                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat_out1_38               : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL dtc1_out1_8                      : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL bitsrl_y_int32_2_out1_6          : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL y_tmp1_out1_12                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL y_tmp1_out1_13                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_bitget_w_w_WordLength_0_1_out1_6 : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_bitget_w_w_WordLength_1_1_out1_7 : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL bitsrl_y_int32_2_out1_7          : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL y_tmp1_out1_14                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL y_tmp1_out1_15                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_bitget_w_w_WordLength_0_1_out1_7 : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_bitget_w_w_WordLength_1_1_out1_8 : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL Delay16_out1_1                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL bitsrl_y_int32_2_out1_8          : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL y_tmp1_out1_16                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL y_tmp1_out1_17                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_bitget_w_w_WordLength_0_1_out1_8 : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_bitget_w_w_WordLength_1_1_out1_9 : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL bitsrl_y_int32_2_out1_9          : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL y_tmp1_out1_18                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL y_tmp1_out1_19                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_bitget_w_w_WordLength_0_1_out1_9 : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_bitget_w_w_WordLength_1_1_out1_10 : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL Delay18_out1_2                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL bitsrl_y_int32_2_out1_10         : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL y_tmp1_out1_20                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL y_tmp1_out1_21                   : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_bitget_w_w_WordLength_0_1_out1_10 : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL if_bitget_w_w_WordLength_1_1_out1_11 : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL Delay5_out1_5                    : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL Bit_Slice2_out1_4                : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL Data_Type_Conversion1_out1       : signed(19 DOWNTO 0);  -- sfix20_En18
  SIGNAL Delay1_out1_7                    : signed(19 DOWNTO 0);  -- sfix20_En18
  SIGNAL Log2Table_int32_12_out1          : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Log2MinusTable_int32_12_out1     : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_0_out1_10 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL w_Log2MinusTable_int32_2_out1_9  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL if_bitget_w_w_WordLength_1_out1_11 : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Bit_Slice_out1_4                 : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL Data_Type_Conversion_out1_2      : signed(19 DOWNTO 0);  -- sfix20_En18
  SIGNAL alpha0_69314717873930931_out1    : unsigned(16 DOWNTO 0);  -- ufix17_En16
  SIGNAL Delay6_out1_2                    : unsigned(16 DOWNTO 0);  -- ufix17_En16
  SIGNAL tmp1_0_69314717873930931_cast    : signed(17 DOWNTO 0);  -- sfix18_En16
  SIGNAL tmp1_0_69314717873930931_mul_temp : signed(37 DOWNTO 0);  -- sfix38_En34
  SIGNAL tmp1_0_69314717873930931_cast_1  : signed(36 DOWNTO 0);  -- sfix37_En34
  SIGNAL tmp1_0_69314717873930931_out1    : signed(17 DOWNTO 0);  -- sfix18_En16
  SIGNAL Delay_reg_2                      : vector_of_signed18(0 TO 1);  -- sfix18 [2]
  SIGNAL Delay_out1_3                     : signed(17 DOWNTO 0);  -- sfix18_En16
  SIGNAL tmp2_y_mul_temp                  : signed(37 DOWNTO 0);  -- sfix38_En34
  SIGNAL tmp2_y_out1                      : signed(19 DOWNTO 0);  -- sfix20_En18
  SIGNAL Delay3_reg                       : vector_of_signed20(0 TO 1);  -- sfix20 [2]
  SIGNAL Delay3_out1_8                    : signed(19 DOWNTO 0);  -- sfix20_En18
  SIGNAL Bit_Slice1_out1_5                : std_logic;  -- ufix1
  SIGNAL Constant1_out1_4                 : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL Constant_out1_28                 : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL Switch_out1_8                    : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL Delay2_reg_2                     : vector_of_signed33(0 TO 2);  -- sfix33 [3]
  SIGNAL Delay2_out1_4                    : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL Bit_Concat_out1_39               : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL DTC2_out1_1                      : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL y_tmp3_out1                      : signed(32 DOWNTO 0);  -- sfix33_En30
  SIGNAL BitSlice_out1_32                 : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL if_exp_out_0_1_out1              : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Bit_Concat_out1_40               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL BitSlice1_out1_29                : std_logic;  -- ufix1
  SIGNAL Delay17_reg                      : std_logic_vector(5 DOWNTO 0);  -- ufix1 [6]
  SIGNAL Delay17_out1_4                   : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_33                 : std_logic;  -- ufix1
  SIGNAL Delay27_reg                      : std_logic_vector(3 DOWNTO 0);  -- ufix1 [4]
  SIGNAL Delay27_out1_1                   : std_logic;  -- ufix1
  SIGNAL alphabitget_Mant_tmp_2_0_out1    : std_logic;  -- ufix1
  SIGNAL alphabitget_Mant_tmp_1_0_out1    : std_logic;  -- ufix1
  SIGNAL cast_2_like_Mant_tmp_out1        : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Mant_tmp_cast_2_like_Man_out1    : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL if_bitget_Mant_tmp_1_0_out1      : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL BitSlice2_out1_4                 : std_logic;  -- ufix1
  SIGNAL BitSlice2_out1_5                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_26         : std_logic;  -- ufix1
  SIGNAL BitSlice1_out1_30                : std_logic;  -- ufix1
  SIGNAL bitget_y_cfType_Pow2Intermedi_out1 : std_logic;  -- ufix1
  SIGNAL C1_out1_4                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL C_out1_7                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_bitget_y_cfType_Pow2Intermed_out1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL DTC_out1_2                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_exp_out_0_out1                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cast_1_like_Exp_out1             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Exp_cast_1_like_Exp_out1         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_bitget_Mant_tmp_Mant_tmp_Wor_out1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_in_range_out1                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Logical_Operator17_out1          : std_logic;  -- ufix1
  SIGNAL Delay15_out1_4                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Compare_To_Constant_out1_1       : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator15_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator18_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator16_out1          : std_logic;  -- ufix1
  SIGNAL alpha255_1_out1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alpha0_3_out1                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch18_out1                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Logical_Operator11_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator10_out1          : std_logic;  -- ufix1
  SIGNAL alpha255_2_out1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alpha127_2_out1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch10_out1_12                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch15_out1                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alpha0_e_out1                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alpha255_out1_1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch5_out1_4                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alpha127_out1_3                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch4_out1_4                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Delay23_out1_2                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch1_out1_9                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch7_out1_3                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch13_out1_11                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Delay8_reg_1                     : vector_of_unsigned8(0 TO 29);  -- ufix8 [30]
  SIGNAL Delay8_out1_2                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch1_out1_10                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Constant3_out1                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Switch6_out1_5                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Delay4_out1_5                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL C2_out1_1                        : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Compare_To_Zero_out1_3           : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_27         : std_logic;  -- ufix1
  SIGNAL BitSlice3_out1_1                 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL C_out1_8                         : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_bitget_Mant_tmp_Mant_tmp_Wor_1_out1 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_in_range_1_out1               : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL alpha0_2_out1                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL alpha1_out1_4                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL alpha2_out1_17                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch11_out1_12                 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch9_out1_12                  : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL alpha0_out1_9                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Delay24_out1_2                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Delay16_out1_2                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch2_out1_5                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch8_out1_12                  : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch14_out1_11                 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Delay7_reg                       : vector_of_unsigned23(0 TO 29);  -- ufix23 [30]
  SIGNAL Delay7_out1                      : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch2_out1_6                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Constant2_out1_4                 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch5_out1_5                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Delay5_out1_6                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL nfp_out_pack                     : unsigned(31 DOWNTO 0);  -- ufix32

BEGIN
  Constant8_out1 <= '1';

  Constant7_out1 <= to_unsigned(16#1F#, 6);

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1 <= '1';
      ELSIF enb = '1' THEN
        Delay4_out1 <= Relational_Operator_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  Logical_Operator_out1 <= Constant8_out1 AND Delay4_out1;

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1 <= to_unsigned(16#00#, 6);
      ELSIF enb = '1' THEN
        Delay3_out1 <= Add_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  Add_add_cast <= '0' & '0' & '0' & '0' & '0' & Logical_Operator_out1;
  Add_out1 <= Delay3_out1 + Add_add_cast;

  
  Relational_Operator_out1 <= '1' WHEN Add_out1 <= Constant7_out1 ELSE
      '0';

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= '1';
      ELSIF enb = '1' THEN
        Delay1_out1 <= Relational_Operator_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  nfp_in1_unsigned <= unsigned(nfp_in1);

  -- Split 32 bit word into FP sign, exponent, mantissa
  aSign <= nfp_in1_unsigned(31);
  aExponent <= nfp_in1_unsigned(30 DOWNTO 23);
  aMantissa <= nfp_in1_unsigned(22 DOWNTO 0);

  Delay1_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1_1 <= to_unsigned(16#00#, 8);
      ELSIF enb = '1' THEN
        Delay1_out1_1 <= aExponent;
      END IF;
    END IF;
  END PROCESS Delay1_1_process;


  
  alpha255_out1 <= '1' WHEN Delay1_out1_1 = to_unsigned(16#FF#, 8) ELSE
      '0';

  
  Compare_To_Zero1_out1 <= '1' WHEN Delay1_out1_1 /= to_unsigned(16#00#, 8) ELSE
      '0';

  Constant_out1 <= to_unsigned(16#000000#, 23);

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= to_unsigned(16#000000#, 23);
      ELSIF enb = '1' THEN
        Delay_out1 <= aMantissa;
      END IF;
    END IF;
  END PROCESS Delay_process;


  
  Switch_out1 <= Constant_out1 WHEN Compare_To_Zero1_out1 = '0' ELSE
      Delay_out1;

  
  Compare_To_Zero_out1 <= '1' WHEN Switch_out1 = to_unsigned(16#000000#, 23) ELSE
      '0';

  Logical_Operator4_out1 <=  NOT Compare_To_Zero_out1;

  Logical_Operator3_out1 <= alpha255_out1 AND Logical_Operator4_out1;

  Delay13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay13_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay13_out1 <= Logical_Operator3_out1;
      END IF;
    END IF;
  END PROCESS Delay13_process;


  nfp_in2_unsigned <= unsigned(nfp_in2);

  -- Split 32 bit word into FP sign, exponent, mantissa
  bSign <= nfp_in2_unsigned(31);
  bExponent <= nfp_in2_unsigned(30 DOWNTO 23);
  bMantissa <= nfp_in2_unsigned(22 DOWNTO 0);

  Delay4_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1_1 <= to_unsigned(16#00#, 8);
      ELSIF enb = '1' THEN
        Delay4_out1_1 <= bExponent;
      END IF;
    END IF;
  END PROCESS Delay4_1_process;


  
  Compare_To_Constant_out1 <= '1' WHEN Delay4_out1_1 = to_unsigned(16#FF#, 8) ELSE
      '0';

  
  Compare_To_Zero1_out1_1 <= '1' WHEN Delay4_out1_1 /= to_unsigned(16#00#, 8) ELSE
      '0';

  Constant_out1_1 <= to_unsigned(16#000000#, 23);

  Delay3_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1_1 <= to_unsigned(16#000000#, 23);
      ELSIF enb = '1' THEN
        Delay3_out1_1 <= bMantissa;
      END IF;
    END IF;
  END PROCESS Delay3_1_process;


  
  Switch_out1_1 <= Constant_out1_1 WHEN Compare_To_Zero1_out1_1 = '0' ELSE
      Delay3_out1_1;

  
  Compare_To_Zero_out1_1 <= '1' WHEN Switch_out1_1 = to_unsigned(16#000000#, 23) ELSE
      '0';

  Logical_Operator5_out1 <=  NOT Compare_To_Zero_out1_1;

  Logical_Operator4_out1_1 <= Compare_To_Constant_out1 AND Logical_Operator5_out1;

  Delay19_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay19_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay19_out1 <= Logical_Operator4_out1_1;
      END IF;
    END IF;
  END PROCESS Delay19_process;


  Logical_Operator3_out1_1 <= Delay13_out1 OR Delay19_out1;

  Logical_Operator2_out1 <=  NOT Compare_To_Zero1_out1;

  Logical_Operator1_out1 <= Logical_Operator2_out1 AND Compare_To_Zero_out1;

  Delay10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay10_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay10_out1 <= Logical_Operator1_out1;
      END IF;
    END IF;
  END PROCESS Delay10_process;


  Logical_Operator2_out1_1 <=  NOT Compare_To_Zero1_out1_1;

  Logical_Operator1_out1_1 <= Logical_Operator2_out1_1 AND Compare_To_Zero_out1_1;

  Delay17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay17_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay17_out1 <= Logical_Operator1_out1_1;
      END IF;
    END IF;
  END PROCESS Delay17_process;


  Logical_Operator4_out1_2 <= Delay10_out1 OR Delay17_out1;

  Logical_Operator7_out1 <= Logical_Operator3_out1_1 OR Logical_Operator4_out1_2;

  
  alpha127_out1 <= '1' WHEN Delay1_out1_1 = to_unsigned(16#7F#, 8) ELSE
      '0';

  Logical_Operator_out1_1 <= alpha127_out1 AND Compare_To_Zero_out1;

  Delay11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay11_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay11_out1 <= Logical_Operator_out1_1;
      END IF;
    END IF;
  END PROCESS Delay11_process;


  Constant_out1_2 <= '0';

  Bit_Slice12_out1 <= Switch_out1_1(2);

  Bit_Slice10_out1 <= Switch_out1_1(3);

  Logical_Operator2_out1_2 <= Bit_Slice12_out1 OR Bit_Slice10_out1;

  Bit_Slice9_out1 <= Switch_out1_1(4);

  Bit_Slice8_out1 <= Switch_out1_1(5);

  Logical_Operator5_out1_1 <= Bit_Slice9_out1 OR Bit_Slice8_out1;

  Bit_Slice11_out1 <= Switch_out1_1(6);

  Bit_Slice15_out1 <= Switch_out1_1(7);

  Logical_Operator6_out1 <= Bit_Slice11_out1 OR Bit_Slice15_out1;

  Logical_Operator7_out1_1 <= Logical_Operator5_out1_1 OR Logical_Operator6_out1;

  Bit_Slice12_out1_1 <= Switch_out1_1(10);

  Bit_Slice10_out1_1 <= Switch_out1_1(11);

  Logical_Operator2_out1_3 <= Bit_Slice12_out1_1 OR Bit_Slice10_out1_1;

  Bit_Slice9_out1_1 <= Switch_out1_1(12);

  Bit_Slice8_out1_1 <= Switch_out1_1(13);

  Logical_Operator5_out1_2 <= Bit_Slice9_out1_1 OR Bit_Slice8_out1_1;

  Bit_Slice11_out1_1 <= Switch_out1_1(14);

  Bit_Slice15_out1_1 <= Switch_out1_1(15);

  Logical_Operator6_out1_1 <= Bit_Slice11_out1_1 OR Bit_Slice15_out1_1;

  Logical_Operator7_out1_2 <= Logical_Operator5_out1_2 OR Logical_Operator6_out1_1;

  Bit_Slice5_out1 <= Switch_out1_1(18);

  Bit_Slice3_out1 <= Switch_out1_1(19);

  Bit_Slice2_out1 <= Switch_out1_1(20);

  Bit_Slice1_out1 <= Switch_out1_1(21);

  Bit_Slice4_out1 <= Switch_out1_1(22);

  Start_1_1_out1 <= to_signed(-16#07F#, 9);

  Logical_Operator4_out1_3 <= Bit_Slice2_out1 OR Bit_Slice1_out1;

  Start_1_2_out1 <= to_signed(-16#080#, 9);

  
  Switch3_out1 <= Start_1_1_out1 WHEN Bit_Slice4_out1 = '0' ELSE
      Start_1_2_out1;

  Start_1_3_out1 <= to_signed(-16#081#, 9);

  Start_1_4_out1 <= to_signed(-16#082#, 9);

  Bit_Slice7_out1 <= Switch_out1_1(16);

  Bit_Slice6_out1 <= Switch_out1_1(17);

  Logical_Operator1_out1_2 <= Bit_Slice7_out1 OR Bit_Slice6_out1;

  Start_1_5_out1 <= to_signed(-16#083#, 9);

  Start_1_6_out1 <= to_signed(-16#084#, 9);

  
  Switch5_out1 <= Start_1_5_out1 WHEN Bit_Slice5_out1 = '0' ELSE
      Start_1_6_out1;

  Start_1_7_out1 <= to_signed(-16#085#, 9);

  Start_1_8_out1 <= to_signed(-16#086#, 9);

  Logical_Operator8_out1 <= Logical_Operator2_out1_3 OR Logical_Operator7_out1_2;

  Logical_Operator_out1_2 <= Bit_Slice5_out1 OR Bit_Slice3_out1;

  
  Switch2_out1 <= Start_1_3_out1 WHEN Bit_Slice2_out1 = '0' ELSE
      Start_1_4_out1;

  
  Switch1_out1 <= Switch3_out1 WHEN Logical_Operator4_out1_3 = '0' ELSE
      Switch2_out1;

  
  Switch7_out1 <= Start_1_7_out1 WHEN Bit_Slice7_out1 = '0' ELSE
      Start_1_8_out1;

  
  Switch6_out1 <= Switch5_out1 WHEN Logical_Operator1_out1_2 = '0' ELSE
      Switch7_out1;

  
  Switch4_out1 <= Switch1_out1 WHEN Logical_Operator_out1_2 = '0' ELSE
      Switch6_out1;

  Start_1_9_out1 <= to_signed(-16#087#, 9);

  Start_1_10_out1 <= to_signed(-16#088#, 9);

  
  Switch10_out1 <= Start_1_9_out1 WHEN Bit_Slice11_out1_1 = '0' ELSE
      Start_1_10_out1;

  Start_1_11_out1 <= to_signed(-16#089#, 9);

  Start_1_12_out1 <= to_signed(-16#08A#, 9);

  
  Switch9_out1 <= Start_1_11_out1 WHEN Bit_Slice9_out1_1 = '0' ELSE
      Start_1_12_out1;

  
  Switch8_out1 <= Switch10_out1 WHEN Logical_Operator5_out1_2 = '0' ELSE
      Switch9_out1;

  Bit_Slice14_out1 <= Switch_out1_1(8);

  Bit_Slice13_out1 <= Switch_out1_1(9);

  Logical_Operator3_out1_2 <= Bit_Slice14_out1 OR Bit_Slice13_out1;

  Start_1_13_out1 <= to_signed(-16#08B#, 9);

  Start_1_14_out1 <= to_signed(-16#08C#, 9);

  
  Switch12_out1 <= Start_1_13_out1 WHEN Bit_Slice12_out1_1 = '0' ELSE
      Start_1_14_out1;

  Start_1_15_out1 <= to_signed(-16#08D#, 9);

  Start_1_16_out1 <= to_signed(-16#08E#, 9);

  
  Switch14_out1 <= Start_1_15_out1 WHEN Bit_Slice14_out1 = '0' ELSE
      Start_1_16_out1;

  
  Switch13_out1 <= Switch12_out1 WHEN Logical_Operator3_out1_2 = '0' ELSE
      Switch14_out1;

  Logical_Operator8_out1_1 <= Logical_Operator2_out1_2 OR Logical_Operator7_out1_1;

  
  Switch11_out1 <= Switch8_out1 WHEN Logical_Operator2_out1_3 = '0' ELSE
      Switch13_out1;

  
  Switch_out1_2 <= Switch4_out1 WHEN Logical_Operator8_out1 = '0' ELSE
      Switch11_out1;

  Start_1_9_out1_1 <= to_signed(-16#08F#, 9);

  Start_1_10_out1_1 <= to_signed(-16#090#, 9);

  
  Switch10_out1_1 <= Start_1_9_out1_1 WHEN Bit_Slice11_out1 = '0' ELSE
      Start_1_10_out1_1;

  Start_1_11_out1_1 <= to_signed(-16#091#, 9);

  Start_1_12_out1_1 <= to_signed(-16#092#, 9);

  
  Switch9_out1_1 <= Start_1_11_out1_1 WHEN Bit_Slice9_out1 = '0' ELSE
      Start_1_12_out1_1;

  
  Switch8_out1_1 <= Switch10_out1_1 WHEN Logical_Operator5_out1_1 = '0' ELSE
      Switch9_out1_1;

  Bit_Slice14_out1_1 <= Switch_out1_1(0);

  Bit_Slice13_out1_1 <= Switch_out1_1(1);

  Logical_Operator3_out1_3 <= Bit_Slice14_out1_1 OR Bit_Slice13_out1_1;

  Start_1_13_out1_1 <= to_signed(-16#093#, 9);

  Start_1_14_out1_1 <= to_signed(-16#093#, 9);

  
  Switch12_out1_1 <= Start_1_13_out1_1 WHEN Bit_Slice12_out1 = '0' ELSE
      Start_1_14_out1_1;

  Start_1_15_out1_1 <= to_signed(-16#094#, 9);

  Start_1_16_out1_1 <= to_signed(-16#094#, 9);

  
  Switch14_out1_1 <= Start_1_15_out1_1 WHEN Bit_Slice14_out1_1 = '0' ELSE
      Start_1_16_out1_1;

  
  Switch13_out1_1 <= Switch12_out1_1 WHEN Logical_Operator3_out1_3 = '0' ELSE
      Switch14_out1_1;

  Bit_Concat_out1 <= Constant_out1_2 & Delay4_out1_1;

  Data_Type_Conversion_out1 <= signed(Bit_Concat_out1);

  
  Switch11_out1_1 <= Switch8_out1_1 WHEN Logical_Operator2_out1_2 = '0' ELSE
      Switch13_out1_1;

  
  Switch1_out1_1 <= Switch_out1_2 WHEN Logical_Operator8_out1_1 = '0' ELSE
      Switch11_out1_1;

  Add_out1_1 <= Data_Type_Conversion_out1 + Switch1_out1_1;

  Bit_Slice_out1 <= Add_out1_1(8);

  Logical_Operator3_out1_4 <=  NOT Bit_Slice_out1;

  Delay20_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay20_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay20_out1 <= Logical_Operator3_out1_4;
      END IF;
    END IF;
  END PROCESS Delay20_process;


  Logical_Operator2_out1_4 <=  NOT Delay20_out1;

  Delay14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay14_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay14_reg(0) <= aSign;
        Delay14_reg(1) <= Delay14_reg(0);
      END IF;
    END IF;
  END PROCESS Delay14_process;

  Delay14_out1 <= Delay14_reg(1);

  Logical_Operator1_out1_3 <= Logical_Operator2_out1_4 AND Delay14_out1;

  Logical_Operator6_out1_2 <= Delay11_out1 OR Logical_Operator1_out1_3;

  Delay12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay12_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay12_out1 <= alpha255_out1;
      END IF;
    END IF;
  END PROCESS Delay12_process;


  
  Compare_To_Zero1_out1_2 <= '1' WHEN Add_out1_1 = to_signed(16#000#, 9) ELSE
      '0';

  Delay21_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay21_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay21_out1 <= Compare_To_Zero1_out1_2;
      END IF;
    END IF;
  END PROCESS Delay21_process;


  Logical_Operator13_out1 <= Delay20_out1 AND (Delay21_out1 AND (Delay12_out1 AND Delay14_out1));

  Logical_Operator9_out1 <= Delay11_out1 OR (Logical_Operator2_out1_4 OR Delay21_out1);

  Logical_Operator8_out1_2 <= Delay14_out1 AND Logical_Operator9_out1;

  
  Switch16_out1 <= Logical_Operator13_out1 WHEN Logical_Operator6_out1_2 = '0' ELSE
      Logical_Operator8_out1_2;

  Logical_Operator5_out1_3 <= Delay14_out1 AND (Delay20_out1 AND Delay21_out1);

  Constant_out1_3 <= '0';

  
  Switch3_out1_1 <= Logical_Operator5_out1_3 WHEN Delay17_out1 = '0' ELSE
      Constant_out1_3;

  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay5_out1 <= bSign;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  reduced_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_out1_1 <= '0';
      ELSIF enb = '1' THEN
        Delay5_out1_1 <= Delay5_out1;
      END IF;
    END IF;
  END PROCESS reduced_process;


  
  Switch_out1_3 <= Delay5_out1_1 WHEN Delay13_out1 = '0' ELSE
      Delay14_out1;

  
  Switch6_out1_1 <= Switch3_out1_1 WHEN Logical_Operator3_out1_1 = '0' ELSE
      Switch_out1_3;

  
  Switch12_out1_2 <= Switch16_out1 WHEN Logical_Operator7_out1 = '0' ELSE
      Switch6_out1_1;

  Delay9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay9_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay9_reg(0) <= Switch12_out1_2;
        Delay9_reg(29 DOWNTO 1) <= Delay9_reg(28 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay9_process;

  Delay9_out1 <= Delay9_reg(29);

  Delay18_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay18_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay18_out1 <= Compare_To_Constant_out1;
      END IF;
    END IF;
  END PROCESS Delay18_process;


  Logical_Operator_out1_3 <= Logical_Operator1_out1_3 OR (Delay18_out1 OR (Delay17_out1 OR (Delay12_out1 OR (Delay10_out1 OR Delay11_out1))));

  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay6_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay6_reg(0) <= Logical_Operator_out1_3;
        Delay6_reg(29 DOWNTO 1) <= Delay6_reg(28 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay6_process;

  Delay6_out1 <= Delay6_reg(29);

  C3_out1 <= '0';

  Logical_Operator_out1_4 <= Delay9_out1 AND Delay6_out1;

  Logical_Operator3_out1_5 <=  NOT Delay6_out1;

  Logical_Operator1_out1_4 <= C3_out1 AND Logical_Operator3_out1_5;

  Logical_Operator2_out1_5 <= Logical_Operator_out1_4 OR Logical_Operator1_out1_4;

  Constant1_out1 <= '0';

  
  Switch1_out1_2 <= Logical_Operator2_out1_5 WHEN Delay1_out1 = '0' ELSE
      Constant1_out1;

  Delay3_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1_2 <= '0';
      ELSIF enb = '1' THEN
        Delay3_out1_2 <= Switch1_out1_2;
      END IF;
    END IF;
  END PROCESS Delay3_2_process;


  alpha1_out1 <= to_unsigned(16#0#, 3);

  C_out1 <= to_unsigned(16#01#, 8);

  
  if_Exponent_0_out1 <= C_out1 WHEN Compare_To_Zero1_out1 = '0' ELSE
      Delay1_out1_1;

  Bit_Concat1_out1 <= alpha1_out1 & if_Exponent_0_out1;

  reinterpretcast_bitconcat_fi_0_1_out1 <= signed(Bit_Concat1_out1);

  cast_cfType_ExponentBias_lik_out1 <= to_signed(-16#07F#, 11);

  exp_unbiased_cast_cfType_Exp_add_temp <= resize(reinterpretcast_bitconcat_fi_0_1_out1, 32) + resize(cast_cfType_ExponentBias_lik_out1, 32);
  exp_unbiased_cast_cfType_Exp_out1 <= exp_unbiased_cast_cfType_Exp_add_temp(10 DOWNTO 0);

  Delay24_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay24_out1 <= to_signed(16#000#, 11);
      ELSIF enb = '1' THEN
        Delay24_out1 <= exp_unbiased_cast_cfType_Exp_out1;
      END IF;
    END IF;
  END PROCESS Delay24_process;


  Delay15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay15_reg <= (OTHERS => to_signed(16#000#, 11));
      ELSIF enb = '1' THEN
        Delay15_reg(0) <= Delay24_out1;
        Delay15_reg(1 TO 7) <= Delay15_reg(0 TO 6);
      END IF;
    END IF;
  END PROCESS Delay15_process;

  Delay15_out1 <= Delay15_reg(7);

  Delay10_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay10_reg <= (OTHERS => to_signed(16#000#, 11));
      ELSIF enb = '1' THEN
        Delay10_reg(0) <= Delay15_out1;
        Delay10_reg(1 TO 5) <= Delay10_reg(0 TO 4);
      END IF;
    END IF;
  END PROCESS Delay10_1_process;

  Delay10_out1_1 <= Delay10_reg(5);

  alpha0_out1 <= to_unsigned(0, 51);

  Bit_Concat_out1_1 <= unsigned(Delay10_out1_1) & alpha0_out1;

  reinterpretcast_bitconcat_exp_out1 <= signed(Bit_Concat_out1_1);

  Bit_Concat1_out1_1 <= Compare_To_Zero1_out1 & Switch_out1;

  reinterpretcast_bitconcat_fi_0_out1 <= Bit_Concat1_out1_1;

  Constant_out1_4 <= to_unsigned(16#0#, 4);

  Delay25_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay25_out1 <= to_unsigned(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay25_out1 <= reinterpretcast_bitconcat_fi_0_out1;
      END IF;
    END IF;
  END PROCESS Delay25_process;


  BitSlice_out1 <= Delay25_out1(22 DOWNTO 0);

  Constant1_out1_1 <= to_unsigned(16#0#, 2);

  Bit_Concat1_out1_2 <= Constant_out1_4 & BitSlice_out1 & Constant1_out1_1;

  DTC_out1 <= signed(Bit_Concat1_out1_2);

  
  w_1_out1 <= '1' WHEN DTC_out1 > to_signed(16#01000000#, 29) ELSE
      '0';

  bitsll_w_1_out1 <= DTC_out1 sll 1;

  bitsll_w_1_out1_dtc <= bitsll_w_1_out1(28 DOWNTO 1);

  alpha2_out1 <= to_signed(-16#02000000#, 29);

  w_2_out1 <= DTC_out1 + alpha2_out1;

  w_2_out1_dtc <= w_2_out1(28 DOWNTO 1);

  
  if_w_1_4_out1 <= bitsll_w_1_out1_dtc WHEN w_1_out1 = '0' ELSE
      w_2_out1_dtc;

  BitSlice_out1_1 <= unsigned(if_w_1_4_out1(27 DOWNTO 21));

  reinterpretcast_bitsliceget_w_out1 <= signed(BitSlice_out1_1);

  
  w_hat_0_75_out1 <= '1' WHEN reinterpretcast_bitsliceget_w_out1 >= to_signed(16#03#, 7) ELSE
      '0';

  
  w_hat_0_5_out1 <= '1' WHEN reinterpretcast_bitsliceget_w_out1 < to_signed(-16#02#, 7) ELSE
      '0';

  Logical_Operator_out1_5 <= w_hat_0_75_out1 OR w_hat_0_5_out1;

  Constant2_out1 <= '0';

  Bit_Concat2_out1 <= unsigned(if_w_1_4_out1) & Constant2_out1;

  reinterpretcast_bitsliceget_w_1_out1 <= signed(Bit_Concat2_out1);

  bitsll_w_1_out1_1 <= reinterpretcast_bitsliceget_w_1_out1 sll 1;

  BitSlice1_out1 <= if_w_1_4_out1(27);

  Logical_Operator1_out1_5 <=  NOT BitSlice1_out1;

  alpha2_out1_1 <= to_unsigned(16#1000000#, 25);

  Bit_Concat1_out1_3 <= Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & alpha2_out1_1 & Logical_Operator1_out1_5;

  reinterpretcast_bitsliceget_w_2_out1 <= signed(Bit_Concat1_out1_3);

  alpha2_tmp1_out1 <= bitsll_w_1_out1_1 + reinterpretcast_bitsliceget_w_2_out1;

  bitsra_w_1_out1 <= SHIFT_RIGHT(reinterpretcast_bitsliceget_w_1_out1, 1);

  Bit_Concat3_out1 <= unsigned'(Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5 & Logical_Operator1_out1_5);

  reinterpretcast_bitsliceget_w_3_out1 <= signed(Bit_Concat3_out1);

  Bitwise_Operator_out1 <= bitsra_w_1_out1 XOR reinterpretcast_bitsliceget_w_3_out1;

  w_tmp2_out1 <= alpha2_tmp1_out1 + Bitwise_Operator_out1;

  
  if_w_hat_0_75_1_out1 <= bitsll_w_1_out1_1 WHEN Logical_Operator_out1_5 = '0' ELSE
      w_tmp2_out1;

  Delay4_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1_2 <= to_signed(16#00000000#, 29);
      ELSIF enb = '1' THEN
        Delay4_out1_2 <= if_w_hat_0_75_1_out1;
      END IF;
    END IF;
  END PROCESS Delay4_2_process;


  BitSlice_out1_2 <= unsigned(Delay4_out1_2(28 DOWNTO 20));

  reinterpretcast_bitsliceget_w_out1_1 <= signed(BitSlice_out1_2);

  
  w_hat_0_75_out1_1 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_1 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_1 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_1 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_6 <= w_hat_0_75_out1_1 OR w_hat_0_5_out1_1;

  Constant2_out1_1 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_1 <= unsigned(Delay4_out1_2) & Constant2_out1_1;

  reinterpretcast_bitsliceget_w_1_out1_1 <= signed(Bit_Concat2_out1_1);

  bitsll_w_1_out1_2 <= reinterpretcast_bitsliceget_w_1_out1_1 sll 1;

  BitSlice1_out1_1 <= Delay4_out1_2(28);

  Logical_Operator1_out1_6 <=  NOT BitSlice1_out1_1;

  alpha2_out1_2 <= to_unsigned(16#4000000#, 27);

  Bit_Concat3_out1_1 <= Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & alpha2_out1_2 & Logical_Operator1_out1_6;

  reinterpretcast_bitsliceget_w_3_out1_1 <= signed(Bit_Concat3_out1_1);

  alpha2_tmp1_out1_1 <= bitsll_w_1_out1_2 + reinterpretcast_bitsliceget_w_3_out1_1;

  bitsra_w_1_1_out1 <= SHIFT_RIGHT(reinterpretcast_bitsliceget_w_1_out1_1, 2);

  Bit_Concat3_out1_2 <= unsigned'(Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6 & Logical_Operator1_out1_6);

  reinterpretcast_bitsliceget_w_3_out1_2 <= signed(Bit_Concat3_out1_2);

  Bitwise_Operator_out1_1 <= bitsra_w_1_1_out1 XOR reinterpretcast_bitsliceget_w_3_out1_2;

  w_tmp2_out1_1 <= alpha2_tmp1_out1_1 + Bitwise_Operator_out1_1;

  
  if_w_hat_0_75_1_out1_1 <= bitsll_w_1_out1_2 WHEN Logical_Operator_out1_6 = '0' ELSE
      w_tmp2_out1_1;

  BitSlice_out1_3 <= unsigned(if_w_hat_0_75_1_out1_1(30 DOWNTO 22));

  reinterpretcast_bitsliceget_w_out1_2 <= signed(BitSlice_out1_3);

  
  w_hat_0_75_out1_2 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_2 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_2 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_2 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_7 <= w_hat_0_75_out1_2 OR w_hat_0_5_out1_2;

  Constant2_out1_2 <= to_unsigned(16#0#, 3);

  Bit_Concat2_out1_2 <= unsigned(if_w_hat_0_75_1_out1_1) & Constant2_out1_2;

  reinterpretcast_bitsliceget_w_2_out1_1 <= signed(Bit_Concat2_out1_2);

  bitsll_w_1_out1_3 <= reinterpretcast_bitsliceget_w_2_out1_1 sll 1;

  BitSlice1_out1_2 <= if_w_hat_0_75_1_out1_1(30);

  Logical_Operator1_out1_7 <=  NOT BitSlice1_out1_2;

  alpha2_out1_3 <= to_unsigned(16#20000000#, 30);

  Bit_Concat3_out1_3 <= Logical_Operator1_out1_7 & Logical_Operator1_out1_7 & Logical_Operator1_out1_7 & alpha2_out1_3 & Logical_Operator1_out1_7;

  reinterpretcast_bitsliceget_w_3_out1_3 <= signed(Bit_Concat3_out1_3);

  Bit_Concat_out1_2 <= unsigned'(Logical_Operator1_out1_7 & Logical_Operator1_out1_7);

  Bit_Concat1_out1_4 <= Bit_Concat_out1_2 & Bit_Concat_out1_2;

  Bit_Concat2_out1_3 <= Bit_Concat1_out1_4 & Bit_Concat1_out1_4;

  Bit_Concat3_out1_4 <= Bit_Concat2_out1_3 & Bit_Concat2_out1_3;

  alpha2_tmp1_out1_2 <= bitsll_w_1_out1_3 + reinterpretcast_bitsliceget_w_3_out1_3;

  bitsra_w_1_1_out1_1 <= SHIFT_RIGHT(reinterpretcast_bitsliceget_w_2_out1_1, 3);

  Bit_Concat4_out1 <= Bit_Concat3_out1_4 & Bit_Concat3_out1_4 & Bit_Concat_out1_2;

  reinterpretcast_bitsliceget_w_3_out1_4 <= signed(Bit_Concat4_out1);

  Bitwise_Operator_out1_2 <= bitsra_w_1_1_out1_1 XOR reinterpretcast_bitsliceget_w_3_out1_4;

  w_tmp2_out1_2 <= alpha2_tmp1_out1_2 + Bitwise_Operator_out1_2;

  
  if_w_hat_0_75_1_out1_2 <= bitsll_w_1_out1_3 WHEN Logical_Operator_out1_7 = '0' ELSE
      w_tmp2_out1_2;

  Delay9_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay9_out1_1 <= to_signed(0, 34);
      ELSIF enb = '1' THEN
        Delay9_out1_1 <= if_w_hat_0_75_1_out1_2;
      END IF;
    END IF;
  END PROCESS Delay9_1_process;


  BitSlice_out1_4 <= unsigned(Delay9_out1_1(33 DOWNTO 25));

  reinterpretcast_bitsliceget_w_out1_3 <= signed(BitSlice_out1_4);

  
  w_hat_0_75_out1_3 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_3 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_3 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_3 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_8 <= w_hat_0_75_out1_3 OR w_hat_0_5_out1_3;

  Constant2_out1_3 <= to_unsigned(16#0#, 3);

  Bit_Concat2_out1_4 <= unsigned(Delay9_out1_1) & Constant2_out1_3;

  reinterpretcast_bitsliceget_w_2_out1_2 <= signed(Bit_Concat2_out1_4);

  bitsll_w_1_out1_4 <= reinterpretcast_bitsliceget_w_2_out1_2 sll 1;

  BitSlice1_out1_3 <= Delay9_out1_1(33);

  Logical_Operator1_out1_8 <=  NOT BitSlice1_out1_3;

  alpha2_out1_4 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_5 <= Logical_Operator1_out1_8 & Logical_Operator1_out1_8 & Logical_Operator1_out1_8 & alpha2_out1_4 & Logical_Operator1_out1_8;

  reinterpretcast_bitsliceget_w_3_out1_5 <= signed(Bit_Concat3_out1_5);

  Bit_Concat_out1_3 <= unsigned'(Logical_Operator1_out1_8 & Logical_Operator1_out1_8);

  Bit_Concat1_out1_5 <= Bit_Concat_out1_3 & Bit_Concat_out1_3;

  Bit_Concat2_out1_5 <= Bit_Concat1_out1_5 & Bit_Concat1_out1_5;

  Bit_Concat3_out1_6 <= Bit_Concat2_out1_5 & Bit_Concat2_out1_5;

  Bit_Concat5_out1 <= Bit_Concat1_out1_5 & Logical_Operator1_out1_8;

  alpha2_tmp1_out1_3 <= bitsll_w_1_out1_4 + reinterpretcast_bitsliceget_w_3_out1_5;

  bitsra_w_1_1_out1_2 <= SHIFT_RIGHT(reinterpretcast_bitsliceget_w_2_out1_2, 4);

  Bit_Concat4_out1_1 <= Bit_Concat3_out1_6 & Bit_Concat3_out1_6 & Bit_Concat5_out1;

  reinterpretcast_bitsliceget_w_3_out1_6 <= signed(Bit_Concat4_out1_1);

  Bitwise_Operator_out1_3 <= bitsra_w_1_1_out1_2 XOR reinterpretcast_bitsliceget_w_3_out1_6;

  w_tmp2_out1_3 <= alpha2_tmp1_out1_3 + Bitwise_Operator_out1_3;

  
  if_w_hat_0_75_1_out1_3 <= bitsll_w_1_out1_4 WHEN Logical_Operator_out1_8 = '0' ELSE
      w_tmp2_out1_3;

  BitSlice_out1_5 <= unsigned(if_w_hat_0_75_1_out1_3(36 DOWNTO 28));

  reinterpretcast_bitsliceget_w_out1_4 <= signed(BitSlice_out1_5);

  
  w_hat_0_75_out1_4 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_4 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_4 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_4 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_9 <= w_hat_0_75_out1_4 OR w_hat_0_5_out1_4;

  bitsll_w_1_out1_5 <= if_w_hat_0_75_1_out1_3 sll 1;

  BitSlice1_out1_4 <= if_w_hat_0_75_1_out1_3(36);

  Logical_Operator1_out1_9 <=  NOT BitSlice1_out1_4;

  alpha2_out1_5 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_7 <= Logical_Operator1_out1_9 & Logical_Operator1_out1_9 & Logical_Operator1_out1_9 & alpha2_out1_5 & Logical_Operator1_out1_9;

  reinterpretcast_bitsliceget_w_3_out1_7 <= signed(Bit_Concat3_out1_7);

  Bit_Concat_out1_4 <= unsigned'(Logical_Operator1_out1_9 & Logical_Operator1_out1_9);

  Bit_Concat1_out1_6 <= Bit_Concat_out1_4 & Bit_Concat_out1_4;

  Bit_Concat2_out1_6 <= Bit_Concat1_out1_6 & Bit_Concat1_out1_6;

  Bit_Concat3_out1_8 <= Bit_Concat2_out1_6 & Bit_Concat2_out1_6;

  Bit_Concat5_out1_1 <= Bit_Concat1_out1_6 & Logical_Operator1_out1_9;

  alpha2_tmp1_out1_4 <= bitsll_w_1_out1_5 + reinterpretcast_bitsliceget_w_3_out1_7;

  bitsra_w_1_1_out1_3 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_3, 5);

  Bit_Concat4_out1_2 <= Bit_Concat3_out1_8 & Bit_Concat3_out1_8 & Bit_Concat5_out1_1;

  reinterpretcast_bitsliceget_w_3_out1_8 <= signed(Bit_Concat4_out1_2);

  Bitwise_Operator_out1_4 <= bitsra_w_1_1_out1_3 XOR reinterpretcast_bitsliceget_w_3_out1_8;

  w_tmp2_out1_4 <= alpha2_tmp1_out1_4 + Bitwise_Operator_out1_4;

  
  if_w_hat_0_75_1_out1_4 <= bitsll_w_1_out1_5 WHEN Logical_Operator_out1_9 = '0' ELSE
      w_tmp2_out1_4;

  Delay11_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay11_out1_1 <= to_signed(0, 37);
      ELSIF enb = '1' THEN
        Delay11_out1_1 <= if_w_hat_0_75_1_out1_4;
      END IF;
    END IF;
  END PROCESS Delay11_1_process;


  BitSlice_out1_6 <= unsigned(Delay11_out1_1(36 DOWNTO 28));

  reinterpretcast_bitsliceget_w_out1_5 <= signed(BitSlice_out1_6);

  
  w_hat_0_75_out1_5 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_5 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_5 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_5 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_10 <= w_hat_0_75_out1_5 OR w_hat_0_5_out1_5;

  bitsll_w_1_out1_6 <= Delay11_out1_1 sll 1;

  BitSlice1_out1_5 <= Delay11_out1_1(36);

  Logical_Operator1_out1_10 <=  NOT BitSlice1_out1_5;

  alpha2_out1_6 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_9 <= Logical_Operator1_out1_10 & Logical_Operator1_out1_10 & Logical_Operator1_out1_10 & alpha2_out1_6 & Logical_Operator1_out1_10;

  reinterpretcast_bitsliceget_w_3_out1_9 <= signed(Bit_Concat3_out1_9);

  Bit_Concat_out1_5 <= unsigned'(Logical_Operator1_out1_10 & Logical_Operator1_out1_10);

  Bit_Concat1_out1_7 <= Bit_Concat_out1_5 & Bit_Concat_out1_5;

  Bit_Concat2_out1_7 <= Bit_Concat1_out1_7 & Bit_Concat1_out1_7;

  Bit_Concat3_out1_10 <= Bit_Concat2_out1_7 & Bit_Concat2_out1_7;

  Bit_Concat5_out1_2 <= Bit_Concat1_out1_7 & Logical_Operator1_out1_10;

  alpha2_tmp1_out1_5 <= bitsll_w_1_out1_6 + reinterpretcast_bitsliceget_w_3_out1_9;

  bitsra_w_1_1_out1_4 <= SHIFT_RIGHT(Delay11_out1_1, 6);

  Bit_Concat4_out1_3 <= Bit_Concat3_out1_10 & Bit_Concat3_out1_10 & Bit_Concat5_out1_2;

  reinterpretcast_bitsliceget_w_3_out1_10 <= signed(Bit_Concat4_out1_3);

  Bitwise_Operator_out1_5 <= bitsra_w_1_1_out1_4 XOR reinterpretcast_bitsliceget_w_3_out1_10;

  w_tmp2_out1_5 <= alpha2_tmp1_out1_5 + Bitwise_Operator_out1_5;

  
  if_w_hat_0_75_1_out1_5 <= bitsll_w_1_out1_6 WHEN Logical_Operator_out1_10 = '0' ELSE
      w_tmp2_out1_5;

  BitSlice_out1_7 <= unsigned(if_w_hat_0_75_1_out1_5(36 DOWNTO 28));

  reinterpretcast_bitsliceget_w_out1_6 <= signed(BitSlice_out1_7);

  
  w_hat_0_75_out1_6 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_6 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_6 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_6 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_11 <= w_hat_0_75_out1_6 OR w_hat_0_5_out1_6;

  bitsll_w_1_out1_7 <= if_w_hat_0_75_1_out1_5 sll 1;

  BitSlice1_out1_6 <= if_w_hat_0_75_1_out1_5(36);

  Logical_Operator1_out1_11 <=  NOT BitSlice1_out1_6;

  alpha2_out1_7 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_11 <= Logical_Operator1_out1_11 & Logical_Operator1_out1_11 & Logical_Operator1_out1_11 & alpha2_out1_7 & Logical_Operator1_out1_11;

  reinterpretcast_bitsliceget_w_3_out1_11 <= signed(Bit_Concat3_out1_11);

  Bit_Concat_out1_6 <= unsigned'(Logical_Operator1_out1_11 & Logical_Operator1_out1_11);

  Bit_Concat1_out1_8 <= Bit_Concat_out1_6 & Bit_Concat_out1_6;

  Bit_Concat2_out1_8 <= Bit_Concat1_out1_8 & Bit_Concat1_out1_8;

  Bit_Concat3_out1_12 <= Bit_Concat2_out1_8 & Bit_Concat2_out1_8;

  Bit_Concat5_out1_3 <= Bit_Concat1_out1_8 & Logical_Operator1_out1_11;

  alpha2_tmp1_out1_6 <= bitsll_w_1_out1_7 + reinterpretcast_bitsliceget_w_3_out1_11;

  bitsra_w_1_1_out1_5 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_5, 7);

  Bit_Concat4_out1_4 <= Bit_Concat3_out1_12 & Bit_Concat3_out1_12 & Bit_Concat5_out1_3;

  reinterpretcast_bitsliceget_w_3_out1_12 <= signed(Bit_Concat4_out1_4);

  Bitwise_Operator_out1_6 <= bitsra_w_1_1_out1_5 XOR reinterpretcast_bitsliceget_w_3_out1_12;

  w_tmp2_out1_6 <= alpha2_tmp1_out1_6 + Bitwise_Operator_out1_6;

  
  if_w_hat_0_75_1_out1_6 <= bitsll_w_1_out1_7 WHEN Logical_Operator_out1_11 = '0' ELSE
      w_tmp2_out1_6;

  Delay13_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay13_out1_1 <= to_signed(0, 37);
      ELSIF enb = '1' THEN
        Delay13_out1_1 <= if_w_hat_0_75_1_out1_6;
      END IF;
    END IF;
  END PROCESS Delay13_1_process;


  BitSlice_out1_8 <= unsigned(Delay13_out1_1(36 DOWNTO 28));

  reinterpretcast_bitsliceget_w_out1_7 <= signed(BitSlice_out1_8);

  
  w_hat_0_75_out1_7 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_7 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_7 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_7 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_12 <= w_hat_0_75_out1_7 OR w_hat_0_5_out1_7;

  bitsll_w_1_out1_8 <= Delay13_out1_1 sll 1;

  BitSlice1_out1_7 <= Delay13_out1_1(36);

  Logical_Operator1_out1_12 <=  NOT BitSlice1_out1_7;

  alpha2_out1_8 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_13 <= Logical_Operator1_out1_12 & Logical_Operator1_out1_12 & Logical_Operator1_out1_12 & alpha2_out1_8 & Logical_Operator1_out1_12;

  reinterpretcast_bitsliceget_w_3_out1_13 <= signed(Bit_Concat3_out1_13);

  Bit_Concat_out1_7 <= unsigned'(Logical_Operator1_out1_12 & Logical_Operator1_out1_12);

  Bit_Concat1_out1_9 <= Bit_Concat_out1_7 & Bit_Concat_out1_7;

  Bit_Concat2_out1_9 <= Bit_Concat1_out1_9 & Bit_Concat1_out1_9;

  Bit_Concat3_out1_14 <= Bit_Concat2_out1_9 & Bit_Concat2_out1_9;

  Bit_Concat5_out1_4 <= Bit_Concat1_out1_9 & Logical_Operator1_out1_12;

  alpha2_tmp1_out1_7 <= bitsll_w_1_out1_8 + reinterpretcast_bitsliceget_w_3_out1_13;

  bitsra_w_1_1_out1_6 <= SHIFT_RIGHT(Delay13_out1_1, 8);

  Bit_Concat4_out1_5 <= Bit_Concat3_out1_14 & Bit_Concat3_out1_14 & Bit_Concat5_out1_4;

  reinterpretcast_bitsliceget_w_3_out1_14 <= signed(Bit_Concat4_out1_5);

  Bitwise_Operator_out1_7 <= bitsra_w_1_1_out1_6 XOR reinterpretcast_bitsliceget_w_3_out1_14;

  w_tmp2_out1_7 <= alpha2_tmp1_out1_7 + Bitwise_Operator_out1_7;

  
  if_w_hat_0_75_1_out1_7 <= bitsll_w_1_out1_8 WHEN Logical_Operator_out1_12 = '0' ELSE
      w_tmp2_out1_7;

  BitSlice_out1_9 <= unsigned(if_w_hat_0_75_1_out1_7(36 DOWNTO 28));

  reinterpretcast_bitsliceget_w_out1_8 <= signed(BitSlice_out1_9);

  
  w_hat_0_75_out1_8 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_8 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_8 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_8 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_13 <= w_hat_0_75_out1_8 OR w_hat_0_5_out1_8;

  bitsll_w_1_out1_9 <= if_w_hat_0_75_1_out1_7 sll 1;

  BitSlice1_out1_8 <= if_w_hat_0_75_1_out1_7(36);

  Logical_Operator1_out1_13 <=  NOT BitSlice1_out1_8;

  alpha2_out1_9 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_15 <= Logical_Operator1_out1_13 & Logical_Operator1_out1_13 & Logical_Operator1_out1_13 & alpha2_out1_9 & Logical_Operator1_out1_13;

  reinterpretcast_bitsliceget_w_3_out1_15 <= signed(Bit_Concat3_out1_15);

  Bit_Concat_out1_8 <= unsigned'(Logical_Operator1_out1_13 & Logical_Operator1_out1_13);

  Bit_Concat1_out1_10 <= Bit_Concat_out1_8 & Bit_Concat_out1_8;

  Bit_Concat2_out1_10 <= Bit_Concat1_out1_10 & Bit_Concat1_out1_10;

  Bit_Concat3_out1_16 <= Bit_Concat2_out1_10 & Bit_Concat2_out1_10;

  Bit_Concat5_out1_5 <= Bit_Concat1_out1_10 & Logical_Operator1_out1_13;

  alpha2_tmp1_out1_8 <= bitsll_w_1_out1_9 + reinterpretcast_bitsliceget_w_3_out1_15;

  bitsra_w_1_1_out1_7 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_7, 9);

  Bit_Concat4_out1_6 <= Bit_Concat3_out1_16 & Bit_Concat3_out1_16 & Bit_Concat5_out1_5;

  reinterpretcast_bitsliceget_w_3_out1_16 <= signed(Bit_Concat4_out1_6);

  Bitwise_Operator_out1_8 <= bitsra_w_1_1_out1_7 XOR reinterpretcast_bitsliceget_w_3_out1_16;

  w_tmp2_out1_8 <= alpha2_tmp1_out1_8 + Bitwise_Operator_out1_8;

  
  if_w_hat_0_75_1_out1_8 <= bitsll_w_1_out1_9 WHEN Logical_Operator_out1_13 = '0' ELSE
      w_tmp2_out1_8;

  Delay15_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay15_out1_1 <= to_signed(0, 37);
      ELSIF enb = '1' THEN
        Delay15_out1_1 <= if_w_hat_0_75_1_out1_8;
      END IF;
    END IF;
  END PROCESS Delay15_1_process;


  BitSlice_out1_10 <= unsigned(Delay15_out1_1(36 DOWNTO 28));

  reinterpretcast_bitsliceget_w_out1_9 <= signed(BitSlice_out1_10);

  
  w_hat_0_75_out1_9 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_9 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_9 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_9 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_14 <= w_hat_0_75_out1_9 OR w_hat_0_5_out1_9;

  bitsll_w_1_out1_10 <= Delay15_out1_1 sll 1;

  BitSlice1_out1_9 <= Delay15_out1_1(36);

  Logical_Operator1_out1_14 <=  NOT BitSlice1_out1_9;

  alpha2_out1_10 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_17 <= Logical_Operator1_out1_14 & Logical_Operator1_out1_14 & Logical_Operator1_out1_14 & alpha2_out1_10 & Logical_Operator1_out1_14;

  reinterpretcast_bitsliceget_w_3_out1_17 <= signed(Bit_Concat3_out1_17);

  Bit_Concat_out1_9 <= unsigned'(Logical_Operator1_out1_14 & Logical_Operator1_out1_14);

  Bit_Concat1_out1_11 <= Bit_Concat_out1_9 & Bit_Concat_out1_9;

  Bit_Concat2_out1_11 <= Bit_Concat1_out1_11 & Bit_Concat1_out1_11;

  Bit_Concat3_out1_18 <= Bit_Concat2_out1_11 & Bit_Concat2_out1_11;

  Bit_Concat5_out1_6 <= Bit_Concat1_out1_11 & Logical_Operator1_out1_14;

  alpha2_tmp1_out1_9 <= bitsll_w_1_out1_10 + reinterpretcast_bitsliceget_w_3_out1_17;

  bitsra_w_1_1_out1_8 <= SHIFT_RIGHT(Delay15_out1_1, 10);

  Bit_Concat4_out1_7 <= Bit_Concat3_out1_18 & Bit_Concat3_out1_18 & Bit_Concat5_out1_6;

  reinterpretcast_bitsliceget_w_3_out1_18 <= signed(Bit_Concat4_out1_7);

  Bitwise_Operator_out1_9 <= bitsra_w_1_1_out1_8 XOR reinterpretcast_bitsliceget_w_3_out1_18;

  w_tmp2_out1_9 <= alpha2_tmp1_out1_9 + Bitwise_Operator_out1_9;

  
  if_w_hat_0_75_1_out1_9 <= bitsll_w_1_out1_10 WHEN Logical_Operator_out1_14 = '0' ELSE
      w_tmp2_out1_9;

  BitSlice_out1_11 <= unsigned(if_w_hat_0_75_1_out1_9(36 DOWNTO 28));

  reinterpretcast_bitsliceget_w_out1_10 <= signed(BitSlice_out1_11);

  
  w_hat_0_75_out1_10 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_10 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_10 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_10 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_15 <= w_hat_0_75_out1_10 OR w_hat_0_5_out1_10;

  bitsll_w_1_out1_11 <= if_w_hat_0_75_1_out1_9 sll 1;

  BitSlice1_out1_10 <= if_w_hat_0_75_1_out1_9(36);

  Logical_Operator1_out1_15 <=  NOT BitSlice1_out1_10;

  alpha2_out1_11 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_19 <= Logical_Operator1_out1_15 & Logical_Operator1_out1_15 & Logical_Operator1_out1_15 & alpha2_out1_11 & Logical_Operator1_out1_15;

  reinterpretcast_bitsliceget_w_3_out1_19 <= signed(Bit_Concat3_out1_19);

  Bit_Concat_out1_10 <= unsigned'(Logical_Operator1_out1_15 & Logical_Operator1_out1_15);

  Bit_Concat1_out1_12 <= Bit_Concat_out1_10 & Bit_Concat_out1_10;

  Bit_Concat2_out1_12 <= Bit_Concat1_out1_12 & Bit_Concat1_out1_12;

  Bit_Concat3_out1_20 <= Bit_Concat2_out1_12 & Bit_Concat2_out1_12;

  Bit_Concat5_out1_7 <= Bit_Concat1_out1_12 & Logical_Operator1_out1_15;

  alpha2_tmp1_out1_10 <= bitsll_w_1_out1_11 + reinterpretcast_bitsliceget_w_3_out1_19;

  bitsra_w_1_1_out1_9 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_9, 11);

  Bit_Concat4_out1_8 <= Bit_Concat3_out1_20 & Bit_Concat3_out1_20 & Bit_Concat5_out1_7;

  reinterpretcast_bitsliceget_w_3_out1_20 <= signed(Bit_Concat4_out1_8);

  Bitwise_Operator_out1_10 <= bitsra_w_1_1_out1_9 XOR reinterpretcast_bitsliceget_w_3_out1_20;

  w_tmp2_out1_10 <= alpha2_tmp1_out1_10 + Bitwise_Operator_out1_10;

  
  if_w_hat_0_75_1_out1_10 <= bitsll_w_1_out1_11 WHEN Logical_Operator_out1_15 = '0' ELSE
      w_tmp2_out1_10;

  Delay25_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay25_out1_1 <= to_signed(0, 37);
      ELSIF enb = '1' THEN
        Delay25_out1_1 <= if_w_hat_0_75_1_out1_10;
      END IF;
    END IF;
  END PROCESS Delay25_1_process;


  BitSlice_out1_12 <= unsigned(Delay25_out1_1(36 DOWNTO 28));

  reinterpretcast_bitsliceget_w_out1_11 <= signed(BitSlice_out1_12);

  
  w_hat_0_75_out1_11 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_11 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_11 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_11 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_16 <= w_hat_0_75_out1_11 OR w_hat_0_5_out1_11;

  bitsll_w_1_out1_12 <= Delay25_out1_1 sll 1;

  BitSlice1_out1_11 <= Delay25_out1_1(36);

  Logical_Operator1_out1_16 <=  NOT BitSlice1_out1_11;

  alpha2_out1_12 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_21 <= Logical_Operator1_out1_16 & Logical_Operator1_out1_16 & Logical_Operator1_out1_16 & alpha2_out1_12 & Logical_Operator1_out1_16;

  reinterpretcast_bitsliceget_w_3_out1_21 <= signed(Bit_Concat3_out1_21);

  Bit_Concat_out1_11 <= unsigned'(Logical_Operator1_out1_16 & Logical_Operator1_out1_16);

  Bit_Concat1_out1_13 <= Bit_Concat_out1_11 & Bit_Concat_out1_11;

  Bit_Concat2_out1_13 <= Bit_Concat1_out1_13 & Bit_Concat1_out1_13;

  Bit_Concat3_out1_22 <= Bit_Concat2_out1_13 & Bit_Concat2_out1_13;

  Bit_Concat5_out1_8 <= Bit_Concat1_out1_13 & Logical_Operator1_out1_16;

  alpha2_tmp1_out1_11 <= bitsll_w_1_out1_12 + reinterpretcast_bitsliceget_w_3_out1_21;

  bitsra_w_1_1_out1_10 <= SHIFT_RIGHT(Delay25_out1_1, 12);

  Bit_Concat4_out1_9 <= Bit_Concat3_out1_22 & Bit_Concat3_out1_22 & Bit_Concat5_out1_8;

  reinterpretcast_bitsliceget_w_3_out1_22 <= signed(Bit_Concat4_out1_9);

  Bitwise_Operator_out1_11 <= bitsra_w_1_1_out1_10 XOR reinterpretcast_bitsliceget_w_3_out1_22;

  w_tmp2_out1_11 <= alpha2_tmp1_out1_11 + Bitwise_Operator_out1_11;

  
  if_w_hat_0_75_1_out1_11 <= bitsll_w_1_out1_12 WHEN Logical_Operator_out1_16 = '0' ELSE
      w_tmp2_out1_11;

  BitSlice_out1_13 <= unsigned(if_w_hat_0_75_1_out1_11(36 DOWNTO 28));

  reinterpretcast_bitsliceget_w_out1_12 <= signed(BitSlice_out1_13);

  
  w_hat_0_75_out1_12 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_12 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_12 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_12 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_17 <= w_hat_0_75_out1_12 OR w_hat_0_5_out1_12;

  bitsll_w_1_out1_13 <= if_w_hat_0_75_1_out1_11 sll 1;

  BitSlice1_out1_12 <= if_w_hat_0_75_1_out1_11(36);

  Logical_Operator1_out1_17 <=  NOT BitSlice1_out1_12;

  alpha2_out1_13 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_23 <= Logical_Operator1_out1_17 & Logical_Operator1_out1_17 & Logical_Operator1_out1_17 & alpha2_out1_13 & Logical_Operator1_out1_17;

  reinterpretcast_bitsliceget_w_3_out1_23 <= signed(Bit_Concat3_out1_23);

  Bit_Concat_out1_12 <= unsigned'(Logical_Operator1_out1_17 & Logical_Operator1_out1_17);

  Bit_Concat1_out1_14 <= Bit_Concat_out1_12 & Bit_Concat_out1_12;

  Bit_Concat2_out1_14 <= Bit_Concat1_out1_14 & Bit_Concat1_out1_14;

  Bit_Concat3_out1_24 <= Bit_Concat2_out1_14 & Bit_Concat2_out1_14;

  Bit_Concat5_out1_9 <= Bit_Concat1_out1_14 & Logical_Operator1_out1_17;

  alpha2_tmp1_out1_12 <= bitsll_w_1_out1_13 + reinterpretcast_bitsliceget_w_3_out1_23;

  bitsra_w_1_1_out1_11 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_11, 13);

  Bit_Concat4_out1_10 <= Bit_Concat3_out1_24 & Bit_Concat3_out1_24 & Bit_Concat5_out1_9;

  reinterpretcast_bitsliceget_w_3_out1_24 <= signed(Bit_Concat4_out1_10);

  Bitwise_Operator_out1_12 <= bitsra_w_1_1_out1_11 XOR reinterpretcast_bitsliceget_w_3_out1_24;

  w_tmp2_out1_12 <= alpha2_tmp1_out1_12 + Bitwise_Operator_out1_12;

  
  if_w_hat_0_75_1_out1_12 <= bitsll_w_1_out1_13 WHEN Logical_Operator_out1_17 = '0' ELSE
      w_tmp2_out1_12;

  Delay27_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay27_out1 <= to_signed(0, 37);
      ELSIF enb = '1' THEN
        Delay27_out1 <= if_w_hat_0_75_1_out1_12;
      END IF;
    END IF;
  END PROCESS Delay27_process;


  BitSlice_out1_14 <= unsigned(Delay27_out1(36 DOWNTO 28));

  reinterpretcast_bitsliceget_w_out1_13 <= signed(BitSlice_out1_14);

  
  w_hat_0_75_out1_13 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_13 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_13 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_13 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_18 <= w_hat_0_75_out1_13 OR w_hat_0_5_out1_13;

  bitsll_w_1_out1_14 <= Delay27_out1 sll 1;

  BitSlice1_out1_13 <= Delay27_out1(36);

  Logical_Operator1_out1_18 <=  NOT BitSlice1_out1_13;

  alpha2_out1_14 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_25 <= Logical_Operator1_out1_18 & Logical_Operator1_out1_18 & Logical_Operator1_out1_18 & alpha2_out1_14 & Logical_Operator1_out1_18;

  reinterpretcast_bitsliceget_w_3_out1_25 <= signed(Bit_Concat3_out1_25);

  Bit_Concat_out1_13 <= unsigned'(Logical_Operator1_out1_18 & Logical_Operator1_out1_18);

  Bit_Concat1_out1_15 <= Bit_Concat_out1_13 & Bit_Concat_out1_13;

  Bit_Concat2_out1_15 <= Bit_Concat1_out1_15 & Bit_Concat1_out1_15;

  Bit_Concat3_out1_26 <= Bit_Concat2_out1_15 & Bit_Concat2_out1_15;

  Bit_Concat5_out1_10 <= Bit_Concat1_out1_15 & Logical_Operator1_out1_18;

  alpha2_tmp1_out1_13 <= bitsll_w_1_out1_14 + reinterpretcast_bitsliceget_w_3_out1_25;

  bitsra_w_1_1_out1_12 <= SHIFT_RIGHT(Delay27_out1, 14);

  Bit_Concat4_out1_11 <= Bit_Concat3_out1_26 & Bit_Concat3_out1_26 & Bit_Concat5_out1_10;

  reinterpretcast_bitsliceget_w_3_out1_26 <= signed(Bit_Concat4_out1_11);

  Bitwise_Operator_out1_13 <= bitsra_w_1_1_out1_12 XOR reinterpretcast_bitsliceget_w_3_out1_26;

  w_tmp2_out1_13 <= alpha2_tmp1_out1_13 + Bitwise_Operator_out1_13;

  
  if_w_hat_0_75_1_out1_13 <= bitsll_w_1_out1_14 WHEN Logical_Operator_out1_18 = '0' ELSE
      w_tmp2_out1_13;

  BitSlice_out1_15 <= unsigned(if_w_hat_0_75_1_out1_13(36 DOWNTO 28));

  reinterpretcast_bitsliceget_w_out1_14 <= signed(BitSlice_out1_15);

  
  w_hat_0_75_out1_14 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_14 > to_signed(16#008#, 9) ELSE
      '0';

  
  w_hat_0_5_out1_14 <= '1' WHEN reinterpretcast_bitsliceget_w_out1_14 < to_signed(-16#008#, 9) ELSE
      '0';

  Logical_Operator_out1_19 <= w_hat_0_75_out1_14 OR w_hat_0_5_out1_14;

  bitsll_w_1_out1_15 <= if_w_hat_0_75_1_out1_13 sll 1;

  BitSlice1_out1_14 <= if_w_hat_0_75_1_out1_13(36);

  Logical_Operator1_out1_19 <=  NOT BitSlice1_out1_14;

  alpha2_out1_15 <= unsigned'("100000000000000000000000000000000");

  Bit_Concat3_out1_27 <= Logical_Operator1_out1_19 & Logical_Operator1_out1_19 & Logical_Operator1_out1_19 & alpha2_out1_15 & Logical_Operator1_out1_19;

  reinterpretcast_bitsliceget_w_3_out1_27 <= signed(Bit_Concat3_out1_27);

  Bit_Concat_out1_14 <= unsigned'(Logical_Operator1_out1_19 & Logical_Operator1_out1_19);

  Bit_Concat1_out1_16 <= Bit_Concat_out1_14 & Bit_Concat_out1_14;

  Bit_Concat2_out1_16 <= Bit_Concat1_out1_16 & Bit_Concat1_out1_16;

  Bit_Concat3_out1_28 <= Bit_Concat2_out1_16 & Bit_Concat2_out1_16;

  Bit_Concat5_out1_11 <= Bit_Concat1_out1_16 & Logical_Operator1_out1_19;

  alpha2_tmp1_out1_14 <= bitsll_w_1_out1_15 + reinterpretcast_bitsliceget_w_3_out1_27;

  bitsra_w_1_1_out1_13 <= SHIFT_RIGHT(if_w_hat_0_75_1_out1_13, 15);

  Bit_Concat4_out1_12 <= Bit_Concat3_out1_28 & Bit_Concat3_out1_28 & Bit_Concat5_out1_11;

  reinterpretcast_bitsliceget_w_3_out1_28 <= signed(Bit_Concat4_out1_12);

  Bitwise_Operator_out1_14 <= bitsra_w_1_1_out1_13 XOR reinterpretcast_bitsliceget_w_3_out1_28;

  w_tmp2_out1_14 <= alpha2_tmp1_out1_14 + Bitwise_Operator_out1_14;

  
  if_w_hat_0_75_1_out1_14 <= bitsll_w_1_out1_15 WHEN Logical_Operator_out1_19 = '0' ELSE
      w_tmp2_out1_14;

  Delay37_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay37_out1 <= to_signed(0, 37);
      ELSIF enb = '1' THEN
        Delay37_out1 <= if_w_hat_0_75_1_out1_14;
      END IF;
    END IF;
  END PROCESS Delay37_process;


  
  w_0_out1 <= '1' WHEN Delay37_out1 /= to_signed(0, 37) ELSE
      '0';

  Delay19_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay19_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay19_reg(0) <= w_0_out1;
        Delay19_reg(5 DOWNTO 1) <= Delay19_reg(4 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay19_1_process;

  Delay19_out1_1 <= Delay19_reg(5);

  Constant_out1_5 <= to_signed(16#0#, 3);

  Log2MinusTable_1_out1 <= to_signed(-16#1#, 3);

  
  if_w_1_3_out1 <= Constant_out1_5 WHEN w_1_out1 = '0' ELSE
      Log2MinusTable_1_out1;

  Constant1_out1_2 <= to_unsigned(0, 35);

  Bit_Concat_out1_15 <= unsigned(if_w_1_3_out1) & Constant1_out1_2;

  Data_Type_Conversion_out1_1 <= signed(Bit_Concat_out1_15);

  Delay3_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1_3 <= to_signed(0, 38);
      ELSIF enb = '1' THEN
        Delay3_out1_3 <= Data_Type_Conversion_out1_1;
      END IF;
    END IF;
  END PROCESS Delay3_3_process;


  Log2Table_2_1_out1 <= to_signed(0, 38);

  Log2Table_2_out1 <= signed'("00001010010011010011110000100101111010");

  
  if_w_hat_0_5_out1 <= Log2Table_2_1_out1 WHEN w_hat_0_5_out1 = '0' ELSE
      Log2Table_2_out1;

  Log2MinusTable_2_out1 <= signed'("11110010101110000000001101000111010000");

  
  if_w_hat_0_75_out1 <= if_w_hat_0_5_out1 WHEN w_hat_0_75_out1 = '0' ELSE
      Log2MinusTable_2_out1;

  Delay23_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay23_out1 <= to_signed(0, 38);
      ELSIF enb = '1' THEN
        Delay23_out1 <= if_w_hat_0_75_out1;
      END IF;
    END IF;
  END PROCESS Delay23_process;


  L_Log2Table_2_1_out1 <= Delay3_out1_3 + Delay23_out1;

  Constant1_out1_3 <= '0';

  Bit_Concat1_out1_17 <= unsigned(L_Log2Table_2_1_out1) & Constant1_out1_3;

  reinterpretcast_bitsliceget_w_2_out1_3 <= signed(Bit_Concat1_out1_17);

  Log2Table_int32_3_1_out1 <= to_signed(0, 39);

  Log2Table_int32_3_out1 <= signed'("000001010111000000000110100011100111111");

  
  if_w_hat_0_5_out1_1 <= Log2Table_int32_3_1_out1 WHEN w_hat_0_5_out1_1 = '0' ELSE
      Log2Table_int32_3_out1;

  Log2MinusTable_int32_3_out1 <= signed'("111110011101010111011001111111010101000");

  
  if_w_hat_0_75_out1_1 <= if_w_hat_0_5_out1_1 WHEN w_hat_0_75_out1_1 = '0' ELSE
      Log2MinusTable_int32_3_out1;

  L_Log2Table_2_1_out1_1 <= reinterpretcast_bitsliceget_w_2_out1_3 + if_w_hat_0_75_out1_1;

  Constant_out1_6 <= '0';

  Bit_Concat_out1_16 <= unsigned(L_Log2Table_2_1_out1_1) & Constant_out1_6;

  reinterpretcast_bitsliceget_w_1_out1_2 <= signed(Bit_Concat_out1_16);

  Delay8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay8_out1 <= to_signed(0, 40);
      ELSIF enb = '1' THEN
        Delay8_out1 <= reinterpretcast_bitsliceget_w_1_out1_2;
      END IF;
    END IF;
  END PROCESS Delay8_process;


  Log2Table_int32_4_1_out1 <= to_signed(0, 40);

  Log2Table_int32_4_out1 <= signed'(X"02CC7EDF59");

  
  if_w_hat_0_5_out1_2 <= Log2Table_int32_4_1_out1 WHEN w_hat_0_5_out1_2 = '0' ELSE
      Log2Table_int32_4_out1;

  Log2MinusTable_int32_4_out1 <= signed'(X"FD053F6D26");

  
  if_w_hat_0_75_out1_2 <= if_w_hat_0_5_out1_2 WHEN w_hat_0_75_out1_2 = '0' ELSE
      Log2MinusTable_int32_4_out1;

  Delay17_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay17_out1_1 <= to_signed(0, 40);
      ELSIF enb = '1' THEN
        Delay17_out1_1 <= if_w_hat_0_75_out1_2;
      END IF;
    END IF;
  END PROCESS Delay17_1_process;


  L_Log2Table_2_1_out1_2 <= Delay8_out1 + Delay17_out1_1;

  Constant_out1_7 <= '0';

  Bit_Concat_out1_17 <= unsigned(L_Log2Table_2_1_out1_2) & Constant_out1_7;

  reinterpretcast_bitsliceget_w_1_out1_3 <= signed(Bit_Concat_out1_17);

  Log2Table_int32_5_1_out1 <= to_signed(0, 41);

  Log2Table_int32_5_out1 <= signed'("00000001011010111010110100110111010110010");

  
  if_w_hat_0_5_out1_3 <= Log2Table_int32_5_1_out1 WHEN w_hat_0_5_out1_3 = '0' ELSE
      Log2Table_int32_5_out1;

  Log2MinusTable_int32_5_out1 <= signed'("11111110100010001100011010110011011000101");

  
  if_w_hat_0_75_out1_3 <= if_w_hat_0_5_out1_3 WHEN w_hat_0_75_out1_3 = '0' ELSE
      Log2MinusTable_int32_5_out1;

  L_Log2Table_2_1_out1_3 <= reinterpretcast_bitsliceget_w_1_out1_3 + if_w_hat_0_75_out1_3;

  Constant_out1_8 <= '0';

  Bit_Concat_out1_18 <= unsigned(L_Log2Table_2_1_out1_3) & Constant_out1_8;

  reinterpretcast_bitsliceget_w_1_out1_4 <= signed(Bit_Concat_out1_18);

  Delay10_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay10_out1_2 <= to_signed(0, 42);
      ELSIF enb = '1' THEN
        Delay10_out1_2 <= reinterpretcast_bitsliceget_w_1_out1_4;
      END IF;
    END IF;
  END PROCESS Delay10_2_process;


  Log2Table_int32_6_1_out1 <= to_signed(0, 42);

  Log2Table_int32_6_out1 <= signed'("000000001011011100111100101101000010111000");

  
  if_w_hat_0_5_out1_4 <= Log2Table_int32_6_1_out1 WHEN w_hat_0_5_out1_4 = '0' ELSE
      Log2Table_int32_6_out1;

  Log2MinusTable_int32_6_out1 <= signed'("111111110100010111100000100010111100111100");

  
  if_w_hat_0_75_out1_4 <= if_w_hat_0_5_out1_4 WHEN w_hat_0_75_out1_4 = '0' ELSE
      Log2MinusTable_int32_6_out1;

  Delay19_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay19_out1_2 <= to_signed(0, 42);
      ELSIF enb = '1' THEN
        Delay19_out1_2 <= if_w_hat_0_75_out1_4;
      END IF;
    END IF;
  END PROCESS Delay19_2_process;


  L_Log2Table_2_1_out1_4 <= Delay10_out1_2 + Delay19_out1_2;

  Constant_out1_9 <= '0';

  Bit_Concat_out1_19 <= unsigned(L_Log2Table_2_1_out1_4) & Constant_out1_9;

  reinterpretcast_bitsliceget_w_1_out1_5 <= signed(Bit_Concat_out1_19);

  Log2Table_int32_7_1_out1 <= to_signed(0, 43);

  Log2Table_int32_7_out1 <= signed'("0000000001011011111110010100001011011011110");

  
  if_w_hat_0_5_out1_5 <= Log2Table_int32_7_1_out1 WHEN w_hat_0_5_out1_5 = '0' ELSE
      Log2Table_int32_7_out1;

  Log2MinusTable_int32_7_out1 <= signed'("1111111110100011010011100001000101110111110");

  
  if_w_hat_0_75_out1_5 <= if_w_hat_0_5_out1_5 WHEN w_hat_0_75_out1_5 = '0' ELSE
      Log2MinusTable_int32_7_out1;

  L_Log2Table_2_1_out1_5 <= reinterpretcast_bitsliceget_w_1_out1_5 + if_w_hat_0_75_out1_5;

  Constant_out1_10 <= '0';

  Bit_Concat_out1_20 <= unsigned(L_Log2Table_2_1_out1_5) & Constant_out1_10;

  reinterpretcast_bitsliceget_w_1_out1_6 <= signed(Bit_Concat_out1_20);

  Delay12_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay12_out1_1 <= to_signed(0, 44);
      ELSIF enb = '1' THEN
        Delay12_out1_1 <= reinterpretcast_bitsliceget_w_1_out1_6;
      END IF;
    END IF;
  END PROCESS Delay12_1_process;


  Log2Table_int32_8_1_out1 <= to_signed(0, 44);

  Log2Table_int32_8_out1 <= signed'(X"002E1388DAF");

  
  if_w_hat_0_5_out1_6 <= Log2Table_int32_8_1_out1 WHEN w_hat_0_5_out1_6 = '0' ELSE
      Log2Table_int32_8_out1;

  Log2MinusTable_int32_8_out1 <= signed'(X"FFD1BE4C7F3");

  
  if_w_hat_0_75_out1_6 <= if_w_hat_0_5_out1_6 WHEN w_hat_0_75_out1_6 = '0' ELSE
      Log2MinusTable_int32_8_out1;

  Delay21_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay21_out1_1 <= to_signed(0, 44);
      ELSIF enb = '1' THEN
        Delay21_out1_1 <= if_w_hat_0_75_out1_6;
      END IF;
    END IF;
  END PROCESS Delay21_1_process;


  L_Log2Table_2_1_out1_6 <= Delay12_out1_1 + Delay21_out1_1;

  Constant_out1_11 <= '0';

  Bit_Concat_out1_21 <= unsigned(L_Log2Table_2_1_out1_6) & Constant_out1_11;

  reinterpretcast_bitsliceget_w_1_out1_7 <= signed(Bit_Concat_out1_21);

  Log2Table_int32_9_1_out1 <= to_signed(0, 45);

  Log2Table_int32_9_out1 <= signed'("000000000001011100001111100000111111111100001");

  
  if_w_hat_0_5_out1_7 <= Log2Table_int32_9_1_out1 WHEN w_hat_0_5_out1_7 = '0' ELSE
      Log2Table_int32_9_out1;

  Log2MinusTable_int32_9_out1 <= signed'("111111111110100011100100111100010101101111010");

  
  if_w_hat_0_75_out1_7 <= if_w_hat_0_5_out1_7 WHEN w_hat_0_75_out1_7 = '0' ELSE
      Log2MinusTable_int32_9_out1;

  L_Log2Table_2_1_out1_7 <= reinterpretcast_bitsliceget_w_1_out1_7 + if_w_hat_0_75_out1_7;

  Constant_out1_12 <= '0';

  Bit_Concat_out1_22 <= unsigned(L_Log2Table_2_1_out1_7) & Constant_out1_12;

  reinterpretcast_bitsliceget_w_1_out1_8 <= signed(Bit_Concat_out1_22);

  Delay14_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay14_out1_1 <= to_signed(0, 46);
      ELSIF enb = '1' THEN
        Delay14_out1_1 <= reinterpretcast_bitsliceget_w_1_out1_8;
      END IF;
    END IF;
  END PROCESS Delay14_1_process;


  Log2Table_int32_10_1_out1 <= to_signed(0, 46);

  Log2Table_int32_10_out1 <= signed'("0000000000001011100010010011001010011011101001");

  
  if_w_hat_0_5_out1_8 <= Log2Table_int32_10_1_out1 WHEN w_hat_0_5_out1_8 = '0' ELSE
      Log2Table_int32_10_out1;

  Log2MinusTable_int32_10_out1 <= signed'("1111111111110100011100111110101010111011010111");

  
  if_w_hat_0_75_out1_8 <= if_w_hat_0_5_out1_8 WHEN w_hat_0_75_out1_8 = '0' ELSE
      Log2MinusTable_int32_10_out1;

  Delay23_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay23_out1_1 <= to_signed(0, 46);
      ELSIF enb = '1' THEN
        Delay23_out1_1 <= if_w_hat_0_75_out1_8;
      END IF;
    END IF;
  END PROCESS Delay23_1_process;


  L_Log2Table_2_1_out1_8 <= Delay14_out1_1 + Delay23_out1_1;

  Constant_out1_13 <= '0';

  Bit_Concat_out1_23 <= unsigned(L_Log2Table_2_1_out1_8) & Constant_out1_13;

  reinterpretcast_bitsliceget_w_1_out1_9 <= signed(Bit_Concat_out1_23);

  alpha0_out1_1 <= to_signed(0, 47);

  Log2Table_int32_11_out1 <= signed'("00000000000001011100010011110101100010111101111");

  
  if_w_hat_0_5_out1_9 <= alpha0_out1_1 WHEN w_hat_0_5_out1_9 = '0' ELSE
      Log2Table_int32_11_out1;

  Log2MinusTable_int32_11_out1 <= signed'("11111111111110100011101001010001110010011110011");

  
  if_w_hat_0_75_out1_9 <= if_w_hat_0_5_out1_9 WHEN w_hat_0_75_out1_9 = '0' ELSE
      Log2MinusTable_int32_11_out1;

  L_Log2Table_2_1_out1_9 <= reinterpretcast_bitsliceget_w_1_out1_9 + if_w_hat_0_75_out1_9;

  Constant_out1_14 <= '0';

  Bit_Concat_out1_24 <= unsigned(L_Log2Table_2_1_out1_9) & Constant_out1_14;

  reinterpretcast_bitsliceget_w_1_out1_10 <= signed(Bit_Concat_out1_24);

  Delay24_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay24_out1_1 <= to_signed(0, 48);
      ELSIF enb = '1' THEN
        Delay24_out1_1 <= reinterpretcast_bitsliceget_w_1_out1_10;
      END IF;
    END IF;
  END PROCESS Delay24_1_process;


  alpha0_out1_2 <= to_signed(0, 48);

  Log2Table_12_out1 <= signed'(X"0002E291D854");

  
  if_w_hat_0_5_out1_10 <= alpha0_out1_2 WHEN w_hat_0_5_out1_10 = '0' ELSE
      Log2Table_12_out1;

  Log2MinusTable_12_out1 <= signed'(X"FFFD1D3FFD1D");

  
  if_w_hat_0_75_out1_10 <= if_w_hat_0_5_out1_10 WHEN w_hat_0_75_out1_10 = '0' ELSE
      Log2MinusTable_12_out1;

  Delay29_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay29_out1 <= to_signed(0, 48);
      ELSIF enb = '1' THEN
        Delay29_out1 <= if_w_hat_0_75_out1_10;
      END IF;
    END IF;
  END PROCESS Delay29_process;


  L_Log2Table_2_1_out1_10 <= Delay24_out1_1 + Delay29_out1;

  Constant_out1_15 <= '0';

  Bit_Concat_out1_25 <= unsigned(L_Log2Table_2_1_out1_10) & Constant_out1_15;

  reinterpretcast_bitsliceget_w_1_out1_11 <= signed(Bit_Concat_out1_25);

  alpha0_out1_3 <= to_signed(0, 49);

  Log2Table_13_out1 <= signed'("0000000000000001011100010100111010110001000111111");

  
  if_w_hat_0_5_out1_11 <= alpha0_out1_3 WHEN w_hat_0_5_out1_11 = '0' ELSE
      Log2Table_13_out1;

  Log2MinusTable_13_out1 <= signed'("1111111111111110100011101010010111000100001111001");

  
  if_w_hat_0_75_out1_11 <= if_w_hat_0_5_out1_11 WHEN w_hat_0_75_out1_11 = '0' ELSE
      Log2MinusTable_13_out1;

  L_Log2Table_2_1_out1_11 <= reinterpretcast_bitsliceget_w_1_out1_11 + if_w_hat_0_75_out1_11;

  Constant_out1_16 <= '0';

  Bit_Concat_out1_26 <= unsigned(L_Log2Table_2_1_out1_11) & Constant_out1_16;

  reinterpretcast_bitsliceget_w_1_out1_12 <= signed(Bit_Concat_out1_26);

  Delay26_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay26_out1 <= to_signed(0, 50);
      ELSIF enb = '1' THEN
        Delay26_out1 <= reinterpretcast_bitsliceget_w_1_out1_12;
      END IF;
    END IF;
  END PROCESS Delay26_process;


  alpha0_out1_4 <= to_signed(0, 50);

  Log2Table_14_out1 <= signed'("00000000000000001011100010101000110010011101100011");

  
  if_w_hat_0_5_out1_12 <= alpha0_out1_4 WHEN w_hat_0_5_out1_12 = '0' ELSE
      Log2Table_14_out1;

  Log2MinusTable_14_out1 <= signed'("11111111111111110100011101010100010100110111111001");

  
  if_w_hat_0_75_out1_12 <= if_w_hat_0_5_out1_12 WHEN w_hat_0_75_out1_12 = '0' ELSE
      Log2MinusTable_14_out1;

  Delay31_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay31_out1 <= to_signed(0, 50);
      ELSIF enb = '1' THEN
        Delay31_out1 <= if_w_hat_0_75_out1_12;
      END IF;
    END IF;
  END PROCESS Delay31_process;


  L_Log2Table_2_1_out1_12 <= Delay26_out1 + Delay31_out1;

  Constant_out1_17 <= '0';

  Bit_Concat_out1_27 <= unsigned(L_Log2Table_2_1_out1_12) & Constant_out1_17;

  reinterpretcast_bitsliceget_w_1_out1_13 <= signed(Bit_Concat_out1_27);

  alpha0_out1_5 <= to_signed(0, 51);

  Log2Table_15_out1 <= signed'("000000000000000001011100010101001100000101000000000");

  
  if_w_hat_0_5_out1_13 <= alpha0_out1_5 WHEN w_hat_0_5_out1_13 = '0' ELSE
      Log2Table_15_out1;

  Log2MinusTable_15_out1 <= signed'("111111111111111110100011101010101000011000010101110");

  
  if_w_hat_0_75_out1_13 <= if_w_hat_0_5_out1_13 WHEN w_hat_0_75_out1_13 = '0' ELSE
      Log2MinusTable_15_out1;

  L_Log2Table_2_1_out1_13 <= reinterpretcast_bitsliceget_w_1_out1_13 + if_w_hat_0_75_out1_13;

  Constant_out1_18 <= '0';

  Bit_Concat_out1_28 <= unsigned(L_Log2Table_2_1_out1_13) & Constant_out1_18;

  reinterpretcast_bitsliceget_w_1_out1_14 <= signed(Bit_Concat_out1_28);

  Delay36_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay36_out1 <= to_signed(0, 52);
      ELSIF enb = '1' THEN
        Delay36_out1 <= reinterpretcast_bitsliceget_w_1_out1_14;
      END IF;
    END IF;
  END PROCESS Delay36_process;


  alpha0_out1_6 <= to_signed(0, 52);

  Log2Table_16_out1 <= signed'(X"00002E2A77B52");

  
  if_w_hat_0_5_out1_14 <= alpha0_out1_6 WHEN w_hat_0_5_out1_14 = '0' ELSE
      Log2Table_16_out1;

  Log2MinusTable_16_out1 <= signed'(X"FFFFD1D55A205");

  
  if_w_hat_0_75_out1_14 <= if_w_hat_0_5_out1_14 WHEN w_hat_0_75_out1_14 = '0' ELSE
      Log2MinusTable_16_out1;

  Delay39_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay39_out1 <= to_signed(0, 52);
      ELSIF enb = '1' THEN
        Delay39_out1 <= if_w_hat_0_75_out1_14;
      END IF;
    END IF;
  END PROCESS Delay39_process;


  L_Log2Table_2_out1 <= Delay36_out1 + Delay39_out1;

  Constant_out1_19 <= to_unsigned(16#0#, 2);

  Bit_Concat_out1_29 <= unsigned(L_Log2Table_2_out1) & Constant_out1_19;

  reinterpretcast_bitconcat_L_f_out1 <= signed(Bit_Concat_out1_29);

  Delay25_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay25_reg <= (OTHERS => to_signed(0, 54));
      ELSIF enb = '1' THEN
        Delay25_reg(0) <= reinterpretcast_bitconcat_L_f_out1;
        Delay25_reg(1 TO 5) <= Delay25_reg(0 TO 4);
      END IF;
    END IF;
  END PROCESS Delay25_2_process;

  Delay25_out1_2 <= Delay25_reg(5);

  BitSlice_out1_16 <= Delay37_out1(36);

  alphaw_cast <= resize(Delay37_out1, 38);
  alphaw_cast_1 <=  - (alphaw_cast);
  alphaw_out1 <= alphaw_cast_1(36 DOWNTO 0);

  
  if_sign_1_out1 <= Delay37_out1 WHEN BitSlice_out1_16 = '0' ELSE
      alphaw_out1;

  
  w_abs_2_out1 <= '1' WHEN if_sign_1_out1 >= signed'("0001000000000000000000000000000000000") ELSE
      '0';

  Bit_Slice_out1_1 <= unsigned(if_sign_1_out1(32 DOWNTO 1));

  Bit_Slice14_out1_2 <= Bit_Slice_out1_1(31);

  Bit_Slice13_out1_2 <= Bit_Slice_out1_1(30);

  Logical_Operator3_out1_6 <= Bit_Slice14_out1_2 OR Bit_Slice13_out1_2;

  Bit_Slice12_out1_2 <= Bit_Slice_out1_1(29);

  Bit_Slice10_out1_2 <= Bit_Slice_out1_1(28);

  Logical_Operator2_out1_6 <= Bit_Slice12_out1_2 OR Bit_Slice10_out1_2;

  Logical_Operator1_out1_20 <= Logical_Operator3_out1_6 OR Logical_Operator2_out1_6;

  Bit_Slice9_out1_2 <= Bit_Slice_out1_1(27);

  Bit_Slice8_out1_2 <= Bit_Slice_out1_1(26);

  Logical_Operator5_out1_4 <= Bit_Slice9_out1_2 OR Bit_Slice8_out1_2;

  Bit_Slice11_out1_2 <= Bit_Slice_out1_1(25);

  Bit_Slice15_out1_2 <= Bit_Slice_out1_1(24);

  Logical_Operator6_out1_3 <= Bit_Slice11_out1_2 OR Bit_Slice15_out1_2;

  Logical_Operator7_out1_3 <= Logical_Operator5_out1_4 OR Logical_Operator6_out1_3;

  Logical_Operator8_out1_3 <= Logical_Operator1_out1_20 OR Logical_Operator7_out1_3;

  Bit_Slice14_out1_3 <= Bit_Slice_out1_1(23);

  Bit_Slice13_out1_3 <= Bit_Slice_out1_1(22);

  Logical_Operator3_out1_7 <= Bit_Slice14_out1_3 OR Bit_Slice13_out1_3;

  Bit_Slice12_out1_3 <= Bit_Slice_out1_1(21);

  Bit_Slice10_out1_3 <= Bit_Slice_out1_1(20);

  Logical_Operator2_out1_7 <= Bit_Slice12_out1_3 OR Bit_Slice10_out1_3;

  Logical_Operator1_out1_21 <= Logical_Operator3_out1_7 OR Logical_Operator2_out1_7;

  Bit_Slice9_out1_3 <= Bit_Slice_out1_1(19);

  Bit_Slice8_out1_3 <= Bit_Slice_out1_1(18);

  Logical_Operator5_out1_5 <= Bit_Slice9_out1_3 OR Bit_Slice8_out1_3;

  Bit_Slice11_out1_3 <= Bit_Slice_out1_1(17);

  Bit_Slice15_out1_3 <= Bit_Slice_out1_1(16);

  Logical_Operator6_out1_4 <= Bit_Slice11_out1_3 OR Bit_Slice15_out1_3;

  Logical_Operator7_out1_4 <= Logical_Operator5_out1_5 OR Logical_Operator6_out1_4;

  Logical_Operator8_out1_4 <= Logical_Operator1_out1_21 OR Logical_Operator7_out1_4;

  Bit_Slice14_out1_4 <= Bit_Slice_out1_1(15);

  Bit_Slice13_out1_4 <= Bit_Slice_out1_1(14);

  Logical_Operator3_out1_8 <= Bit_Slice14_out1_4 OR Bit_Slice13_out1_4;

  Bit_Slice12_out1_4 <= Bit_Slice_out1_1(13);

  Bit_Slice10_out1_4 <= Bit_Slice_out1_1(12);

  Logical_Operator2_out1_8 <= Bit_Slice12_out1_4 OR Bit_Slice10_out1_4;

  Logical_Operator1_out1_22 <= Logical_Operator3_out1_8 OR Logical_Operator2_out1_8;

  Bit_Slice9_out1_4 <= Bit_Slice_out1_1(11);

  Bit_Slice8_out1_4 <= Bit_Slice_out1_1(10);

  Logical_Operator5_out1_6 <= Bit_Slice9_out1_4 OR Bit_Slice8_out1_4;

  Bit_Slice11_out1_4 <= Bit_Slice_out1_1(9);

  Bit_Slice15_out1_4 <= Bit_Slice_out1_1(8);

  Logical_Operator6_out1_5 <= Bit_Slice11_out1_4 OR Bit_Slice15_out1_4;

  Logical_Operator7_out1_5 <= Logical_Operator5_out1_6 OR Logical_Operator6_out1_5;

  Bit_Slice7_out1_1 <= Bit_Slice_out1_1(7);

  Bit_Slice6_out1_1 <= Bit_Slice_out1_1(6);

  Logical_Operator1_out1_23 <= Bit_Slice7_out1_1 OR Bit_Slice6_out1_1;

  Bit_Slice5_out1_1 <= Bit_Slice_out1_1(5);

  Bit_Slice3_out1_1 <= Bit_Slice_out1_1(4);

  Logical_Operator_out1_20 <= Bit_Slice5_out1_1 OR Bit_Slice3_out1_1;

  Bit_Slice2_out1_1 <= Bit_Slice_out1_1(3);

  Bit_Slice1_out1_1 <= Bit_Slice_out1_1(2);

  Bit_Slice4_out1_1 <= Bit_Slice_out1_1(1);

  Start_1_1_out1_1 <= to_unsigned(16#1F#, 5);

  Logical_Operator4_out1_4 <= Bit_Slice2_out1_1 OR Bit_Slice1_out1_1;

  Start_1_2_out1_1 <= to_unsigned(16#1E#, 5);

  
  Switch3_out1_2 <= Start_1_1_out1_1 WHEN Bit_Slice4_out1_1 = '0' ELSE
      Start_1_2_out1_1;

  Start_1_3_out1_1 <= to_unsigned(16#1D#, 5);

  Start_1_4_out1_1 <= to_unsigned(16#1C#, 5);

  Logical_Operator2_out1_9 <= Logical_Operator1_out1_23 OR Logical_Operator_out1_20;

  
  Switch2_out1_1 <= Start_1_3_out1_1 WHEN Bit_Slice2_out1_1 = '0' ELSE
      Start_1_4_out1_1;

  
  Switch1_out1_3 <= Switch3_out1_2 WHEN Logical_Operator4_out1_4 = '0' ELSE
      Switch2_out1_1;

  Start_1_5_out1_1 <= to_unsigned(16#1B#, 5);

  Start_1_6_out1_1 <= to_unsigned(16#1A#, 5);

  
  Switch5_out1_1 <= Start_1_5_out1_1 WHEN Bit_Slice5_out1_1 = '0' ELSE
      Start_1_6_out1_1;

  Start_1_7_out1_1 <= to_unsigned(16#19#, 5);

  Start_1_8_out1_1 <= to_unsigned(16#18#, 5);

  
  Switch7_out1_1 <= Start_1_7_out1_1 WHEN Bit_Slice7_out1_1 = '0' ELSE
      Start_1_8_out1_1;

  Logical_Operator8_out1_5 <= Logical_Operator1_out1_22 OR Logical_Operator7_out1_5;

  
  Switch6_out1_2 <= Switch5_out1_1 WHEN Logical_Operator1_out1_23 = '0' ELSE
      Switch7_out1_1;

  
  Switch4_out1_1 <= Switch1_out1_3 WHEN Logical_Operator2_out1_9 = '0' ELSE
      Switch6_out1_2;

  Start_1_9_out1_2 <= to_unsigned(16#17#, 5);

  Start_1_10_out1_2 <= to_unsigned(16#16#, 5);

  
  Switch10_out1_2 <= Start_1_9_out1_2 WHEN Bit_Slice11_out1_4 = '0' ELSE
      Start_1_10_out1_2;

  Start_1_11_out1_2 <= to_unsigned(16#15#, 5);

  Start_1_12_out1_2 <= to_unsigned(16#14#, 5);

  
  Switch9_out1_2 <= Start_1_11_out1_2 WHEN Bit_Slice9_out1_4 = '0' ELSE
      Start_1_12_out1_2;

  
  Switch8_out1_2 <= Switch10_out1_2 WHEN Logical_Operator5_out1_6 = '0' ELSE
      Switch9_out1_2;

  Start_1_13_out1_2 <= to_unsigned(16#13#, 5);

  Start_1_14_out1_2 <= to_unsigned(16#12#, 5);

  
  Switch12_out1_3 <= Start_1_13_out1_2 WHEN Bit_Slice12_out1_4 = '0' ELSE
      Start_1_14_out1_2;

  Start_1_15_out1_2 <= to_unsigned(16#11#, 5);

  Start_1_16_out1_2 <= to_unsigned(16#10#, 5);

  
  Switch14_out1_2 <= Start_1_15_out1_2 WHEN Bit_Slice14_out1_4 = '0' ELSE
      Start_1_16_out1_2;

  
  Switch13_out1_2 <= Switch12_out1_3 WHEN Logical_Operator3_out1_8 = '0' ELSE
      Switch14_out1_2;

  Logical_Operator_out1_21 <= Logical_Operator8_out1_3 OR Logical_Operator8_out1_4;

  
  Switch11_out1_2 <= Switch8_out1_2 WHEN Logical_Operator1_out1_22 = '0' ELSE
      Switch13_out1_2;

  
  Switch_out1_4 <= Switch4_out1_1 WHEN Logical_Operator8_out1_5 = '0' ELSE
      Switch11_out1_2;

  Start_1_9_out1_3 <= to_unsigned(16#0F#, 5);

  Start_1_10_out1_3 <= to_unsigned(16#0E#, 5);

  
  Switch10_out1_3 <= Start_1_9_out1_3 WHEN Bit_Slice11_out1_3 = '0' ELSE
      Start_1_10_out1_3;

  Start_1_11_out1_3 <= to_unsigned(16#0D#, 5);

  Start_1_12_out1_3 <= to_unsigned(16#0C#, 5);

  
  Switch9_out1_3 <= Start_1_11_out1_3 WHEN Bit_Slice9_out1_3 = '0' ELSE
      Start_1_12_out1_3;

  
  Switch8_out1_3 <= Switch10_out1_3 WHEN Logical_Operator5_out1_5 = '0' ELSE
      Switch9_out1_3;

  Start_1_13_out1_3 <= to_unsigned(16#0B#, 5);

  Start_1_14_out1_3 <= to_unsigned(16#0A#, 5);

  
  Switch12_out1_4 <= Start_1_13_out1_3 WHEN Bit_Slice12_out1_3 = '0' ELSE
      Start_1_14_out1_3;

  Start_1_15_out1_3 <= to_unsigned(16#09#, 5);

  Start_1_16_out1_3 <= to_unsigned(16#08#, 5);

  
  Switch14_out1_3 <= Start_1_15_out1_3 WHEN Bit_Slice14_out1_3 = '0' ELSE
      Start_1_16_out1_3;

  
  Switch13_out1_3 <= Switch12_out1_4 WHEN Logical_Operator3_out1_7 = '0' ELSE
      Switch14_out1_3;

  
  Switch11_out1_3 <= Switch8_out1_3 WHEN Logical_Operator1_out1_21 = '0' ELSE
      Switch13_out1_3;

  Start_1_9_out1_4 <= to_unsigned(16#07#, 5);

  Start_1_10_out1_4 <= to_unsigned(16#06#, 5);

  
  Switch10_out1_4 <= Start_1_9_out1_4 WHEN Bit_Slice11_out1_2 = '0' ELSE
      Start_1_10_out1_4;

  Start_1_11_out1_4 <= to_unsigned(16#05#, 5);

  Start_1_12_out1_4 <= to_unsigned(16#04#, 5);

  
  Switch9_out1_4 <= Start_1_11_out1_4 WHEN Bit_Slice9_out1_2 = '0' ELSE
      Start_1_12_out1_4;

  
  Switch8_out1_4 <= Switch10_out1_4 WHEN Logical_Operator5_out1_4 = '0' ELSE
      Switch9_out1_4;

  Start_1_13_out1_4 <= to_unsigned(16#03#, 5);

  Start_1_14_out1_4 <= to_unsigned(16#02#, 5);

  
  Switch12_out1_5 <= Start_1_13_out1_4 WHEN Bit_Slice12_out1_2 = '0' ELSE
      Start_1_14_out1_4;

  Start_1_15_out1_4 <= to_unsigned(16#01#, 5);

  Start_1_16_out1_4 <= to_unsigned(16#00#, 5);

  
  Switch14_out1_4 <= Start_1_15_out1_4 WHEN Bit_Slice14_out1_2 = '0' ELSE
      Start_1_16_out1_4;

  
  Switch13_out1_4 <= Switch12_out1_5 WHEN Logical_Operator3_out1_6 = '0' ELSE
      Switch14_out1_4;

  
  Switch11_out1_4 <= Switch8_out1_4 WHEN Logical_Operator1_out1_20 = '0' ELSE
      Switch13_out1_4;

  
  Switch2_out1_2 <= Switch11_out1_3 WHEN Logical_Operator8_out1_3 = '0' ELSE
      Switch11_out1_4;

  
  Switch1_out1_4 <= Switch_out1_4 WHEN Logical_Operator_out1_21 = '0' ELSE
      Switch2_out1_2;

  reinterpretcast_bitsliceget_tm_1_out1 <= resize(Switch1_out1_4, 6);

  dynamic_shift_cast <= resize(reinterpretcast_bitsliceget_tm_1_out1, 8);
  bitsll_w_abs_j_out1 <= if_sign_1_out1 sll to_integer(dynamic_shift_cast);

  bitsra_w_abs_1_out1 <= SHIFT_RIGHT(if_sign_1_out1, 1);

  
  if_w_abs_2_1_out1 <= bitsll_w_abs_j_out1 WHEN w_abs_2_out1 = '0' ELSE
      bitsra_w_abs_1_out1;

  BitSlice1_out1_15 <= unsigned(if_w_abs_2_1_out1(32 DOWNTO 6));

  reinterpretcast_bitsliceget_tm_out1 <= BitSlice1_out1_15;

  Delay3_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1_4 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay3_out1_4 <= reinterpretcast_bitsliceget_tm_out1;
      END IF;
    END IF;
  END PROCESS Delay3_4_process;


  alpha1_out1_1 <= signed'("0000100000000000000000000000000000000");

  bitsra_w_cfType_Log2NumberOfI_out1 <= SHIFT_RIGHT(Delay37_out1, 18);

  alpha1_tmp1_out1 <= alpha1_out1_1 - bitsra_w_cfType_Log2NumberOfI_out1;

  BitSlice2_out1 <= unsigned(alpha1_tmp1_out1(32 DOWNTO 6));

  reinterpretcast_bitsliceget_tm_out1_1 <= BitSlice2_out1;

  Delay4_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1_3 <= to_unsigned(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay4_out1_3 <= reinterpretcast_bitsliceget_tm_out1_1;
      END IF;
    END IF;
  END PROCESS Delay4_3_process;


  tmp_m1_tmp_m2_mul_temp <= Delay3_out1_4 * Delay4_out1_3;
  tmp_m1_tmp_m2_out1 <= tmp_m1_tmp_m2_mul_temp(53 DOWNTO 27);

  Delay14_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay14_reg_1 <= (OTHERS => to_unsigned(16#0000000#, 27));
      ELSIF enb = '1' THEN
        Delay14_reg_1(0) <= tmp_m1_tmp_m2_out1;
        Delay14_reg_1(1) <= Delay14_reg_1(0);
      END IF;
    END IF;
  END PROCESS Delay14_2_process;

  Delay14_out1_2 <= Delay14_reg_1(1);

  Delay1_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay1_reg(0) <= BitSlice_out1_16;
        Delay1_reg(1) <= Delay1_reg(0);
      END IF;
    END IF;
  END PROCESS Delay1_2_process;

  Delay1_out1_2 <= Delay1_reg(1);

  alpha1_4426950216293335_out1 <= to_signed(16#2E2A8ED#, 27);

  alpha1_4426950216293335_1_out1 <= to_signed(-16#2E2A8ED#, 27);

  
  if_sign_1_out1_1 <= alpha1_4426950216293335_out1 WHEN Delay1_out1_2 = '0' ELSE
      alpha1_4426950216293335_1_out1;

  Delay6_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay6_out1_1 <= to_signed(16#0000000#, 27);
      ELSIF enb = '1' THEN
        Delay6_out1_1 <= if_sign_1_out1_1;
      END IF;
    END IF;
  END PROCESS Delay6_1_process;


  tmp3_1_4426950216293335_cast <= signed(resize(Delay14_out1_2, 28));
  tmp3_1_4426950216293335_mul_temp <= tmp3_1_4426950216293335_cast * Delay6_out1_1;
  tmp3_1_4426950216293335_cast_1 <= tmp3_1_4426950216293335_mul_temp(53 DOWNTO 0);
  tmp3_1_4426950216293335_out1 <= tmp3_1_4426950216293335_cast_1(52 DOWNTO 0) & '0';

  Delay8_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay8_reg <= (OTHERS => to_signed(0, 54));
      ELSIF enb = '1' THEN
        Delay8_reg(0) <= tmp3_1_4426950216293335_out1;
        Delay8_reg(1) <= Delay8_reg(0);
      END IF;
    END IF;
  END PROCESS Delay8_1_process;

  Delay8_out1_1 <= Delay8_reg(1);

  cfType_Log2NumberOfIterations_out1 <= to_signed(16#11#, 8);

  FindFirst1_out1_dtc <= signed(resize(Switch1_out1_4, 8));

  C_out1_1 <= to_signed(-16#01#, 8);

  
  if_w_abs_2_out1 <= FindFirst1_out1_dtc WHEN w_abs_2_out1 = '0' ELSE
      C_out1_1;

  cfType_Log2NumberOfIterations_out1_1 <= cfType_Log2NumberOfIterations_out1 + if_w_abs_2_out1;

  reinterpretcast_bitsliceget_tm_2_out1 <= unsigned(cfType_Log2NumberOfIterations_out1_1(5 DOWNTO 0));

  Delay9_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay9_reg_1 <= (OTHERS => to_unsigned(16#00#, 6));
      ELSIF enb = '1' THEN
        Delay9_reg_1(0) <= reinterpretcast_bitsliceget_tm_2_out1;
        Delay9_reg_1(1 TO 4) <= Delay9_reg_1(0 TO 3);
      END IF;
    END IF;
  END PROCESS Delay9_2_process;

  Delay9_out1_2 <= Delay9_reg_1(4);

  dynamic_shift_cast_1 <= resize(Delay9_out1_2, 8);
  bitsra_appx_shift_out1 <= SHIFT_RIGHT(Delay8_out1_1, to_integer(dynamic_shift_cast_1));

  Delay17_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay17_out1_2 <= to_signed(0, 54);
      ELSIF enb = '1' THEN
        Delay17_out1_2 <= bitsra_appx_shift_out1;
      END IF;
    END IF;
  END PROCESS Delay17_2_process;


  L_tmp4_out1 <= Delay25_out1_2 - Delay17_out1_2;

  
  if_w_0_out1 <= Delay25_out1_2 WHEN Delay19_out1_1 = '0' ELSE
      L_tmp4_out1;

  BitSlice_out1_17 <= if_w_0_out1(53);

  Bit_Concat1_out1_18 <= BitSlice_out1_17 & BitSlice_out1_17 & BitSlice_out1_17 & BitSlice_out1_17 & BitSlice_out1_17 & BitSlice_out1_17 & BitSlice_out1_17 & BitSlice_out1_17 & unsigned(if_w_0_out1);

  reinterpretcast_bitconcat_fi_0_out1_1 <= signed(Bit_Concat1_out1_18);

  exp_tmp_L_out1 <= reinterpretcast_bitconcat_exp_out1 - reinterpretcast_bitconcat_fi_0_out1_1;

  BitSlice1_out1_16 <= exp_tmp_L_out1(61);

  Delay12_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay12_out1_2 <= '0';
      ELSIF enb = '1' THEN
        Delay12_out1_2 <= BitSlice1_out1_16;
      END IF;
    END IF;
  END PROCESS Delay12_2_process;


  Delay3_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1_5 <= '0';
      ELSIF enb = '1' THEN
        Delay3_out1_5 <= Delay12_out1_2;
      END IF;
    END IF;
  END PROCESS Delay3_5_process;


  Delay3_6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1_6 <= '0';
      ELSIF enb = '1' THEN
        Delay3_out1_6 <= Delay3_out1_5;
      END IF;
    END IF;
  END PROCESS Delay3_6_process;


  reduced_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        reduced_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        reduced_reg(0) <= Delay5_out1_1;
        reduced_reg(16 DOWNTO 1) <= reduced_reg(15 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS reduced_1_process;

  Delay5_out1_2 <= reduced_reg(16);

  Logical_Operator_out1_22 <= Delay3_out1_6 XOR Delay5_out1_2;

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay2_reg(0) <= Logical_Operator_out1_22;
        Delay2_reg(1) <= Delay2_reg(0);
      END IF;
    END IF;
  END PROCESS Delay2_process;

  Delay2_out1 <= Delay2_reg(1);

  C1_out1 <= to_signed(16#086#, 11);

  C_out1_2 <= to_signed(16#086#, 11);

  
  if_aSign_out1 <= C1_out1 WHEN Delay2_out1 = '0' ELSE
      C_out1_2;

  BitSlice3_out1 <= unsigned(exp_tmp_L_out1(60 DOWNTO 0));

  Delay13_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay13_out1_2 <= to_unsigned(0, 61);
      ELSIF enb = '1' THEN
        Delay13_out1_2 <= BitSlice3_out1;
      END IF;
    END IF;
  END PROCESS Delay13_2_process;


  exp_tmp_L1_out1 <= reinterpretcast_bitconcat_fi_0_out1_1 - reinterpretcast_bitconcat_exp_out1;

  BitSlice2_out1_1 <= unsigned(exp_tmp_L1_out1(60 DOWNTO 0));

  Delay14_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay14_out1_3 <= to_unsigned(0, 61);
      ELSIF enb = '1' THEN
        Delay14_out1_3 <= BitSlice2_out1_1;
      END IF;
    END IF;
  END PROCESS Delay14_3_process;


  
  Switch_out1_5 <= Delay13_out1_2 WHEN Delay12_out1_2 = '0' ELSE
      Delay14_out1_3;

  Delay4_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1_4 <= to_unsigned(0, 61);
      ELSIF enb = '1' THEN
        Delay4_out1_4 <= Switch_out1_5;
      END IF;
    END IF;
  END PROCESS Delay4_4_process;


  Bit_Slice10_out1_5 <= Switch_out1_5(60);

  Bit_Slice9_out1_5 <= Switch_out1_5(59);

  Bit_Slice8_out1_5 <= Switch_out1_5(58);

  Logical_Operator5_out1_7 <= Bit_Slice9_out1_5 OR Bit_Slice8_out1_5;

  Bit_Slice11_out1_5 <= Switch_out1_5(57);

  Bit_Slice15_out1_5 <= Switch_out1_5(56);

  Logical_Operator6_out1_6 <= Bit_Slice11_out1_5 OR Bit_Slice15_out1_5;

  Logical_Operator7_out1_6 <= Logical_Operator5_out1_7 OR Logical_Operator6_out1_6;

  Logical_Operator8_out1_6 <= Bit_Slice10_out1_5 OR Logical_Operator7_out1_6;

  Bit_Slice14_out1_5 <= Switch_out1_5(55);

  Bit_Slice13_out1_5 <= Switch_out1_5(54);

  Logical_Operator3_out1_9 <= Bit_Slice14_out1_5 OR Bit_Slice13_out1_5;

  Bit_Slice12_out1_5 <= Switch_out1_5(53);

  Bit_Slice10_out1_6 <= Switch_out1_5(52);

  Logical_Operator2_out1_10 <= Bit_Slice12_out1_5 OR Bit_Slice10_out1_6;

  Logical_Operator1_out1_24 <= Logical_Operator3_out1_9 OR Logical_Operator2_out1_10;

  Bit_Slice9_out1_6 <= Switch_out1_5(51);

  Bit_Slice8_out1_6 <= Switch_out1_5(50);

  Logical_Operator5_out1_8 <= Bit_Slice9_out1_6 OR Bit_Slice8_out1_6;

  Bit_Slice11_out1_6 <= Switch_out1_5(49);

  Bit_Slice15_out1_6 <= Switch_out1_5(48);

  Logical_Operator6_out1_7 <= Bit_Slice11_out1_6 OR Bit_Slice15_out1_6;

  Logical_Operator7_out1_7 <= Logical_Operator5_out1_8 OR Logical_Operator6_out1_7;

  Logical_Operator8_out1_7 <= Logical_Operator1_out1_24 OR Logical_Operator7_out1_7;

  Logical_Operator1_out1_25 <= Logical_Operator8_out1_6 OR Logical_Operator8_out1_7;

  Bit_Slice14_out1_6 <= Switch_out1_5(47);

  Bit_Slice13_out1_6 <= Switch_out1_5(46);

  Logical_Operator3_out1_10 <= Bit_Slice14_out1_6 OR Bit_Slice13_out1_6;

  Bit_Slice12_out1_6 <= Switch_out1_5(45);

  Bit_Slice10_out1_7 <= Switch_out1_5(44);

  Logical_Operator2_out1_11 <= Bit_Slice12_out1_6 OR Bit_Slice10_out1_7;

  Logical_Operator1_out1_26 <= Logical_Operator3_out1_10 OR Logical_Operator2_out1_11;

  Bit_Slice9_out1_7 <= Switch_out1_5(43);

  Bit_Slice8_out1_7 <= Switch_out1_5(42);

  Logical_Operator5_out1_9 <= Bit_Slice9_out1_7 OR Bit_Slice8_out1_7;

  Bit_Slice11_out1_7 <= Switch_out1_5(41);

  Bit_Slice15_out1_7 <= Switch_out1_5(40);

  Logical_Operator6_out1_8 <= Bit_Slice11_out1_7 OR Bit_Slice15_out1_7;

  Logical_Operator7_out1_8 <= Logical_Operator5_out1_9 OR Logical_Operator6_out1_8;

  Logical_Operator8_out1_8 <= Logical_Operator1_out1_26 OR Logical_Operator7_out1_8;

  Bit_Slice14_out1_7 <= Switch_out1_5(39);

  Bit_Slice13_out1_7 <= Switch_out1_5(38);

  Logical_Operator3_out1_11 <= Bit_Slice14_out1_7 OR Bit_Slice13_out1_7;

  Bit_Slice12_out1_7 <= Switch_out1_5(37);

  Bit_Slice10_out1_8 <= Switch_out1_5(36);

  Logical_Operator2_out1_12 <= Bit_Slice12_out1_7 OR Bit_Slice10_out1_8;

  Logical_Operator1_out1_27 <= Logical_Operator3_out1_11 OR Logical_Operator2_out1_12;

  Bit_Slice9_out1_8 <= Switch_out1_5(35);

  Bit_Slice8_out1_8 <= Switch_out1_5(34);

  Logical_Operator5_out1_10 <= Bit_Slice9_out1_8 OR Bit_Slice8_out1_8;

  Bit_Slice11_out1_8 <= Switch_out1_5(33);

  Bit_Slice15_out1_8 <= Switch_out1_5(32);

  Logical_Operator6_out1_9 <= Bit_Slice11_out1_8 OR Bit_Slice15_out1_8;

  Logical_Operator7_out1_9 <= Logical_Operator5_out1_10 OR Logical_Operator6_out1_9;

  Logical_Operator8_out1_9 <= Logical_Operator1_out1_27 OR Logical_Operator7_out1_9;

  Logical_Operator2_out1_13 <= Logical_Operator8_out1_8 OR Logical_Operator8_out1_9;

  Bit_Slice14_out1_8 <= Switch_out1_5(31);

  Bit_Slice13_out1_8 <= Switch_out1_5(30);

  Logical_Operator3_out1_12 <= Bit_Slice14_out1_8 OR Bit_Slice13_out1_8;

  Bit_Slice12_out1_8 <= Switch_out1_5(29);

  Bit_Slice10_out1_9 <= Switch_out1_5(28);

  Logical_Operator2_out1_14 <= Bit_Slice12_out1_8 OR Bit_Slice10_out1_9;

  Logical_Operator1_out1_28 <= Logical_Operator3_out1_12 OR Logical_Operator2_out1_14;

  Bit_Slice9_out1_9 <= Switch_out1_5(27);

  Bit_Slice8_out1_9 <= Switch_out1_5(26);

  Logical_Operator5_out1_11 <= Bit_Slice9_out1_9 OR Bit_Slice8_out1_9;

  Bit_Slice11_out1_9 <= Switch_out1_5(25);

  Bit_Slice15_out1_9 <= Switch_out1_5(24);

  Logical_Operator6_out1_10 <= Bit_Slice11_out1_9 OR Bit_Slice15_out1_9;

  Logical_Operator7_out1_10 <= Logical_Operator5_out1_11 OR Logical_Operator6_out1_10;

  Logical_Operator8_out1_10 <= Logical_Operator1_out1_28 OR Logical_Operator7_out1_10;

  Bit_Slice14_out1_9 <= Switch_out1_5(23);

  Bit_Slice13_out1_9 <= Switch_out1_5(22);

  Logical_Operator3_out1_13 <= Bit_Slice14_out1_9 OR Bit_Slice13_out1_9;

  Bit_Slice12_out1_9 <= Switch_out1_5(21);

  Bit_Slice10_out1_10 <= Switch_out1_5(20);

  Logical_Operator2_out1_15 <= Bit_Slice12_out1_9 OR Bit_Slice10_out1_10;

  Logical_Operator1_out1_29 <= Logical_Operator3_out1_13 OR Logical_Operator2_out1_15;

  Bit_Slice9_out1_10 <= Switch_out1_5(19);

  Bit_Slice8_out1_10 <= Switch_out1_5(18);

  Logical_Operator5_out1_12 <= Bit_Slice9_out1_10 OR Bit_Slice8_out1_10;

  Bit_Slice11_out1_10 <= Switch_out1_5(17);

  Bit_Slice15_out1_10 <= Switch_out1_5(16);

  Logical_Operator6_out1_11 <= Bit_Slice11_out1_10 OR Bit_Slice15_out1_10;

  Logical_Operator7_out1_11 <= Logical_Operator5_out1_12 OR Logical_Operator6_out1_11;

  Logical_Operator8_out1_11 <= Logical_Operator1_out1_29 OR Logical_Operator7_out1_11;

  Bit_Slice14_out1_10 <= Switch_out1_5(15);

  Bit_Slice13_out1_10 <= Switch_out1_5(14);

  Logical_Operator3_out1_14 <= Bit_Slice14_out1_10 OR Bit_Slice13_out1_10;

  Bit_Slice12_out1_10 <= Switch_out1_5(13);

  Bit_Slice10_out1_11 <= Switch_out1_5(12);

  Logical_Operator2_out1_16 <= Bit_Slice12_out1_10 OR Bit_Slice10_out1_11;

  Logical_Operator1_out1_30 <= Logical_Operator3_out1_14 OR Logical_Operator2_out1_16;

  Bit_Slice9_out1_11 <= Switch_out1_5(11);

  Bit_Slice8_out1_11 <= Switch_out1_5(10);

  Logical_Operator5_out1_13 <= Bit_Slice9_out1_11 OR Bit_Slice8_out1_11;

  Bit_Slice11_out1_11 <= Switch_out1_5(9);

  Bit_Slice15_out1_11 <= Switch_out1_5(8);

  Logical_Operator6_out1_12 <= Bit_Slice11_out1_11 OR Bit_Slice15_out1_11;

  Logical_Operator7_out1_12 <= Logical_Operator5_out1_13 OR Logical_Operator6_out1_12;

  Bit_Slice7_out1_2 <= Switch_out1_5(7);

  Bit_Slice6_out1_2 <= Switch_out1_5(6);

  Logical_Operator1_out1_31 <= Bit_Slice7_out1_2 OR Bit_Slice6_out1_2;

  Bit_Slice5_out1_2 <= Switch_out1_5(5);

  Bit_Slice3_out1_2 <= Switch_out1_5(4);

  Logical_Operator_out1_23 <= Bit_Slice5_out1_2 OR Bit_Slice3_out1_2;

  Bit_Slice2_out1_2 <= Switch_out1_5(3);

  Bit_Slice1_out1_2 <= Switch_out1_5(2);

  Bit_Slice4_out1_2 <= Switch_out1_5(1);

  Start_1_1_out1_2 <= to_unsigned(16#3C#, 6);

  Logical_Operator4_out1_5 <= Bit_Slice2_out1_2 OR Bit_Slice1_out1_2;

  Start_1_2_out1_2 <= to_unsigned(16#3B#, 6);

  
  Switch3_out1_3 <= Start_1_1_out1_2 WHEN Bit_Slice4_out1_2 = '0' ELSE
      Start_1_2_out1_2;

  Start_1_3_out1_2 <= to_unsigned(16#3A#, 6);

  Start_1_4_out1_2 <= to_unsigned(16#39#, 6);

  Logical_Operator2_out1_17 <= Logical_Operator1_out1_31 OR Logical_Operator_out1_23;

  
  Switch2_out1_3 <= Start_1_3_out1_2 WHEN Bit_Slice2_out1_2 = '0' ELSE
      Start_1_4_out1_2;

  
  Switch1_out1_5 <= Switch3_out1_3 WHEN Logical_Operator4_out1_5 = '0' ELSE
      Switch2_out1_3;

  Start_1_5_out1_2 <= to_unsigned(16#38#, 6);

  Start_1_6_out1_2 <= to_unsigned(16#37#, 6);

  
  Switch5_out1_2 <= Start_1_5_out1_2 WHEN Bit_Slice5_out1_2 = '0' ELSE
      Start_1_6_out1_2;

  Start_1_7_out1_2 <= to_unsigned(16#36#, 6);

  Start_1_8_out1_2 <= to_unsigned(16#35#, 6);

  
  Switch7_out1_2 <= Start_1_7_out1_2 WHEN Bit_Slice7_out1_2 = '0' ELSE
      Start_1_8_out1_2;

  Logical_Operator8_out1_12 <= Logical_Operator1_out1_30 OR Logical_Operator7_out1_12;

  
  Switch6_out1_3 <= Switch5_out1_2 WHEN Logical_Operator1_out1_31 = '0' ELSE
      Switch7_out1_2;

  
  Switch4_out1_2 <= Switch1_out1_5 WHEN Logical_Operator2_out1_17 = '0' ELSE
      Switch6_out1_3;

  Start_1_9_out1_5 <= to_unsigned(16#34#, 6);

  Start_1_10_out1_5 <= to_unsigned(16#33#, 6);

  
  Switch10_out1_5 <= Start_1_9_out1_5 WHEN Bit_Slice11_out1_11 = '0' ELSE
      Start_1_10_out1_5;

  Start_1_11_out1_5 <= to_unsigned(16#32#, 6);

  Start_1_12_out1_5 <= to_unsigned(16#31#, 6);

  
  Switch9_out1_5 <= Start_1_11_out1_5 WHEN Bit_Slice9_out1_11 = '0' ELSE
      Start_1_12_out1_5;

  
  Switch8_out1_5 <= Switch10_out1_5 WHEN Logical_Operator5_out1_13 = '0' ELSE
      Switch9_out1_5;

  Start_1_13_out1_5 <= to_unsigned(16#30#, 6);

  Start_1_14_out1_5 <= to_unsigned(16#2F#, 6);

  
  Switch12_out1_6 <= Start_1_13_out1_5 WHEN Bit_Slice12_out1_10 = '0' ELSE
      Start_1_14_out1_5;

  Start_1_15_out1_5 <= to_unsigned(16#2E#, 6);

  Start_1_16_out1_5 <= to_unsigned(16#2D#, 6);

  
  Switch14_out1_5 <= Start_1_15_out1_5 WHEN Bit_Slice14_out1_10 = '0' ELSE
      Start_1_16_out1_5;

  
  Switch13_out1_5 <= Switch12_out1_6 WHEN Logical_Operator3_out1_14 = '0' ELSE
      Switch14_out1_5;

  Logical_Operator_out1_24 <= Logical_Operator8_out1_10 OR Logical_Operator8_out1_11;

  
  Switch11_out1_5 <= Switch8_out1_5 WHEN Logical_Operator1_out1_30 = '0' ELSE
      Switch13_out1_5;

  
  Switch_out1_6 <= Switch4_out1_2 WHEN Logical_Operator8_out1_12 = '0' ELSE
      Switch11_out1_5;

  Start_1_9_out1_6 <= to_unsigned(16#2C#, 6);

  Start_1_10_out1_6 <= to_unsigned(16#2B#, 6);

  
  Switch10_out1_6 <= Start_1_9_out1_6 WHEN Bit_Slice11_out1_10 = '0' ELSE
      Start_1_10_out1_6;

  Start_1_11_out1_6 <= to_unsigned(16#2A#, 6);

  Start_1_12_out1_6 <= to_unsigned(16#29#, 6);

  
  Switch9_out1_6 <= Start_1_11_out1_6 WHEN Bit_Slice9_out1_10 = '0' ELSE
      Start_1_12_out1_6;

  
  Switch8_out1_6 <= Switch10_out1_6 WHEN Logical_Operator5_out1_12 = '0' ELSE
      Switch9_out1_6;

  Start_1_13_out1_6 <= to_unsigned(16#28#, 6);

  Start_1_14_out1_6 <= to_unsigned(16#27#, 6);

  
  Switch12_out1_7 <= Start_1_13_out1_6 WHEN Bit_Slice12_out1_9 = '0' ELSE
      Start_1_14_out1_6;

  Start_1_15_out1_6 <= to_unsigned(16#26#, 6);

  Start_1_16_out1_6 <= to_unsigned(16#25#, 6);

  
  Switch14_out1_6 <= Start_1_15_out1_6 WHEN Bit_Slice14_out1_9 = '0' ELSE
      Start_1_16_out1_6;

  
  Switch13_out1_6 <= Switch12_out1_7 WHEN Logical_Operator3_out1_13 = '0' ELSE
      Switch14_out1_6;

  
  Switch11_out1_6 <= Switch8_out1_6 WHEN Logical_Operator1_out1_29 = '0' ELSE
      Switch13_out1_6;

  Start_1_9_out1_7 <= to_unsigned(16#24#, 6);

  Start_1_10_out1_7 <= to_unsigned(16#23#, 6);

  
  Switch10_out1_7 <= Start_1_9_out1_7 WHEN Bit_Slice11_out1_9 = '0' ELSE
      Start_1_10_out1_7;

  Start_1_11_out1_7 <= to_unsigned(16#22#, 6);

  Start_1_12_out1_7 <= to_unsigned(16#21#, 6);

  
  Switch9_out1_7 <= Start_1_11_out1_7 WHEN Bit_Slice9_out1_9 = '0' ELSE
      Start_1_12_out1_7;

  
  Switch8_out1_7 <= Switch10_out1_7 WHEN Logical_Operator5_out1_11 = '0' ELSE
      Switch9_out1_7;

  Start_1_13_out1_7 <= to_unsigned(16#20#, 6);

  Start_1_14_out1_7 <= to_unsigned(16#1F#, 6);

  
  Switch12_out1_8 <= Start_1_13_out1_7 WHEN Bit_Slice12_out1_8 = '0' ELSE
      Start_1_14_out1_7;

  Start_1_15_out1_7 <= to_unsigned(16#1E#, 6);

  Start_1_16_out1_7 <= to_unsigned(16#1D#, 6);

  
  Switch14_out1_7 <= Start_1_15_out1_7 WHEN Bit_Slice14_out1_8 = '0' ELSE
      Start_1_16_out1_7;

  
  Switch13_out1_7 <= Switch12_out1_8 WHEN Logical_Operator3_out1_12 = '0' ELSE
      Switch14_out1_7;

  
  Switch11_out1_7 <= Switch8_out1_7 WHEN Logical_Operator1_out1_28 = '0' ELSE
      Switch13_out1_7;

  Logical_Operator3_out1_15 <= Logical_Operator1_out1_25 OR Logical_Operator2_out1_13;

  
  Switch2_out1_4 <= Switch11_out1_6 WHEN Logical_Operator8_out1_10 = '0' ELSE
      Switch11_out1_7;

  
  Switch1_out1_6 <= Switch_out1_6 WHEN Logical_Operator_out1_24 = '0' ELSE
      Switch2_out1_4;

  Start_1_9_out1_8 <= to_unsigned(16#1C#, 6);

  Start_1_10_out1_8 <= to_unsigned(16#1B#, 6);

  
  Switch10_out1_8 <= Start_1_9_out1_8 WHEN Bit_Slice11_out1_8 = '0' ELSE
      Start_1_10_out1_8;

  Start_1_11_out1_8 <= to_unsigned(16#1A#, 6);

  Start_1_12_out1_8 <= to_unsigned(16#19#, 6);

  
  Switch9_out1_8 <= Start_1_11_out1_8 WHEN Bit_Slice9_out1_8 = '0' ELSE
      Start_1_12_out1_8;

  
  Switch8_out1_8 <= Switch10_out1_8 WHEN Logical_Operator5_out1_10 = '0' ELSE
      Switch9_out1_8;

  Start_1_13_out1_8 <= to_unsigned(16#18#, 6);

  Start_1_14_out1_8 <= to_unsigned(16#17#, 6);

  
  Switch12_out1_9 <= Start_1_13_out1_8 WHEN Bit_Slice12_out1_7 = '0' ELSE
      Start_1_14_out1_8;

  Start_1_15_out1_8 <= to_unsigned(16#16#, 6);

  Start_1_16_out1_8 <= to_unsigned(16#15#, 6);

  
  Switch14_out1_8 <= Start_1_15_out1_8 WHEN Bit_Slice14_out1_7 = '0' ELSE
      Start_1_16_out1_8;

  
  Switch13_out1_8 <= Switch12_out1_9 WHEN Logical_Operator3_out1_11 = '0' ELSE
      Switch14_out1_8;

  
  Switch11_out1_8 <= Switch8_out1_8 WHEN Logical_Operator1_out1_27 = '0' ELSE
      Switch13_out1_8;

  Start_1_9_out1_9 <= to_unsigned(16#14#, 6);

  Start_1_10_out1_9 <= to_unsigned(16#13#, 6);

  
  Switch10_out1_9 <= Start_1_9_out1_9 WHEN Bit_Slice11_out1_7 = '0' ELSE
      Start_1_10_out1_9;

  Start_1_11_out1_9 <= to_unsigned(16#12#, 6);

  Start_1_12_out1_9 <= to_unsigned(16#11#, 6);

  
  Switch9_out1_9 <= Start_1_11_out1_9 WHEN Bit_Slice9_out1_7 = '0' ELSE
      Start_1_12_out1_9;

  
  Switch8_out1_9 <= Switch10_out1_9 WHEN Logical_Operator5_out1_9 = '0' ELSE
      Switch9_out1_9;

  Start_1_13_out1_9 <= to_unsigned(16#10#, 6);

  Start_1_14_out1_9 <= to_unsigned(16#0F#, 6);

  
  Switch12_out1_10 <= Start_1_13_out1_9 WHEN Bit_Slice12_out1_6 = '0' ELSE
      Start_1_14_out1_9;

  Start_1_15_out1_9 <= to_unsigned(16#0E#, 6);

  Start_1_16_out1_9 <= to_unsigned(16#0D#, 6);

  
  Switch14_out1_9 <= Start_1_15_out1_9 WHEN Bit_Slice14_out1_6 = '0' ELSE
      Start_1_16_out1_9;

  
  Switch13_out1_9 <= Switch12_out1_10 WHEN Logical_Operator3_out1_10 = '0' ELSE
      Switch14_out1_9;

  
  Switch11_out1_9 <= Switch8_out1_9 WHEN Logical_Operator1_out1_26 = '0' ELSE
      Switch13_out1_9;

  
  Switch3_out1_4 <= Switch11_out1_8 WHEN Logical_Operator8_out1_8 = '0' ELSE
      Switch11_out1_9;

  Start_1_9_out1_10 <= to_unsigned(16#0C#, 6);

  Start_1_10_out1_10 <= to_unsigned(16#0B#, 6);

  
  Switch10_out1_10 <= Start_1_9_out1_10 WHEN Bit_Slice11_out1_6 = '0' ELSE
      Start_1_10_out1_10;

  Start_1_11_out1_10 <= to_unsigned(16#0A#, 6);

  Start_1_12_out1_10 <= to_unsigned(16#09#, 6);

  
  Switch9_out1_10 <= Start_1_11_out1_10 WHEN Bit_Slice9_out1_6 = '0' ELSE
      Start_1_12_out1_10;

  
  Switch8_out1_10 <= Switch10_out1_10 WHEN Logical_Operator5_out1_8 = '0' ELSE
      Switch9_out1_10;

  Start_1_13_out1_10 <= to_unsigned(16#08#, 6);

  Start_1_14_out1_10 <= to_unsigned(16#07#, 6);

  
  Switch12_out1_11 <= Start_1_13_out1_10 WHEN Bit_Slice12_out1_5 = '0' ELSE
      Start_1_14_out1_10;

  Start_1_15_out1_10 <= to_unsigned(16#06#, 6);

  Start_1_16_out1_10 <= to_unsigned(16#05#, 6);

  
  Switch14_out1_10 <= Start_1_15_out1_10 WHEN Bit_Slice14_out1_5 = '0' ELSE
      Start_1_16_out1_10;

  
  Switch13_out1_10 <= Switch12_out1_11 WHEN Logical_Operator3_out1_9 = '0' ELSE
      Switch14_out1_10;

  
  Switch11_out1_10 <= Switch8_out1_10 WHEN Logical_Operator1_out1_24 = '0' ELSE
      Switch13_out1_10;

  Start_1_9_out1_11 <= to_unsigned(16#04#, 6);

  Start_1_10_out1_11 <= to_unsigned(16#03#, 6);

  
  Switch10_out1_11 <= Start_1_9_out1_11 WHEN Bit_Slice11_out1_5 = '0' ELSE
      Start_1_10_out1_11;

  Start_1_11_out1_11 <= to_unsigned(16#02#, 6);

  Start_1_12_out1_11 <= to_unsigned(16#01#, 6);

  
  Switch9_out1_11 <= Start_1_11_out1_11 WHEN Bit_Slice9_out1_5 = '0' ELSE
      Start_1_12_out1_11;

  
  Switch8_out1_11 <= Switch10_out1_11 WHEN Logical_Operator5_out1_7 = '0' ELSE
      Switch9_out1_11;

  Start_1_13_out1_11 <= to_unsigned(16#00#, 6);

  
  Switch11_out1_11 <= Switch8_out1_11 WHEN Bit_Slice10_out1_5 = '0' ELSE
      Start_1_13_out1_11;

  
  Switch4_out1_3 <= Switch11_out1_10 WHEN Logical_Operator8_out1_6 = '0' ELSE
      Switch11_out1_11;

  
  Switch5_out1_3 <= Switch3_out1_4 WHEN Logical_Operator1_out1_25 = '0' ELSE
      Switch4_out1_3;

  
  Switch6_out1_4 <= Switch1_out1_6 WHEN Logical_Operator3_out1_15 = '0' ELSE
      Switch5_out1_3;

  Delay5_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_out1_3 <= to_unsigned(16#00#, 6);
      ELSIF enb = '1' THEN
        Delay5_out1_3 <= Switch6_out1_4;
      END IF;
    END IF;
  END PROCESS Delay5_1_process;


  bitsll_Sum_tmp1_out1 <= Delay4_out1_4 sll to_integer(Delay5_out1_3);

  BitSlice2_out1_2 <= bitsll_Sum_tmp1_out1(60 DOWNTO 27);

  DTC1_out1 <= BitSlice2_out1_2;

  Delay1_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1_3 <= to_unsigned(0, 34);
      ELSIF enb = '1' THEN
        Delay1_out1_3 <= DTC1_out1;
      END IF;
    END IF;
  END PROCESS Delay1_3_process;


  Bit_Concat1_out1_19 <= Compare_To_Zero1_out1_1 & Switch_out1_1;

  reinterpretcast_bitconcat_fi_0_out1_2 <= Bit_Concat1_out1_19;

  Delay1_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1_4 <= to_unsigned(16#000000#, 24);
      ELSIF enb = '1' THEN
        Delay1_out1_4 <= reinterpretcast_bitconcat_fi_0_out1_2;
      END IF;
    END IF;
  END PROCESS Delay1_4_process;


  Delay_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_reg <= (OTHERS => to_unsigned(16#000000#, 24));
      ELSIF enb = '1' THEN
        Delay_reg(0) <= Delay1_out1_4;
        Delay_reg(1 TO 16) <= Delay_reg(0 TO 15);
      END IF;
    END IF;
  END PROCESS Delay_1_process;

  Delay_out1_1 <= Delay_reg(16);

  Product_out1 <= Delay1_out1_3 * Delay_out1_1;

  Delay2_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_reg_1 <= (OTHERS => to_unsigned(0, 58));
      ELSIF enb = '1' THEN
        Delay2_reg_1(0) <= Product_out1;
        Delay2_reg_1(1) <= Delay2_reg_1(0);
      END IF;
    END IF;
  END PROCESS Delay2_1_process;

  Delay2_out1_1 <= Delay2_reg_1(1);

  Bit_Slice_out1_2 <= Delay2_out1_1(57);

  padding_out1 <= to_unsigned(16#00#, 5);

  
  Compare_To_Zero_out1_2 <= '1' WHEN Delay4_out1_4 = to_unsigned(0, 61) ELSE
      '0';

  alpha10_out1 <= to_signed(16#009#, 11);

  Bit_Concat_out1_30 <= padding_out1 & Delay5_out1_3;

  DTC_out1_1 <= signed(Bit_Concat_out1_30);

  alpha80_cast_pos_like_exp_out_out1 <= alpha10_out1 - DTC_out1_1;

  alpha127_out1_1 <= to_signed(-16#07F#, 11);

  
  Switch1_out1_7 <= alpha80_cast_pos_like_exp_out_out1 WHEN Compare_To_Zero_out1_2 = '0' ELSE
      alpha127_out1_1;

  Delay1_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1_5 <= to_signed(16#000#, 11);
      ELSIF enb = '1' THEN
        Delay1_out1_5 <= Switch1_out1_7;
      END IF;
    END IF;
  END PROCESS Delay1_5_process;


  alpha1_out1_2 <= to_unsigned(16#0#, 3);

  C_out1_3 <= to_unsigned(16#01#, 8);

  
  if_Exponent_0_out1_1 <= C_out1_3 WHEN Compare_To_Zero1_out1_1 = '0' ELSE
      Delay4_out1_1;

  Bit_Concat1_out1_20 <= alpha1_out1_2 & if_Exponent_0_out1_1;

  reinterpretcast_bitconcat_fi_0_1_out1_1 <= signed(Bit_Concat1_out1_20);

  Delay2_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1_2 <= to_signed(16#000#, 11);
      ELSIF enb = '1' THEN
        Delay2_out1_2 <= reinterpretcast_bitconcat_fi_0_1_out1_1;
      END IF;
    END IF;
  END PROCESS Delay2_2_process;


  Delay_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_reg_1 <= (OTHERS => to_signed(16#000#, 11));
      ELSIF enb = '1' THEN
        Delay_reg_1(0) <= Delay2_out1_2;
        Delay_reg_1(1 TO 16) <= Delay_reg_1(0 TO 15);
      END IF;
    END IF;
  END PROCESS Delay_2_process;

  Delay_out1_2 <= Delay_reg_1(16);

  Add_out1_2 <= Delay1_out1_5 + Delay_out1_2;

  Delay5_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_reg <= (OTHERS => to_signed(16#000#, 11));
      ELSIF enb = '1' THEN
        Delay5_reg(0) <= Add_out1_2;
        Delay5_reg(1) <= Delay5_reg(0);
      END IF;
    END IF;
  END PROCESS Delay5_2_process;

  Delay5_out1_4 <= Delay5_reg(1);

  Constant_out1_20 <= to_signed(16#001#, 11);

  Add_out1_3 <= Delay5_out1_4 + Constant_out1_20;

  
  Switch_out1_7 <= Delay5_out1_4 WHEN Bit_Slice_out1_2 = '0' ELSE
      Add_out1_3;

  
  exp_tmp_upperBound_out1 <= '1' WHEN if_aSign_out1 > Switch_out1_7 ELSE
      '0';

  Delay2_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_out1_3 <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1_3 <= exp_tmp_upperBound_out1;
      END IF;
    END IF;
  END PROCESS Delay2_3_process;


  Delay18_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay18_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay18_reg(0) <= Delay2_out1_3;
        Delay18_reg(5 DOWNTO 1) <= Delay18_reg(4 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay18_1_process;

  Delay18_out1_1 <= Delay18_reg(5);

  Delay28_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay28_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay28_reg(0) <= Delay18_out1_1;
        Delay28_reg(3 DOWNTO 1) <= Delay28_reg(2 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay28_process;

  Delay28_out1 <= Delay28_reg(3);

  Delay1_6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1_6 <= '0';
      ELSIF enb = '1' THEN
        Delay1_out1_6 <= Delay2_out1;
      END IF;
    END IF;
  END PROCESS Delay1_6_process;


  Delay15_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay15_reg_1 <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay15_reg_1(0) <= Delay1_out1_6;
        Delay15_reg_1(5 DOWNTO 1) <= Delay15_reg_1(4 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay15_2_process;

  Delay15_out1_2 <= Delay15_reg_1(5);

  Delay25_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay25_reg_1 <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay25_reg_1(0) <= Delay15_out1_2;
        Delay25_reg_1(3 DOWNTO 1) <= Delay25_reg_1(2 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay25_3_process;

  Delay25_out1_3 <= Delay25_reg_1(3);

  C1_out1_1 <= to_unsigned(16#FF#, 8);

  C_out1_4 <= to_unsigned(16#00#, 8);

  
  if_aSign_out1_1 <= C1_out1_1 WHEN Delay25_out1_3 = '0' ELSE
      C_out1_4;

  alpha0_out1_7 <= '0';

  alpha127_out1_2 <= to_signed(16#07F#, 10);

  alpha1_out1_3 <= '0';

  C4_out1 <= to_unsigned(0, 39);

  cast_cfType_ExponentBias_lik_out1_1 <= to_signed(16#07F#, 11);

  exp_tmp_cast_cfType_Exponent_out1 <= Switch_out1_7 - cast_cfType_ExponentBias_lik_out1_1;

  alpha3_out1 <= to_unsigned(16#00#, 8);

  Bit_Slice1_out1_3 <= Delay2_out1_1(56 DOWNTO 0);

  Bit_Slice2_out1_3 <= Delay2_out1_1(57 DOWNTO 1);

  
  Switch1_out1_8 <= Bit_Slice1_out1_3 WHEN Bit_Slice_out1_2 = '0' ELSE
      Bit_Slice2_out1_3;

  Data_Type_Conversion2_out1 <= Switch1_out1_8;

  Bit_Concat3_out1_29 <= alpha3_out1 & Data_Type_Conversion2_out1;

  cast_cfType_ExponentBias_lik_out1_2 <= to_unsigned(16#7F#, 8);

  cast_cfType_ExponentBias_lik_sub_cast <= unsigned(Switch_out1_7(7 DOWNTO 0));
  cast_cfType_ExponentBias_lik_out1_3 <= cast_cfType_ExponentBias_lik_out1_2 - cast_cfType_ExponentBias_lik_sub_cast;

  DTC1_out1_1 <= cast_cfType_ExponentBias_lik_out1_3(6 DOWNTO 0);

  BitSlice_out1_18 <= exp_tmp_cast_cfType_Exponent_out1(10);

  DTC2_out1 <= unsigned(exp_tmp_cast_cfType_Exponent_out1(6 DOWNTO 0));

  bitsll_tmp1_shift_length_out1 <= Bit_Concat3_out1_29 sll to_integer(DTC2_out1);

  Bit_Slice1_out1_4 <= bitsll_tmp1_shift_length_out1(64 DOWNTO 26);

  reinterpretcast_bitconcat_tmp2_out1 <= Bit_Slice1_out1_4;

  alpha2_out1_16 <= to_unsigned(16#00#, 8);

  dynamic_shift_cast_2 <= resize(DTC1_out1_1, 8);
  Shift_Arithmetic_out1 <= SHIFT_RIGHT(Data_Type_Conversion2_out1, to_integer(dynamic_shift_cast_2));

  Bit_Slice_out1_3 <= Shift_Arithmetic_out1(56 DOWNTO 26);

  Bit_Concat2_out1_17 <= alpha2_out1_16 & Bit_Slice_out1_3;

  reinterpretcast_bitconcat_fi_0_out1_3 <= Bit_Concat2_out1_17;

  
  if_shift_sign_out1 <= reinterpretcast_bitconcat_tmp2_out1 WHEN BitSlice_out1_18 = '0' ELSE
      reinterpretcast_bitconcat_fi_0_out1_3;

  
  if_exp_tmp_upperBound_1_out1 <= C4_out1 WHEN exp_tmp_upperBound_out1 = '0' ELSE
      if_shift_sign_out1;

  Delay3_7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_out1_7 <= to_unsigned(0, 39);
      ELSIF enb = '1' THEN
        Delay3_out1_7 <= if_exp_tmp_upperBound_1_out1;
      END IF;
    END IF;
  END PROCESS Delay3_7_process;


  BitSlice2_out1_3 <= Delay3_out1_7(38 DOWNTO 30);

  Bit_Concat1_out1_21 <= alpha1_out1_3 & BitSlice2_out1_3;

  reinterpretcast_bitconcat_fi_0_out1_4 <= signed(Bit_Concat1_out1_21);

  alpha127_exp_tmp_out1 <= alpha127_out1_2 + reinterpretcast_bitconcat_fi_0_out1_4;

  cast_1_like_mant_frac_out1 <= to_signed(1073741824, 32);

  alpha0_out1_8 <= to_unsigned(16#0#, 2);

  BitSlice_out1_19 <= Delay3_out1_7(29 DOWNTO 0);

  Bit_Concat_out1_31 <= alpha0_out1_8 & BitSlice_out1_19;

  reinterpretcast_bitconcat_fi_0_out1_5 <= signed(Bit_Concat_out1_31);

  cast_1_like_mant_frac_m_out1 <= cast_1_like_mant_frac_out1 - reinterpretcast_bitconcat_fi_0_out1_5;

  BitSlice1_out1_17 <= cast_1_like_mant_frac_m_out1(30);

  Logical_Operator_out1_25 <=  NOT BitSlice1_out1_17;

  C1_out1_2 <= to_signed(16#07F#, 10);

  C_out1_5 <= to_signed(16#07E#, 10);

  
  if_sticky_out1 <= C1_out1_2 WHEN Logical_Operator_out1_25 = '0' ELSE
      C_out1_5;

  exp_adj_exp_tmp_out1 <= if_sticky_out1 - reinterpretcast_bitconcat_fi_0_out1_4;

  
  if_aSign_1_out1 <= alpha127_exp_tmp_out1 WHEN Delay1_out1_6 = '0' ELSE
      exp_adj_exp_tmp_out1;

  Delay16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay16_reg <= (OTHERS => to_signed(16#000#, 10));
      ELSIF enb = '1' THEN
        Delay16_reg(0) <= if_aSign_1_out1;
        Delay16_reg(1 TO 5) <= Delay16_reg(0 TO 4);
      END IF;
    END IF;
  END PROCESS Delay16_process;

  Delay16_out1 <= Delay16_reg(5);

  Delay26_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay26_reg <= (OTHERS => to_signed(16#000#, 10));
      ELSIF enb = '1' THEN
        Delay26_reg(0) <= Delay16_out1;
        Delay26_reg(1 TO 3) <= Delay26_reg(0 TO 2);
      END IF;
    END IF;
  END PROCESS Delay26_1_process;

  Delay26_out1_1 <= Delay26_reg(3);

  
  exp_out_0_out1 <= '1' WHEN Delay26_out1_1 > to_signed(16#000#, 10) ELSE
      '0';

  C2_out1 <= to_unsigned(16#000000#, 24);

  Logical_Operator1_out1_32 <= Delay1_out1_6 AND Logical_Operator_out1_25;

  
  if_sticky_1_out1 <= reinterpretcast_bitconcat_fi_0_out1_5 WHEN Logical_Operator1_out1_32 = '0' ELSE
      cast_1_like_mant_frac_m_out1;

  bitsll_mant_frac_1_out1 <= if_sticky_1_out1 sll 1;

  BitSlice_out1_20 <= bitsll_mant_frac_1_out1(30);

  Log2Table_1_out1 <= to_signed(-1256197404, 32);

  w_Log2Table_1_out1 <= bitsll_mant_frac_1_out1 + Log2Table_1_out1;

  
  if_bitget_w_w_WordLength_1_out1 <= bitsll_mant_frac_1_out1 WHEN BitSlice_out1_20 = '0' ELSE
      w_Log2Table_1_out1;

  Delay12_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay12_out1_3 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay12_out1_3 <= if_bitget_w_w_WordLength_1_out1;
      END IF;
    END IF;
  END PROCESS Delay12_3_process;


  bitsll_w_1_out1_16 <= Delay12_out1_3 sll 1;

  BitSlice1_out1_18 <= bitsll_w_1_out1_16(30);

  BitSlice_out1_21 <= bitsll_w_1_out1_16(31);

  alphabitget_w_w_WordLength_1_out1 <= BitSlice1_out1_18 XOR BitSlice_out1_21;

  Log2Table_int32_2_out1 <= to_signed(-1382670640, 32);

  Log2MinusTable_int32_2_out1 <= to_signed(1782572486, 32);

  
  if_bitget_w_w_WordLength_0_out1 <= Log2Table_int32_2_out1 WHEN BitSlice_out1_21 = '0' ELSE
      Log2MinusTable_int32_2_out1;

  w_Log2MinusTable_int32_2_1_out1 <= bitsll_w_1_out1_16 + if_bitget_w_w_WordLength_0_out1;

  
  if_bitget_w_w_WordLength_1_out1_1 <= bitsll_w_1_out1_16 WHEN alphabitget_w_w_WordLength_1_out1 = '0' ELSE
      w_Log2MinusTable_int32_2_1_out1;

  bitsll_w_1_out1_17 <= if_bitget_w_w_WordLength_1_out1_1 sll 1;

  BitSlice1_out1_19 <= bitsll_w_1_out1_17(30);

  BitSlice_out1_22 <= bitsll_w_1_out1_17(31);

  alphabitget_w_w_WordLength_1_out1_1 <= BitSlice1_out1_19 XOR BitSlice_out1_22;

  Log2Table_int32_3_out1_1 <= to_signed(-1459644648, 32);

  Log2MinusTable_int32_3_out1_1 <= to_signed(1654808618, 32);

  
  if_bitget_w_w_WordLength_0_out1_1 <= Log2Table_int32_3_out1_1 WHEN BitSlice_out1_22 = '0' ELSE
      Log2MinusTable_int32_3_out1_1;

  w_Log2MinusTable_int32_2_out1 <= bitsll_w_1_out1_17 + if_bitget_w_w_WordLength_0_out1_1;

  
  if_bitget_w_w_WordLength_1_out1_2 <= bitsll_w_1_out1_17 WHEN alphabitget_w_w_WordLength_1_out1_1 = '0' ELSE
      w_Log2MinusTable_int32_2_out1;

  Delay11_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay11_out1_2 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay11_out1_2 <= if_bitget_w_w_WordLength_1_out1_2;
      END IF;
    END IF;
  END PROCESS Delay11_2_process;


  bitsll_w_1_out1_18 <= Delay11_out1_2 sll 1;

  BitSlice1_out1_20 <= bitsll_w_1_out1_18(30);

  BitSlice_out1_23 <= bitsll_w_1_out1_18(31);

  alphabitget_w_w_WordLength_1_out1_2 <= BitSlice1_out1_20 XOR BitSlice_out1_23;

  Log2Table_int32_4_out1_1 <= to_signed(-1502600172, 32);

  Log2MinusTable_int32_4_out1_1 <= to_signed(1599607388, 32);

  
  if_bitget_w_w_WordLength_0_out1_2 <= Log2Table_int32_4_out1_1 WHEN BitSlice_out1_23 = '0' ELSE
      Log2MinusTable_int32_4_out1_1;

  w_Log2MinusTable_int32_2_out1_1 <= bitsll_w_1_out1_18 + if_bitget_w_w_WordLength_0_out1_2;

  
  if_bitget_w_w_WordLength_1_out1_3 <= bitsll_w_1_out1_18 WHEN alphabitget_w_w_WordLength_1_out1_2 = '0' ELSE
      w_Log2MinusTable_int32_2_out1_1;

  bitsll_w_1_out1_19 <= if_bitget_w_w_WordLength_1_out1_3 sll 1;

  BitSlice1_out1_21 <= bitsll_w_1_out1_19(30);

  BitSlice_out1_24 <= bitsll_w_1_out1_19(31);

  alphabitget_w_w_WordLength_1_out1_3 <= BitSlice1_out1_21 XOR BitSlice_out1_24;

  Log2Table_int32_5_out1_1 <= to_signed(-1525370326, 32);

  Log2MinusTable_int32_5_out1_1 <= to_signed(1573802792, 32);

  
  if_bitget_w_w_WordLength_0_out1_3 <= Log2Table_int32_5_out1_1 WHEN BitSlice_out1_24 = '0' ELSE
      Log2MinusTable_int32_5_out1_1;

  w_Log2MinusTable_int32_2_out1_2 <= bitsll_w_1_out1_19 + if_bitget_w_w_WordLength_0_out1_3;

  
  if_bitget_w_w_WordLength_1_out1_4 <= bitsll_w_1_out1_19 WHEN alphabitget_w_w_WordLength_1_out1_3 = '0' ELSE
      w_Log2MinusTable_int32_2_out1_2;

  Delay13_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay13_out1_3 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay13_out1_3 <= if_bitget_w_w_WordLength_1_out1_4;
      END IF;
    END IF;
  END PROCESS Delay13_3_process;


  bitsll_w_1_out1_20 <= Delay13_out1_3 sll 1;

  BitSlice1_out1_22 <= bitsll_w_1_out1_20(30);

  BitSlice_out1_25 <= bitsll_w_1_out1_20(31);

  alphabitget_w_w_WordLength_1_out1_4 <= BitSlice1_out1_22 XOR BitSlice_out1_25;

  Log2Table_int32_6_out1_1 <= to_signed(-1537104408, 32);

  Log2MinusTable_int32_6_out1_1 <= to_signed(1561311768, 32);

  
  if_bitget_w_w_WordLength_0_out1_4 <= Log2Table_int32_6_out1_1 WHEN BitSlice_out1_25 = '0' ELSE
      Log2MinusTable_int32_6_out1_1;

  w_Log2MinusTable_int32_2_out1_3 <= bitsll_w_1_out1_20 + if_bitget_w_w_WordLength_0_out1_4;

  
  if_bitget_w_w_WordLength_1_out1_5 <= bitsll_w_1_out1_20 WHEN alphabitget_w_w_WordLength_1_out1_4 = '0' ELSE
      w_Log2MinusTable_int32_2_out1_3;

  bitsll_w_1_out1_21 <= if_bitget_w_w_WordLength_1_out1_5 sll 1;

  BitSlice1_out1_23 <= bitsll_w_1_out1_21(30);

  BitSlice_out1_26 <= bitsll_w_1_out1_21(31);

  alphabitget_w_w_WordLength_1_out1_5 <= BitSlice1_out1_23 XOR BitSlice_out1_26;

  Log2Table_int32_7_out1_1 <= to_signed(-1543062236, 32);

  Log2MinusTable_int32_7_out1_1 <= to_signed(1555164808, 32);

  
  if_bitget_w_w_WordLength_0_out1_5 <= Log2Table_int32_7_out1_1 WHEN BitSlice_out1_26 = '0' ELSE
      Log2MinusTable_int32_7_out1_1;

  w_Log2MinusTable_int32_2_out1_4 <= bitsll_w_1_out1_21 + if_bitget_w_w_WordLength_0_out1_5;

  
  if_bitget_w_w_WordLength_1_out1_6 <= bitsll_w_1_out1_21 WHEN alphabitget_w_w_WordLength_1_out1_5 = '0' ELSE
      w_Log2MinusTable_int32_2_out1_4;

  Delay15_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay15_out1_3 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay15_out1_3 <= if_bitget_w_w_WordLength_1_out1_6;
      END IF;
    END IF;
  END PROCESS Delay15_3_process;


  bitsll_w_1_out1_22 <= Delay15_out1_3 sll 1;

  BitSlice1_out1_24 <= bitsll_w_1_out1_22(30);

  BitSlice_out1_27 <= bitsll_w_1_out1_22(31);

  alphabitget_w_w_WordLength_1_out1_6 <= BitSlice1_out1_24 XOR BitSlice_out1_27;

  Log2Table_int32_8_out1_1 <= to_signed(-1546064310, 32);

  Log2MinusTable_int32_8_out1_1 <= to_signed(1552115458, 32);

  
  if_bitget_w_w_WordLength_0_out1_6 <= Log2Table_int32_8_out1_1 WHEN BitSlice_out1_27 = '0' ELSE
      Log2MinusTable_int32_8_out1_1;

  w_Log2MinusTable_int32_2_out1_5 <= bitsll_w_1_out1_22 + if_bitget_w_w_WordLength_0_out1_6;

  
  if_bitget_w_w_WordLength_1_out1_7 <= bitsll_w_1_out1_22 WHEN alphabitget_w_w_WordLength_1_out1_6 = '0' ELSE
      w_Log2MinusTable_int32_2_out1_5;

  bitsll_w_1_out1_23 <= if_bitget_w_w_WordLength_1_out1_7 sll 1;

  BitSlice1_out1_25 <= bitsll_w_1_out1_23(30);

  BitSlice_out1_28 <= bitsll_w_1_out1_23(31);

  alphabitget_w_w_WordLength_1_out1_7 <= BitSlice1_out1_25 XOR BitSlice_out1_28;

  Log2Table_int32_9_out1_1 <= to_signed(-1547571196, 32);

  Log2MinusTable_int32_9_out1_1 <= to_signed(1550596752, 32);

  
  if_bitget_w_w_WordLength_0_out1_7 <= Log2Table_int32_9_out1_1 WHEN BitSlice_out1_28 = '0' ELSE
      Log2MinusTable_int32_9_out1_1;

  w_Log2MinusTable_int32_2_out1_6 <= bitsll_w_1_out1_23 + if_bitget_w_w_WordLength_0_out1_7;

  
  if_bitget_w_w_WordLength_1_out1_8 <= bitsll_w_1_out1_23 WHEN alphabitget_w_w_WordLength_1_out1_7 = '0' ELSE
      w_Log2MinusTable_int32_2_out1_6;

  Delay17_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay17_out1_3 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay17_out1_3 <= if_bitget_w_w_WordLength_1_out1_8;
      END IF;
    END IF;
  END PROCESS Delay17_3_process;


  bitsll_w_1_out1_24 <= Delay17_out1_3 sll 1;

  BitSlice1_out1_26 <= bitsll_w_1_out1_24(30);

  BitSlice_out1_29 <= bitsll_w_1_out1_24(31);

  alphabitget_w_w_WordLength_1_out1_8 <= BitSlice1_out1_26 XOR BitSlice_out1_29;

  Log2Table_int32_10_out1_1 <= to_signed(-1548326110, 32);

  Log2MinusTable_int32_10_out1_1 <= to_signed(1549838886, 32);

  
  if_bitget_w_w_WordLength_0_out1_8 <= Log2Table_int32_10_out1_1 WHEN BitSlice_out1_29 = '0' ELSE
      Log2MinusTable_int32_10_out1_1;

  w_Log2MinusTable_int32_2_out1_7 <= bitsll_w_1_out1_24 + if_bitget_w_w_WordLength_0_out1_8;

  
  if_bitget_w_w_WordLength_1_out1_9 <= bitsll_w_1_out1_24 WHEN alphabitget_w_w_WordLength_1_out1_8 = '0' ELSE
      w_Log2MinusTable_int32_2_out1_7;

  bitsll_w_1_out1_25 <= if_bitget_w_w_WordLength_1_out1_9 sll 1;

  BitSlice1_out1_27 <= bitsll_w_1_out1_25(30);

  BitSlice_out1_30 <= bitsll_w_1_out1_25(31);

  alphabitget_w_w_WordLength_1_out1_9 <= BitSlice1_out1_27 XOR BitSlice_out1_30;

  Log2Table_int32_11_out1_1 <= to_signed(-1548703934, 32);

  Log2MinusTable_int32_11_out1_1 <= to_signed(1549460322, 32);

  
  if_bitget_w_w_WordLength_0_out1_9 <= Log2Table_int32_11_out1_1 WHEN BitSlice_out1_30 = '0' ELSE
      Log2MinusTable_int32_11_out1_1;

  w_Log2MinusTable_int32_2_out1_8 <= bitsll_w_1_out1_25 + if_bitget_w_w_WordLength_0_out1_9;

  
  if_bitget_w_w_WordLength_1_out1_10 <= bitsll_w_1_out1_25 WHEN alphabitget_w_w_WordLength_1_out1_9 = '0' ELSE
      w_Log2MinusTable_int32_2_out1_8;

  Delay19_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay19_out1_3 <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        Delay19_out1_3 <= if_bitget_w_w_WordLength_1_out1_10;
      END IF;
    END IF;
  END PROCESS Delay19_3_process;


  bitsll_w_1_out1_26 <= Delay19_out1_3 sll 1;

  BitSlice1_out1_28 <= bitsll_w_1_out1_26(30);

  BitSlice_out1_31 <= bitsll_w_1_out1_26(31);

  alphabitget_w_w_WordLength_1_out1_10 <= BitSlice1_out1_28 XOR BitSlice_out1_31;

  C1_out1_3 <= to_signed(16#2#, 4);

  C_out1_6 <= to_signed(16#3#, 4);

  
  if_bitget_w_w_WordLength_1_1_out1 <= C1_out1_3 WHEN BitSlice_out1_20 = '0' ELSE
      C_out1_6;

  Delay11_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay11_out1_3 <= to_signed(16#0#, 4);
      ELSIF enb = '1' THEN
        Delay11_out1_3 <= if_bitget_w_w_WordLength_1_1_out1;
      END IF;
    END IF;
  END PROCESS Delay11_3_process;


  Constant_out1_21 <= to_unsigned(16#0#, 2);

  Bit_Concat_out1_32 <= unsigned(Delay11_out1_3) & Constant_out1_21;

  dtc1_out1_2 <= signed(Bit_Concat_out1_32);

  bitsrl_y_int32_2_out1 <= dtc1_out1_2 srl 2;

  y_tmp1_out1 <= dtc1_out1_2 - bitsrl_y_int32_2_out1;

  y_tmp1_out1_1 <= dtc1_out1_2 + bitsrl_y_int32_2_out1;

  
  if_bitget_w_w_WordLength_0_1_out1 <= y_tmp1_out1 WHEN BitSlice1_out1_18 = '0' ELSE
      y_tmp1_out1_1;

  
  if_bitget_w_w_WordLength_1_1_out1_1 <= dtc1_out1_2 WHEN alphabitget_w_w_WordLength_1_out1 = '0' ELSE
      if_bitget_w_w_WordLength_0_1_out1;

  Constant_out1_22 <= to_unsigned(16#0#, 3);

  Bit_Concat_out1_33 <= unsigned(if_bitget_w_w_WordLength_1_1_out1_1) & Constant_out1_22;

  dtc1_out1_3 <= signed(Bit_Concat_out1_33);

  bitsrl_y_int32_2_out1_1 <= dtc1_out1_3 srl 3;

  y_tmp1_out1_2 <= dtc1_out1_3 - bitsrl_y_int32_2_out1_1;

  y_tmp1_out1_3 <= dtc1_out1_3 + bitsrl_y_int32_2_out1_1;

  
  if_bitget_w_w_WordLength_0_1_out1_1 <= y_tmp1_out1_2 WHEN BitSlice1_out1_19 = '0' ELSE
      y_tmp1_out1_3;

  
  if_bitget_w_w_WordLength_1_1_out1_2 <= dtc1_out1_3 WHEN alphabitget_w_w_WordLength_1_out1_1 = '0' ELSE
      if_bitget_w_w_WordLength_0_1_out1_1;

  Delay10_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay10_out1_3 <= to_signed(16#000#, 9);
      ELSIF enb = '1' THEN
        Delay10_out1_3 <= if_bitget_w_w_WordLength_1_1_out1_2;
      END IF;
    END IF;
  END PROCESS Delay10_3_process;


  Constant_out1_23 <= to_unsigned(16#0#, 4);

  Bit_Concat_out1_34 <= unsigned(Delay10_out1_3) & Constant_out1_23;

  dtc1_out1_4 <= signed(Bit_Concat_out1_34);

  bitsrl_y_int32_2_out1_2 <= dtc1_out1_4 srl 4;

  y_tmp1_out1_4 <= dtc1_out1_4 - bitsrl_y_int32_2_out1_2;

  y_tmp1_out1_5 <= dtc1_out1_4 + bitsrl_y_int32_2_out1_2;

  
  if_bitget_w_w_WordLength_0_1_out1_2 <= y_tmp1_out1_4 WHEN BitSlice1_out1_20 = '0' ELSE
      y_tmp1_out1_5;

  
  if_bitget_w_w_WordLength_1_1_out1_3 <= dtc1_out1_4 WHEN alphabitget_w_w_WordLength_1_out1_2 = '0' ELSE
      if_bitget_w_w_WordLength_0_1_out1_2;

  Constant_out1_24 <= to_unsigned(16#00#, 5);

  Bit_Concat_out1_35 <= unsigned(if_bitget_w_w_WordLength_1_1_out1_3) & Constant_out1_24;

  dtc1_out1_5 <= signed(Bit_Concat_out1_35);

  bitsrl_y_int32_2_out1_3 <= dtc1_out1_5 srl 5;

  y_tmp1_sub_cast <= resize(dtc1_out1_5, 32);
  y_tmp1_sub_cast_1 <= resize(bitsrl_y_int32_2_out1_3, 32);
  y_tmp1_sub_temp <= y_tmp1_sub_cast - y_tmp1_sub_cast_1;
  y_tmp1_out1_6 <= y_tmp1_sub_temp(17 DOWNTO 0);

  y_tmp1_out1_7 <= dtc1_out1_5 + bitsrl_y_int32_2_out1_3;

  
  if_bitget_w_w_WordLength_0_1_out1_3 <= y_tmp1_out1_6 WHEN BitSlice1_out1_21 = '0' ELSE
      y_tmp1_out1_7;

  
  if_bitget_w_w_WordLength_1_1_out1_4 <= dtc1_out1_5 WHEN alphabitget_w_w_WordLength_1_out1_3 = '0' ELSE
      if_bitget_w_w_WordLength_0_1_out1_3;

  Delay12_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay12_out1_4 <= to_signed(16#00000#, 18);
      ELSIF enb = '1' THEN
        Delay12_out1_4 <= if_bitget_w_w_WordLength_1_1_out1_4;
      END IF;
    END IF;
  END PROCESS Delay12_4_process;


  Constant_out1_25 <= to_unsigned(16#00#, 6);

  Bit_Concat_out1_36 <= unsigned(Delay12_out1_4) & Constant_out1_25;

  dtc1_out1_6 <= signed(Bit_Concat_out1_36);

  bitsrl_y_int32_2_out1_4 <= dtc1_out1_6 srl 6;

  y_tmp1_sub_cast_2 <= resize(dtc1_out1_6, 32);
  y_tmp1_sub_cast_3 <= resize(bitsrl_y_int32_2_out1_4, 32);
  y_tmp1_sub_temp_1 <= y_tmp1_sub_cast_2 - y_tmp1_sub_cast_3;
  y_tmp1_out1_8 <= y_tmp1_sub_temp_1(23 DOWNTO 0);

  y_tmp1_out1_9 <= dtc1_out1_6 + bitsrl_y_int32_2_out1_4;

  
  if_bitget_w_w_WordLength_0_1_out1_4 <= y_tmp1_out1_8 WHEN BitSlice1_out1_22 = '0' ELSE
      y_tmp1_out1_9;

  
  if_bitget_w_w_WordLength_1_1_out1_5 <= dtc1_out1_6 WHEN alphabitget_w_w_WordLength_1_out1_4 = '0' ELSE
      if_bitget_w_w_WordLength_0_1_out1_4;

  Constant_out1_26 <= to_unsigned(16#00#, 7);

  Bit_Concat_out1_37 <= unsigned(if_bitget_w_w_WordLength_1_1_out1_5) & Constant_out1_26;

  dtc1_out1_7 <= signed(Bit_Concat_out1_37);

  bitsrl_y_int32_2_out1_5 <= dtc1_out1_7 srl 7;

  y_tmp1_out1_10 <= dtc1_out1_7 - bitsrl_y_int32_2_out1_5;

  y_tmp1_out1_11 <= dtc1_out1_7 + bitsrl_y_int32_2_out1_5;

  
  if_bitget_w_w_WordLength_0_1_out1_5 <= y_tmp1_out1_10 WHEN BitSlice1_out1_23 = '0' ELSE
      y_tmp1_out1_11;

  
  if_bitget_w_w_WordLength_1_1_out1_6 <= dtc1_out1_7 WHEN alphabitget_w_w_WordLength_1_out1_5 = '0' ELSE
      if_bitget_w_w_WordLength_0_1_out1_5;

  Delay14_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay14_out1_4 <= to_signed(16#00000000#, 31);
      ELSIF enb = '1' THEN
        Delay14_out1_4 <= if_bitget_w_w_WordLength_1_1_out1_6;
      END IF;
    END IF;
  END PROCESS Delay14_4_process;


  Constant_out1_27 <= to_unsigned(16#0#, 2);

  Bit_Concat_out1_38 <= unsigned(Delay14_out1_4) & Constant_out1_27;

  dtc1_out1_8 <= signed(Bit_Concat_out1_38);

  bitsrl_y_int32_2_out1_6 <= dtc1_out1_8 srl 8;

  y_tmp1_out1_12 <= dtc1_out1_8 - bitsrl_y_int32_2_out1_6;

  y_tmp1_out1_13 <= dtc1_out1_8 + bitsrl_y_int32_2_out1_6;

  
  if_bitget_w_w_WordLength_0_1_out1_6 <= y_tmp1_out1_12 WHEN BitSlice1_out1_24 = '0' ELSE
      y_tmp1_out1_13;

  
  if_bitget_w_w_WordLength_1_1_out1_7 <= dtc1_out1_8 WHEN alphabitget_w_w_WordLength_1_out1_6 = '0' ELSE
      if_bitget_w_w_WordLength_0_1_out1_6;

  bitsrl_y_int32_2_out1_7 <= if_bitget_w_w_WordLength_1_1_out1_7 srl 9;

  y_tmp1_out1_14 <= if_bitget_w_w_WordLength_1_1_out1_7 - bitsrl_y_int32_2_out1_7;

  y_tmp1_out1_15 <= if_bitget_w_w_WordLength_1_1_out1_7 + bitsrl_y_int32_2_out1_7;

  
  if_bitget_w_w_WordLength_0_1_out1_7 <= y_tmp1_out1_14 WHEN BitSlice1_out1_25 = '0' ELSE
      y_tmp1_out1_15;

  
  if_bitget_w_w_WordLength_1_1_out1_8 <= if_bitget_w_w_WordLength_1_1_out1_7 WHEN alphabitget_w_w_WordLength_1_out1_7 = '0' ELSE
      if_bitget_w_w_WordLength_0_1_out1_7;

  Delay16_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay16_out1_1 <= to_signed(0, 33);
      ELSIF enb = '1' THEN
        Delay16_out1_1 <= if_bitget_w_w_WordLength_1_1_out1_8;
      END IF;
    END IF;
  END PROCESS Delay16_1_process;


  bitsrl_y_int32_2_out1_8 <= Delay16_out1_1 srl 10;

  y_tmp1_out1_16 <= Delay16_out1_1 - bitsrl_y_int32_2_out1_8;

  y_tmp1_out1_17 <= Delay16_out1_1 + bitsrl_y_int32_2_out1_8;

  
  if_bitget_w_w_WordLength_0_1_out1_8 <= y_tmp1_out1_16 WHEN BitSlice1_out1_26 = '0' ELSE
      y_tmp1_out1_17;

  
  if_bitget_w_w_WordLength_1_1_out1_9 <= Delay16_out1_1 WHEN alphabitget_w_w_WordLength_1_out1_8 = '0' ELSE
      if_bitget_w_w_WordLength_0_1_out1_8;

  bitsrl_y_int32_2_out1_9 <= if_bitget_w_w_WordLength_1_1_out1_9 srl 11;

  y_tmp1_out1_18 <= if_bitget_w_w_WordLength_1_1_out1_9 - bitsrl_y_int32_2_out1_9;

  y_tmp1_out1_19 <= if_bitget_w_w_WordLength_1_1_out1_9 + bitsrl_y_int32_2_out1_9;

  
  if_bitget_w_w_WordLength_0_1_out1_9 <= y_tmp1_out1_18 WHEN BitSlice1_out1_27 = '0' ELSE
      y_tmp1_out1_19;

  
  if_bitget_w_w_WordLength_1_1_out1_10 <= if_bitget_w_w_WordLength_1_1_out1_9 WHEN alphabitget_w_w_WordLength_1_out1_9 = '0' ELSE
      if_bitget_w_w_WordLength_0_1_out1_9;

  Delay18_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay18_out1_2 <= to_signed(0, 33);
      ELSIF enb = '1' THEN
        Delay18_out1_2 <= if_bitget_w_w_WordLength_1_1_out1_10;
      END IF;
    END IF;
  END PROCESS Delay18_2_process;


  bitsrl_y_int32_2_out1_10 <= Delay18_out1_2 srl 12;

  y_tmp1_out1_20 <= Delay18_out1_2 - bitsrl_y_int32_2_out1_10;

  y_tmp1_out1_21 <= Delay18_out1_2 + bitsrl_y_int32_2_out1_10;

  
  if_bitget_w_w_WordLength_0_1_out1_10 <= y_tmp1_out1_20 WHEN BitSlice1_out1_28 = '0' ELSE
      y_tmp1_out1_21;

  
  if_bitget_w_w_WordLength_1_1_out1_11 <= Delay18_out1_2 WHEN alphabitget_w_w_WordLength_1_out1_10 = '0' ELSE
      if_bitget_w_w_WordLength_0_1_out1_10;

  Delay5_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_out1_5 <= to_signed(0, 33);
      ELSIF enb = '1' THEN
        Delay5_out1_5 <= if_bitget_w_w_WordLength_1_1_out1_11;
      END IF;
    END IF;
  END PROCESS Delay5_3_process;


  Bit_Slice2_out1_4 <= unsigned(Delay5_out1_5(31 DOWNTO 12));

  Data_Type_Conversion1_out1 <= signed(Bit_Slice2_out1_4);

  Delay1_7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1_7 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay1_out1_7 <= Data_Type_Conversion1_out1;
      END IF;
    END IF;
  END PROCESS Delay1_7_process;


  Log2Table_int32_12_out1 <= to_signed(-1548892938, 32);

  Log2MinusTable_int32_12_out1 <= to_signed(1549271132, 32);

  
  if_bitget_w_w_WordLength_0_out1_10 <= Log2Table_int32_12_out1 WHEN BitSlice_out1_31 = '0' ELSE
      Log2MinusTable_int32_12_out1;

  w_Log2MinusTable_int32_2_out1_9 <= bitsll_w_1_out1_26 + if_bitget_w_w_WordLength_0_out1_10;

  
  if_bitget_w_w_WordLength_1_out1_11 <= bitsll_w_1_out1_26 WHEN alphabitget_w_w_WordLength_1_out1_10 = '0' ELSE
      w_Log2MinusTable_int32_2_out1_9;

  Bit_Slice_out1_4 <= unsigned(if_bitget_w_w_WordLength_1_out1_11(31 DOWNTO 12));

  Data_Type_Conversion_out1_2 <= signed(Bit_Slice_out1_4);

  alpha0_69314717873930931_out1 <= to_unsigned(16#0B172#, 17);

  Delay6_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay6_out1_2 <= to_unsigned(16#00000#, 17);
      ELSIF enb = '1' THEN
        Delay6_out1_2 <= alpha0_69314717873930931_out1;
      END IF;
    END IF;
  END PROCESS Delay6_2_process;


  tmp1_0_69314717873930931_cast <= signed(resize(Delay6_out1_2, 18));
  tmp1_0_69314717873930931_mul_temp <= Data_Type_Conversion_out1_2 * tmp1_0_69314717873930931_cast;
  tmp1_0_69314717873930931_cast_1 <= tmp1_0_69314717873930931_mul_temp(36 DOWNTO 0);
  tmp1_0_69314717873930931_out1 <= tmp1_0_69314717873930931_cast_1(35 DOWNTO 18);

  Delay_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_reg_2 <= (OTHERS => to_signed(16#00000#, 18));
      ELSIF enb = '1' THEN
        Delay_reg_2(0) <= tmp1_0_69314717873930931_out1;
        Delay_reg_2(1) <= Delay_reg_2(0);
      END IF;
    END IF;
  END PROCESS Delay_3_process;

  Delay_out1_3 <= Delay_reg_2(1);

  tmp2_y_mul_temp <= Delay1_out1_7 * Delay_out1_3;
  tmp2_y_out1 <= tmp2_y_mul_temp(35 DOWNTO 16);

  Delay3_8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay3_reg <= (OTHERS => to_signed(16#00000#, 20));
      ELSIF enb = '1' THEN
        Delay3_reg(0) <= tmp2_y_out1;
        Delay3_reg(1) <= Delay3_reg(0);
      END IF;
    END IF;
  END PROCESS Delay3_8_process;

  Delay3_out1_8 <= Delay3_reg(1);

  Bit_Slice1_out1_5 <= Delay3_out1_8(19);

  Constant1_out1_4 <= to_signed(16#0000#, 13);

  Constant_out1_28 <= to_signed(-16#0001#, 13);

  
  Switch_out1_8 <= Constant1_out1_4 WHEN Bit_Slice1_out1_5 = '0' ELSE
      Constant_out1_28;

  Delay2_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay2_reg_2 <= (OTHERS => to_signed(0, 33));
      ELSIF enb = '1' THEN
        Delay2_reg_2(0) <= Delay5_out1_5;
        Delay2_reg_2(1 TO 2) <= Delay2_reg_2(0 TO 1);
      END IF;
    END IF;
  END PROCESS Delay2_4_process;

  Delay2_out1_4 <= Delay2_reg_2(2);

  Bit_Concat_out1_39 <= unsigned(Switch_out1_8) & unsigned(Delay3_out1_8);

  DTC2_out1_1 <= signed(Bit_Concat_out1_39);

  y_tmp3_out1 <= Delay2_out1_4 + DTC2_out1_1;

  BitSlice_out1_32 <= unsigned(y_tmp3_out1(29 DOWNTO 6));

  
  if_exp_out_0_1_out1 <= C2_out1 WHEN exp_out_0_out1 = '0' ELSE
      BitSlice_out1_32;

  Bit_Concat_out1_40 <= alpha0_out1_7 & if_exp_out_0_1_out1;

  BitSlice1_out1_29 <= Bit_Concat_out1_40(1);

  Delay17_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay17_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay17_reg(0) <= Logical_Operator_out1_25;
        Delay17_reg(5 DOWNTO 1) <= Delay17_reg(4 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay17_4_process;

  Delay17_out1_4 <= Delay17_reg(5);

  BitSlice_out1_33 <= Bit_Concat_out1_40(0);

  Delay27_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay27_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        Delay27_reg(0) <= Delay17_out1_4;
        Delay27_reg(3 DOWNTO 1) <= Delay27_reg(2 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Delay27_1_process;

  Delay27_out1_1 <= Delay27_reg(3);

  alphabitget_Mant_tmp_2_0_out1 <= BitSlice1_out1_29 OR Delay27_out1_1;

  alphabitget_Mant_tmp_1_0_out1 <= BitSlice_out1_33 AND alphabitget_Mant_tmp_2_0_out1;

  cast_2_like_Mant_tmp_out1 <= to_unsigned(16#0000002#, 25);

  Mant_tmp_cast_2_like_Man_out1 <= resize(resize(Bit_Concat_out1_40, 32) + resize(cast_2_like_Mant_tmp_out1, 32), 25);

  
  if_bitget_Mant_tmp_1_0_out1 <= Bit_Concat_out1_40 WHEN alphabitget_Mant_tmp_1_0_out1 = '0' ELSE
      Mant_tmp_cast_2_like_Man_out1;

  BitSlice2_out1_4 <= if_bitget_Mant_tmp_1_0_out1(24);

  BitSlice2_out1_5 <= Delay26_out1_1(9);

  Logical_Operator_out1_26 <=  NOT BitSlice2_out1_5;

  BitSlice1_out1_30 <= y_tmp3_out1(29);

  bitget_y_cfType_Pow2Intermedi_out1 <= Logical_Operator_out1_26 AND BitSlice1_out1_30;

  C1_out1_4 <= to_unsigned(16#00#, 8);

  C_out1_7 <= to_unsigned(16#01#, 8);

  
  if_bitget_y_cfType_Pow2Intermed_out1 <= C1_out1_4 WHEN bitget_y_cfType_Pow2Intermedi_out1 = '0' ELSE
      C_out1_7;

  DTC_out1_2 <= unsigned(Delay26_out1_1(7 DOWNTO 0));

  
  if_exp_out_0_out1 <= if_bitget_y_cfType_Pow2Intermed_out1 WHEN exp_out_0_out1 = '0' ELSE
      DTC_out1_2;

  cast_1_like_Exp_out1 <= to_unsigned(16#01#, 8);

  Exp_cast_1_like_Exp_out1 <= if_exp_out_0_out1 + cast_1_like_Exp_out1;

  
  if_bitget_Mant_tmp_Mant_tmp_Wor_out1 <= if_exp_out_0_out1 WHEN BitSlice2_out1_4 = '0' ELSE
      Exp_cast_1_like_Exp_out1;

  
  if_in_range_out1 <= if_aSign_out1_1 WHEN Delay28_out1 = '0' ELSE
      if_bitget_Mant_tmp_Mant_tmp_Wor_out1;

  Logical_Operator17_out1 <=  NOT Delay12_out1;

  Delay15_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay15_out1_4 <= to_unsigned(16#00#, 8);
      ELSIF enb = '1' THEN
        Delay15_out1_4 <= Delay1_out1_1;
      END IF;
    END IF;
  END PROCESS Delay15_4_process;


  
  Compare_To_Constant_out1_1 <= '1' WHEN Delay15_out1_4 >= to_unsigned(16#7F#, 8) ELSE
      '0';

  Logical_Operator14_out1 <= Delay5_out1_1 AND Delay12_out1;

  Logical_Operator15_out1 <=  NOT (Compare_To_Constant_out1_1 XOR Delay5_out1_1);

  Logical_Operator18_out1 <= Logical_Operator17_out1 AND Logical_Operator15_out1;

  Logical_Operator16_out1 <= Logical_Operator14_out1 OR Logical_Operator18_out1;

  alpha255_1_out1 <= to_unsigned(16#FF#, 8);

  alpha0_3_out1 <= to_unsigned(16#00#, 8);

  
  Switch18_out1 <= alpha255_1_out1 WHEN Logical_Operator16_out1 = '0' ELSE
      alpha0_3_out1;

  Logical_Operator11_out1 <=  NOT Delay14_out1;

  Logical_Operator12_out1 <= Delay20_out1 OR Logical_Operator11_out1;

  Logical_Operator10_out1 <= Delay11_out1 AND Logical_Operator12_out1;

  alpha255_2_out1 <= to_unsigned(16#FF#, 8);

  alpha127_2_out1 <= to_unsigned(16#7F#, 8);

  
  Switch10_out1_12 <= alpha255_2_out1 WHEN Logical_Operator10_out1 = '0' ELSE
      alpha127_2_out1;

  
  Switch15_out1 <= Switch18_out1 WHEN Logical_Operator6_out1_2 = '0' ELSE
      Switch10_out1_12;

  alpha0_e_out1 <= to_unsigned(16#00#, 8);

  alpha255_out1_1 <= to_unsigned(16#FF#, 8);

  
  Switch5_out1_4 <= alpha0_e_out1 WHEN Delay5_out1_1 = '0' ELSE
      alpha255_out1_1;

  alpha127_out1_3 <= to_unsigned(16#7F#, 8);

  
  Switch4_out1_4 <= Switch5_out1_4 WHEN Delay17_out1 = '0' ELSE
      alpha127_out1_3;

  Delay23_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay23_out1_2 <= to_unsigned(16#00#, 8);
      ELSIF enb = '1' THEN
        Delay23_out1_2 <= Delay4_out1_1;
      END IF;
    END IF;
  END PROCESS Delay23_2_process;


  
  Switch1_out1_9 <= Delay23_out1_2 WHEN Delay13_out1 = '0' ELSE
      Delay15_out1_4;

  
  Switch7_out1_3 <= Switch4_out1_4 WHEN Logical_Operator3_out1_1 = '0' ELSE
      Switch1_out1_9;

  
  Switch13_out1_11 <= Switch15_out1 WHEN Logical_Operator7_out1 = '0' ELSE
      Switch7_out1_3;

  Delay8_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay8_reg_1 <= (OTHERS => to_unsigned(16#00#, 8));
      ELSIF enb = '1' THEN
        Delay8_reg_1(0) <= Switch13_out1_11;
        Delay8_reg_1(1 TO 29) <= Delay8_reg_1(0 TO 28);
      END IF;
    END IF;
  END PROCESS Delay8_2_process;

  Delay8_out1_2 <= Delay8_reg_1(29);

  
  Switch1_out1_10 <= if_in_range_out1 WHEN Delay6_out1 = '0' ELSE
      Delay8_out1_2;

  Constant3_out1 <= to_unsigned(16#00#, 8);

  
  Switch6_out1_5 <= Switch1_out1_10 WHEN Delay1_out1 = '0' ELSE
      Constant3_out1;

  Delay4_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay4_out1_5 <= to_unsigned(16#00#, 8);
      ELSIF enb = '1' THEN
        Delay4_out1_5 <= Switch6_out1_5;
      END IF;
    END IF;
  END PROCESS Delay4_5_process;


  C2_out1_1 <= to_unsigned(16#000000#, 23);

  
  Compare_To_Zero_out1_3 <= '1' WHEN if_bitget_Mant_tmp_Mant_tmp_Wor_out1 = to_unsigned(16#00#, 8) ELSE
      '0';

  Logical_Operator_out1_27 <= Compare_To_Zero_out1_3 OR BitSlice2_out1_4;

  BitSlice3_out1_1 <= if_bitget_Mant_tmp_1_0_out1(23 DOWNTO 1);

  C_out1_8 <= to_unsigned(16#000000#, 23);

  
  if_bitget_Mant_tmp_Mant_tmp_Wor_1_out1 <= BitSlice3_out1_1 WHEN Logical_Operator_out1_27 = '0' ELSE
      C_out1_8;

  
  if_in_range_1_out1 <= C2_out1_1 WHEN Delay28_out1 = '0' ELSE
      if_bitget_Mant_tmp_Mant_tmp_Wor_1_out1;

  alpha0_2_out1 <= to_unsigned(16#000000#, 23);

  alpha1_out1_4 <= to_unsigned(16#400000#, 23);

  alpha2_out1_17 <= to_unsigned(16#000000#, 23);

  
  Switch11_out1_12 <= alpha1_out1_4 WHEN Logical_Operator10_out1 = '0' ELSE
      alpha2_out1_17;

  
  Switch9_out1_12 <= alpha0_2_out1 WHEN Logical_Operator6_out1_2 = '0' ELSE
      Switch11_out1_12;

  alpha0_out1_9 <= to_unsigned(16#000000#, 23);

  Delay24_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay24_out1_2 <= to_unsigned(16#000000#, 23);
      ELSIF enb = '1' THEN
        Delay24_out1_2 <= Switch_out1_1;
      END IF;
    END IF;
  END PROCESS Delay24_2_process;


  Delay16_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay16_out1_2 <= to_unsigned(16#000000#, 23);
      ELSIF enb = '1' THEN
        Delay16_out1_2 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Delay16_2_process;


  
  Switch2_out1_5 <= Delay24_out1_2 WHEN Delay13_out1 = '0' ELSE
      Delay16_out1_2;

  
  Switch8_out1_12 <= alpha0_out1_9 WHEN Logical_Operator3_out1_1 = '0' ELSE
      Switch2_out1_5;

  
  Switch14_out1_11 <= Switch9_out1_12 WHEN Logical_Operator7_out1 = '0' ELSE
      Switch8_out1_12;

  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay7_reg <= (OTHERS => to_unsigned(16#000000#, 23));
      ELSIF enb = '1' THEN
        Delay7_reg(0) <= Switch14_out1_11;
        Delay7_reg(1 TO 29) <= Delay7_reg(0 TO 28);
      END IF;
    END IF;
  END PROCESS Delay7_process;

  Delay7_out1 <= Delay7_reg(29);

  
  Switch2_out1_6 <= if_in_range_1_out1 WHEN Delay6_out1 = '0' ELSE
      Delay7_out1;

  Constant2_out1_4 <= to_unsigned(16#000000#, 23);

  
  Switch5_out1_5 <= Switch2_out1_6 WHEN Delay1_out1 = '0' ELSE
      Constant2_out1_4;

  Delay5_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay5_out1_6 <= to_unsigned(16#000000#, 23);
      ELSIF enb = '1' THEN
        Delay5_out1_6 <= Switch5_out1_5;
      END IF;
    END IF;
  END PROCESS Delay5_4_process;


  -- Combine FP sign, exponent, mantissa into 32 bit word
  nfp_out_pack <= Delay3_out1_2 & Delay4_out1_5 & Delay5_out1_6;

  nfp_out <= std_logic_vector(nfp_out_pack);

END rtl;


-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj1\hdlsrc\gaussianFilter\gaussianF_ip_src_frameBasedGaussianFilter.vhd
-- Created: 2024-06-04 12:57:05
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: gaussianF_ip_src_frameBasedGaussianFilter
-- Source Path: gaussianFilter/gaussianFilter/frameBasedGaussianFilter
-- Hierarchy Level: 1
-- Model version: 8.37
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY gaussianF_ip_src_frameBasedGaussianFilter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        ImageIn                           :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        data_0                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        data_1                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        data_2                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        data_3                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        data_4                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        data_5                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        data_6                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        data_7                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        data_8                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        ImageIn_valid                     :   IN    std_logic;
        Result                            :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
        Result_valid                      :   OUT   std_logic
        );
END gaussianF_ip_src_frameBasedGaussianFilter;


ARCHITECTURE rtl OF gaussianF_ip_src_frameBasedGaussianFilter IS

  -- Component Declarations
  COMPONENT gaussianF_ip_src_ImageIn_NeighborhoodCreator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          ImageIn                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          ImageIn_valid                   :   IN    std_logic;
          in_neighborhood_0               :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          in_neighborhood_1               :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          in_neighborhood_2               :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          in_neighborhood_3               :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          in_neighborhood_4               :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          in_neighborhood_5               :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          in_neighborhood_6               :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          in_neighborhood_7               :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          in_neighborhood_8               :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          in_neighborhood_valid           :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT gaussianF_ip_src_enabledDelayMatch
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          data_0                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_1                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_2                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_3                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_4                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_5                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_6                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_7                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_8                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          ImageIn_valid                   :   IN    std_logic;
          in_neighborhood_valid           :   IN    std_logic;
          data1_0                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          data1_1                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          data1_2                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          data1_3                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          data1_4                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          data1_5                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          data1_6                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          data1_7                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          data1_8                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT gaussianF_ip_src_gaussianKernel
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          in_0                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          in_1                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          in_2                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          in_3                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          in_4                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          in_5                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          in_6                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          in_7                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          in_8                            :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_0                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_1                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_2                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_3                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_4                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_5                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_6                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_7                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          data_8                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          in_valid                        :   IN    std_logic;
          e                               :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
          e_valid                         :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : gaussianF_ip_src_ImageIn_NeighborhoodCreator
    USE ENTITY work.gaussianF_ip_src_ImageIn_NeighborhoodCreator(rtl);

  FOR ALL : gaussianF_ip_src_enabledDelayMatch
    USE ENTITY work.gaussianF_ip_src_enabledDelayMatch(rtl);

  FOR ALL : gaussianF_ip_src_gaussianKernel
    USE ENTITY work.gaussianF_ip_src_gaussianKernel(rtl);

  -- Signals
  SIGNAL in_neighborhood_0                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL in_neighborhood_1                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL in_neighborhood_2                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL in_neighborhood_3                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL in_neighborhood_4                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL in_neighborhood_5                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL in_neighborhood_6                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL in_neighborhood_7                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL in_neighborhood_8                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL in_neighborhood_valid            : std_logic;
  SIGNAL data_0_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL data_1_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL data_2_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL data_3_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL data_4_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL data_5_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL data_6_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL data_7_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL data_8_1                         : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_ImageIn_NeighborhoodCreator : gaussianF_ip_src_ImageIn_NeighborhoodCreator
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              ImageIn => ImageIn,  -- single
              ImageIn_valid => ImageIn_valid,
              in_neighborhood_0 => in_neighborhood_0,  -- single
              in_neighborhood_1 => in_neighborhood_1,  -- single
              in_neighborhood_2 => in_neighborhood_2,  -- single
              in_neighborhood_3 => in_neighborhood_3,  -- single
              in_neighborhood_4 => in_neighborhood_4,  -- single
              in_neighborhood_5 => in_neighborhood_5,  -- single
              in_neighborhood_6 => in_neighborhood_6,  -- single
              in_neighborhood_7 => in_neighborhood_7,  -- single
              in_neighborhood_8 => in_neighborhood_8,  -- single
              in_neighborhood_valid => in_neighborhood_valid
              );

  u_enabledDelayMatch : gaussianF_ip_src_enabledDelayMatch
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              data_0 => data_0,  -- single
              data_1 => data_1,  -- single
              data_2 => data_2,  -- single
              data_3 => data_3,  -- single
              data_4 => data_4,  -- single
              data_5 => data_5,  -- single
              data_6 => data_6,  -- single
              data_7 => data_7,  -- single
              data_8 => data_8,  -- single
              ImageIn_valid => ImageIn_valid,
              in_neighborhood_valid => in_neighborhood_valid,
              data1_0 => data_0_1,  -- single
              data1_1 => data_1_1,  -- single
              data1_2 => data_2_1,  -- single
              data1_3 => data_3_1,  -- single
              data1_4 => data_4_1,  -- single
              data1_5 => data_5_1,  -- single
              data1_6 => data_6_1,  -- single
              data1_7 => data_7_1,  -- single
              data1_8 => data_8_1  -- single
              );

  u_gaussianKernel : gaussianF_ip_src_gaussianKernel
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              in_0 => in_neighborhood_0,  -- single
              in_1 => in_neighborhood_1,  -- single
              in_2 => in_neighborhood_2,  -- single
              in_3 => in_neighborhood_3,  -- single
              in_4 => in_neighborhood_4,  -- single
              in_5 => in_neighborhood_5,  -- single
              in_6 => in_neighborhood_6,  -- single
              in_7 => in_neighborhood_7,  -- single
              in_8 => in_neighborhood_8,  -- single
              data_0 => data_0_1,  -- single
              data_1 => data_1_1,  -- single
              data_2 => data_2_1,  -- single
              data_3 => data_3_1,  -- single
              data_4 => data_4_1,  -- single
              data_5 => data_5_1,  -- single
              data_6 => data_6_1,  -- single
              data_7 => data_7_1,  -- single
              data_8 => data_8_1,  -- single
              in_valid => in_neighborhood_valid,
              e => Result,  -- single
              e_valid => Result_valid
              );

END rtl;


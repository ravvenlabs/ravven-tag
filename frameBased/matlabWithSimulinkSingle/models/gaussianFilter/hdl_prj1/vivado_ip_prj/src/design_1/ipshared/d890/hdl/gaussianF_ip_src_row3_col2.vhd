-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj1\hdlsrc\gaussianFilter\gaussianF_ip_src_row3_col2.vhd
-- Created: 2024-06-04 12:57:05
-- 
-- Generated by MATLAB 24.1, HDL Coder 24.1, and Simulink 24.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: gaussianF_ip_src_row3_col2
-- Source Path: NeighborhoodCreator_3x3/row3_col2
-- Hierarchy Level: 4
-- Model version: 8.37
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY gaussianF_ip_src_row3_col2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        sample_in                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        onEndVals_in                      :   IN    std_logic;
        valid                             :   IN    std_logic;
        isLastSample                      :   IN    std_logic;
        sample                            :   OUT   std_logic_vector(31 DOWNTO 0);  -- single
        onEndVals                         :   OUT   std_logic
        );
END gaussianF_ip_src_row3_col2;


ARCHITECTURE rtl OF gaussianF_ip_src_row3_col2 IS

  -- Signals
  SIGNAL onEndVals_1                      : std_logic;
  SIGNAL onEndVals_delay_1                : std_logic;
  SIGNAL enb_2                            : std_logic;
  SIGNAL sample_delayed_bypass_delay      : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL sample_delayed_reg               : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL sample_delayed_1                 : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  onEndVals_1 <= onEndVals_in OR isLastSample;

  onEndVals_delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        onEndVals_delay_1 <= '0';
      ELSIF enb = '1' THEN
        onEndVals_delay_1 <= onEndVals_1;
      END IF;
    END IF;
  END PROCESS onEndVals_delay_process;


  enb_2 <= valid OR onEndVals_delay_1;

  sample_delayed_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        sample_delayed_bypass_delay <= X"00000000";
        sample_delayed_reg <= X"00000000";
      ELSIF enb = '1' AND enb_2 = '1' THEN
        sample_delayed_bypass_delay <= sample_delayed_reg;
        sample_delayed_reg <= sample_in;
      END IF;
    END IF;
  END PROCESS sample_delayed_process;

  
  sample_delayed_1 <= sample_delayed_reg WHEN enb_2 = '1' ELSE
      sample_delayed_bypass_delay;

  sample <= sample_delayed_1;

  onEndVals <= onEndVals_delay_1;

END rtl;

